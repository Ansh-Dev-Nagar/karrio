/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.1rc
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * The payment details
 * @export
 * @interface ShipmentPurchaseDataPayment
 */
export interface ShipmentPurchaseDataPayment {
    /**
     * The payor type
     * @type {string}
     * @memberof ShipmentPurchaseDataPayment
     */
    paid_by?: ShipmentPurchaseDataPaymentPaidByEnum;
    /**
     * The payment amount currency
     * @type {string}
     * @memberof ShipmentPurchaseDataPayment
     */
    currency?: ShipmentPurchaseDataPaymentCurrencyEnum;
    /**
     * The payor account number
     * @type {string}
     * @memberof ShipmentPurchaseDataPayment
     */
    account_number?: string | null;
}
/**
 * @export
 */
export declare const ShipmentPurchaseDataPaymentPaidByEnum: {
    readonly Sender: "sender";
    readonly Recipient: "recipient";
    readonly ThirdParty: "third_party";
};
export type ShipmentPurchaseDataPaymentPaidByEnum = typeof ShipmentPurchaseDataPaymentPaidByEnum[keyof typeof ShipmentPurchaseDataPaymentPaidByEnum];
/**
 * @export
 */
export declare const ShipmentPurchaseDataPaymentCurrencyEnum: {
    readonly Eur: "EUR";
    readonly Aed: "AED";
    readonly Usd: "USD";
    readonly Xcd: "XCD";
    readonly Amd: "AMD";
    readonly Ang: "ANG";
    readonly Aoa: "AOA";
    readonly Ars: "ARS";
    readonly Aud: "AUD";
    readonly Awg: "AWG";
    readonly Azn: "AZN";
    readonly Bam: "BAM";
    readonly Bbd: "BBD";
    readonly Bdt: "BDT";
    readonly Xof: "XOF";
    readonly Bgn: "BGN";
    readonly Bhd: "BHD";
    readonly Bif: "BIF";
    readonly Bmd: "BMD";
    readonly Bnd: "BND";
    readonly Bob: "BOB";
    readonly Brl: "BRL";
    readonly Bsd: "BSD";
    readonly Btn: "BTN";
    readonly Bwp: "BWP";
    readonly Byn: "BYN";
    readonly Bzd: "BZD";
    readonly Cad: "CAD";
    readonly Cdf: "CDF";
    readonly Xaf: "XAF";
    readonly Chf: "CHF";
    readonly Nzd: "NZD";
    readonly Clp: "CLP";
    readonly Cny: "CNY";
    readonly Cop: "COP";
    readonly Crc: "CRC";
    readonly Cuc: "CUC";
    readonly Cve: "CVE";
    readonly Czk: "CZK";
    readonly Djf: "DJF";
    readonly Dkk: "DKK";
    readonly Dop: "DOP";
    readonly Dzd: "DZD";
    readonly Egp: "EGP";
    readonly Ern: "ERN";
    readonly Etb: "ETB";
    readonly Fjd: "FJD";
    readonly Gbp: "GBP";
    readonly Gel: "GEL";
    readonly Ghs: "GHS";
    readonly Gmd: "GMD";
    readonly Gnf: "GNF";
    readonly Gtq: "GTQ";
    readonly Gyd: "GYD";
    readonly Hkd: "HKD";
    readonly Hnl: "HNL";
    readonly Hrk: "HRK";
    readonly Htg: "HTG";
    readonly Huf: "HUF";
    readonly Idr: "IDR";
    readonly Ils: "ILS";
    readonly Inr: "INR";
    readonly Irr: "IRR";
    readonly Isk: "ISK";
    readonly Jmd: "JMD";
    readonly Jod: "JOD";
    readonly Jpy: "JPY";
    readonly Kes: "KES";
    readonly Kgs: "KGS";
    readonly Khr: "KHR";
    readonly Kmf: "KMF";
    readonly Kpw: "KPW";
    readonly Krw: "KRW";
    readonly Kwd: "KWD";
    readonly Kyd: "KYD";
    readonly Kzt: "KZT";
    readonly Lak: "LAK";
    readonly Lkr: "LKR";
    readonly Lrd: "LRD";
    readonly Lsl: "LSL";
    readonly Lyd: "LYD";
    readonly Mad: "MAD";
    readonly Mdl: "MDL";
    readonly Mga: "MGA";
    readonly Mkd: "MKD";
    readonly Mmk: "MMK";
    readonly Mnt: "MNT";
    readonly Mop: "MOP";
    readonly Mro: "MRO";
    readonly Mur: "MUR";
    readonly Mvr: "MVR";
    readonly Mwk: "MWK";
    readonly Mxn: "MXN";
    readonly Myr: "MYR";
    readonly Mzn: "MZN";
    readonly Nad: "NAD";
    readonly Xpf: "XPF";
    readonly Ngn: "NGN";
    readonly Nio: "NIO";
    readonly Nok: "NOK";
    readonly Npr: "NPR";
    readonly Omr: "OMR";
    readonly Pen: "PEN";
    readonly Pgk: "PGK";
    readonly Php: "PHP";
    readonly Pkr: "PKR";
    readonly Pln: "PLN";
    readonly Pyg: "PYG";
    readonly Qar: "QAR";
    readonly Rsd: "RSD";
    readonly Rub: "RUB";
    readonly Rwf: "RWF";
    readonly Sar: "SAR";
    readonly Sbd: "SBD";
    readonly Scr: "SCR";
    readonly Sdg: "SDG";
    readonly Sek: "SEK";
    readonly Sgd: "SGD";
    readonly Shp: "SHP";
    readonly Sll: "SLL";
    readonly Sos: "SOS";
    readonly Srd: "SRD";
    readonly Ssp: "SSP";
    readonly Std: "STD";
    readonly Syp: "SYP";
    readonly Szl: "SZL";
    readonly Thb: "THB";
    readonly Tjs: "TJS";
    readonly Tnd: "TND";
    readonly Top: "TOP";
    readonly Try: "TRY";
    readonly Ttd: "TTD";
    readonly Twd: "TWD";
    readonly Tzs: "TZS";
    readonly Uah: "UAH";
    readonly Uyu: "UYU";
    readonly Uzs: "UZS";
    readonly Vef: "VEF";
    readonly Vnd: "VND";
    readonly Vuv: "VUV";
    readonly Wst: "WST";
    readonly Yer: "YER";
    readonly Zar: "ZAR";
    readonly Empty: "";
    readonly Null: "null";
};
export type ShipmentPurchaseDataPaymentCurrencyEnum = typeof ShipmentPurchaseDataPaymentCurrencyEnum[keyof typeof ShipmentPurchaseDataPaymentCurrencyEnum];
/**
 * Check if a given object implements the ShipmentPurchaseDataPayment interface.
 */
export declare function instanceOfShipmentPurchaseDataPayment(value: object): boolean;
export declare function ShipmentPurchaseDataPaymentFromJSON(json: any): ShipmentPurchaseDataPayment;
export declare function ShipmentPurchaseDataPaymentFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShipmentPurchaseDataPayment;
export declare function ShipmentPurchaseDataPaymentToJSON(value?: ShipmentPurchaseDataPayment | null): any;
