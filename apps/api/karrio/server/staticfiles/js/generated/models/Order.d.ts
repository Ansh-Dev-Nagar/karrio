/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.1rc
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { LineItem } from './LineItem';
import type { OrderBillingAddress } from './OrderBillingAddress';
import type { OrderShippingFrom } from './OrderShippingFrom';
import type { OrderShippingTo } from './OrderShippingTo';
import type { Shipment } from './Shipment';
/**
 *
 * @export
 * @interface Order
 */
export interface Order {
    /**
     * A unique identifier
     * @type {string}
     * @memberof Order
     */
    id?: string;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof Order
     */
    object_type?: string;
    /**
     * The source' order id.
     * @type {string}
     * @memberof Order
     */
    order_id: string;
    /**
     * The order date. format: `YYYY-MM-DD`
     * @type {string}
     * @memberof Order
     */
    order_date?: string | null;
    /**
     * The order's source.
     * @type {string}
     * @memberof Order
     */
    source?: string;
    /**
     * The order status.
     * @type {string}
     * @memberof Order
     */
    status?: OrderStatusEnum;
    /**
     *
     * @type {OrderShippingTo}
     * @memberof Order
     */
    shipping_to: OrderShippingTo;
    /**
     *
     * @type {OrderShippingFrom}
     * @memberof Order
     */
    shipping_from?: OrderShippingFrom | null;
    /**
     *
     * @type {OrderBillingAddress}
     * @memberof Order
     */
    billing_address?: OrderBillingAddress | null;
    /**
     * The order line items.
     * @type {Array<LineItem>}
     * @memberof Order
     */
    line_items: Array<LineItem>;
    /**
     * <details>
     *         <summary>The options available for the order shipments.</summary>
     *
     *         {
     *             "currency": "USD",
     *             "paid_by": "third_party",
     *             "payment_account_number": "123456789",
     *             "duty_paid_by": "third_party",
     *             "duty_account_number": "123456789",
     *             "invoice_number": "123456789",
     *             "invoice_date": "2020-01-01",
     *             "single_item_per_parcel": true,
     *             "carrier_ids": ["canadapost-test"],
     *             "preferred_service": "fedex_express_saver",
     *         }
     *
     * @type {{ [key: string]: any; }}
     * @memberof Order
     */
    options?: {
        [key: string]: any;
    } | null;
    /**
     * system related metadata.
     * @type {{ [key: string]: any; }}
     * @memberof Order
     */
    meta?: {
        [key: string]: any;
    } | null;
    /**
     * User metadata for the order.
     * @type {{ [key: string]: any; }}
     * @memberof Order
     */
    metadata?: {
        [key: string]: any;
    };
    /**
     * The shipments associated with the order.
     * @type {Array<Shipment>}
     * @memberof Order
     */
    shipments?: Array<Shipment>;
    /**
     * Specify whether the order is in test mode or not.
     * @type {boolean}
     * @memberof Order
     */
    test_mode: boolean;
    /**
     * The shipment creation datetime.<br/>
     *         Date Format: `YYYY-MM-DD HH:MM:SS.mmmmmmz`
     *
     * @type {string}
     * @memberof Order
     */
    created_at: string;
}
/**
 * @export
 */
export declare const OrderStatusEnum: {
    readonly Unfulfilled: "unfulfilled";
    readonly Cancelled: "cancelled";
    readonly Fulfilled: "fulfilled";
    readonly Delivered: "delivered";
    readonly Partial: "partial";
};
export type OrderStatusEnum = typeof OrderStatusEnum[keyof typeof OrderStatusEnum];
/**
 * Check if a given object implements the Order interface.
 */
export declare function instanceOfOrder(value: object): boolean;
export declare function OrderFromJSON(json: any): Order;
export declare function OrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Order;
export declare function OrderToJSON(value?: Order | null): any;
