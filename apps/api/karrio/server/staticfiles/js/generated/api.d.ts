/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023.1rc
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 *
 * @export
 * @interface APIError
 */
export interface APIError {
    /**
     * The error or warning message
     * @type {string}
     * @memberof APIError
     */
    'message'?: string;
    /**
     * The message code
     * @type {string}
     * @memberof APIError
     */
    'code'?: string;
    /**
     * any additional details
     * @type {{ [key: string]: any; }}
     * @memberof APIError
     */
    'details'?: {
        [key: string]: any;
    };
}
/**
 *
 * @export
 * @interface Address
 */
export interface Address {
    /**
     * A unique identifier
     * @type {string}
     * @memberof Address
     */
    'id'?: string;
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof Address
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof Address
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof Address
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof Address
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof Address
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof Address
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof Address
     */
    'country_code': CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof Address
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof Address
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof Address
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof Address
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof Address
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof Address
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof Address
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof Address
     */
    'validate_location'?: boolean | null;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof Address
     */
    'object_type'?: string;
    /**
     *
     * @type {AddressValidation}
     * @memberof Address
     */
    'validation'?: AddressValidation | null;
}
/**
 *
 * @export
 * @interface AddressData
 */
export interface AddressData {
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof AddressData
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof AddressData
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof AddressData
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof AddressData
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof AddressData
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof AddressData
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof AddressData
     */
    'country_code': CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof AddressData
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof AddressData
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof AddressData
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof AddressData
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof AddressData
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof AddressData
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof AddressData
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof AddressData
     */
    'validate_location'?: boolean | null;
}
/**
 *
 * @export
 * @interface AddressList
 */
export interface AddressList {
    /**
     *
     * @type {number}
     * @memberof AddressList
     */
    'count'?: number | null;
    /**
     *
     * @type {string}
     * @memberof AddressList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof AddressList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<Address>}
     * @memberof AddressList
     */
    'results': Array<Address>;
}
/**
 * Specify address validation result
 * @export
 * @interface AddressValidation
 */
export interface AddressValidation {
    /**
     * True if the address is valid
     * @type {boolean}
     * @memberof AddressValidation
     */
    'success': boolean;
    /**
     * validation service details
     * @type {{ [key: string]: any; }}
     * @memberof AddressValidation
     */
    'meta'?: {
        [key: string]: any;
    } | null;
}
/**
 *
 * @export
 * @interface BatchObject
 */
export interface BatchObject {
    /**
     * A unique identifier
     * @type {string}
     * @memberof BatchObject
     */
    'id'?: string;
    /**
     * The batch operation resource status
     * @type {BatchOperationStatus}
     * @memberof BatchObject
     */
    'status': BatchOperationStatus;
    /**
     * Resource processing errors
     * @type {{ [key: string]: any; }}
     * @memberof BatchObject
     */
    'errors'?: {
        [key: string]: any;
    } | null;
}
/**
 *
 * @export
 * @interface BatchOperation
 */
export interface BatchOperation {
    /**
     * A unique identifier
     * @type {string}
     * @memberof BatchOperation
     */
    'id'?: string;
    /**
     *
     * @type {BatchOperationStatus}
     * @memberof BatchOperation
     */
    'status': BatchOperationStatus;
    /**
     *
     * @type {ResourceTypeEnum}
     * @memberof BatchOperation
     */
    'resource_type': ResourceTypeEnum;
    /**
     *
     * @type {Array<BatchObject>}
     * @memberof BatchOperation
     */
    'resources': Array<BatchObject>;
    /**
     *
     * @type {string}
     * @memberof BatchOperation
     */
    'created_at': string;
    /**
     *
     * @type {string}
     * @memberof BatchOperation
     */
    'updated_at': string;
    /**
     *
     * @type {boolean}
     * @memberof BatchOperation
     */
    'test_mode': boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const BatchOperationStatus: {
    readonly Queued: "queued";
    readonly Running: "running";
    readonly Failed: "failed";
    readonly Completed: "completed";
    readonly CompletedWithErrors: "completed_with_errors";
};
export type BatchOperationStatus = typeof BatchOperationStatus[keyof typeof BatchOperationStatus];
/**
 *
 * @export
 * @interface BatchOperations
 */
export interface BatchOperations {
    /**
     *
     * @type {number}
     * @memberof BatchOperations
     */
    'count'?: number | null;
    /**
     *
     * @type {string}
     * @memberof BatchOperations
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BatchOperations
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<BatchOperation>}
     * @memberof BatchOperations
     */
    'results': Array<BatchOperation>;
}
/**
 *
 * @export
 * @interface BatchOrderData
 */
export interface BatchOrderData {
    /**
     * The list of orders to process.
     * @type {Array<OrderData>}
     * @memberof BatchOrderData
     */
    'orders': Array<OrderData>;
}
/**
 *
 * @export
 * @interface BatchShipmentData
 */
export interface BatchShipmentData {
    /**
     * The list of shipments to process.
     * @type {Array<ShipmentData>}
     * @memberof BatchShipmentData
     */
    'shipments': Array<ShipmentData>;
}
/**
 *
 * @export
 * @interface BatchTrackerData
 */
export interface BatchTrackerData {
    /**
     * The list of tracking info to process.
     * @type {Array<TrackingData>}
     * @memberof BatchTrackerData
     */
    'trackers': Array<TrackingData>;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const BlankEnum: {
    readonly Empty: "";
};
export type BlankEnum = typeof BlankEnum[keyof typeof BlankEnum];
/**
 *
 * @export
 * @interface CarrierList
 */
export interface CarrierList {
    /**
     *
     * @type {number}
     * @memberof CarrierList
     */
    'count'?: number | null;
    /**
     *
     * @type {string}
     * @memberof CarrierList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CarrierList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<CarrierSettings>}
     * @memberof CarrierList
     */
    'results': Array<CarrierSettings>;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const CarrierNameEnum: {
    readonly AmazonMws: "amazon_mws";
    readonly Aramex: "aramex";
    readonly Australiapost: "australiapost";
    readonly Canadapost: "canadapost";
    readonly Canpar: "canpar";
    readonly Chronopost: "chronopost";
    readonly DhlExpress: "dhl_express";
    readonly DhlPoland: "dhl_poland";
    readonly DhlUniversal: "dhl_universal";
    readonly Dicom: "dicom";
    readonly Dpdhl: "dpdhl";
    readonly Easypost: "easypost";
    readonly Eshipper: "eshipper";
    readonly Fedex: "fedex";
    readonly Freightcom: "freightcom";
    readonly Generic: "generic";
    readonly Purolator: "purolator";
    readonly Royalmail: "royalmail";
    readonly Sendle: "sendle";
    readonly SfExpress: "sf_express";
    readonly Tnt: "tnt";
    readonly Ups: "ups";
    readonly UpsFreight: "ups_freight";
    readonly Usps: "usps";
    readonly UspsInternational: "usps_international";
    readonly Yanwen: "yanwen";
    readonly Yunexpress: "yunexpress";
};
export type CarrierNameEnum = typeof CarrierNameEnum[keyof typeof CarrierNameEnum];
/**
 *
 * @export
 * @interface CarrierSettings
 */
export interface CarrierSettings {
    /**
     * A unique address identifier
     * @type {string}
     * @memberof CarrierSettings
     */
    'id': string;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof CarrierSettings
     */
    'object_type'?: string;
    /**
     * Indicates a specific carrier configuration name.
     * @type {string}
     * @memberof CarrierSettings
     */
    'carrier_id': string;
    /**
     * Indicates a carrier (type)
     * @type {CarrierNameEnum}
     * @memberof CarrierSettings
     */
    'carrier_name': CarrierNameEnum;
    /**
     * The carrier verbose name.
     * @type {string}
     * @memberof CarrierSettings
     */
    'display_name'?: string;
    /**
     * The test flag indicates whether to use a carrier configured for test.
     * @type {boolean}
     * @memberof CarrierSettings
     */
    'test_mode': boolean;
    /**
     * The active flag indicates whether the carrier account is active or not.
     * @type {boolean}
     * @memberof CarrierSettings
     */
    'active': boolean;
    /**
     * The carrier supported and enabled capabilities.
     * @type {Array<string>}
     * @memberof CarrierSettings
     */
    'capabilities'?: Array<string> | null;
}
/**
 *
 * @export
 * @interface Charge
 */
export interface Charge {
    /**
     * The charge description
     * @type {string}
     * @memberof Charge
     */
    'name'?: string | null;
    /**
     * The charge monetary value
     * @type {number}
     * @memberof Charge
     */
    'amount'?: number | null;
    /**
     * The charge amount currency
     * @type {string}
     * @memberof Charge
     */
    'currency'?: string | null;
}
/**
 *
 * @export
 * @interface Commodity
 */
export interface Commodity {
    /**
     * A unique identifier
     * @type {string}
     * @memberof Commodity
     */
    'id'?: string;
    /**
     * The commodity\'s weight
     * @type {number}
     * @memberof Commodity
     */
    'weight': number;
    /**
     * The commodity\'s weight unit
     * @type {WeightUnitEnum}
     * @memberof Commodity
     */
    'weight_unit': WeightUnitEnum;
    /**
     * A description of the commodity
     * @type {string}
     * @memberof Commodity
     */
    'description'?: string | null;
    /**
     * The commodity\'s quantity (number or item)
     * @type {number}
     * @memberof Commodity
     */
    'quantity'?: number;
    /**
     * The commodity\'s sku number
     * @type {string}
     * @memberof Commodity
     */
    'sku'?: string | null;
    /**
     * The commodity\'s hs_code number
     * @type {string}
     * @memberof Commodity
     */
    'hs_code'?: string | null;
    /**
     * The monetary value of the commodity
     * @type {number}
     * @memberof Commodity
     */
    'value_amount'?: number | null;
    /**
     *
     * @type {CommodityValueCurrency}
     * @memberof Commodity
     */
    'value_currency'?: CommodityValueCurrency | null;
    /**
     *
     * @type {CommodityOriginCountry}
     * @memberof Commodity
     */
    'origin_country'?: CommodityOriginCountry | null;
    /**
     * The id of the related order line item.
     * @type {string}
     * @memberof Commodity
     */
    'parent_id'?: string | null;
    /**
     * <details>         <summary>Commodity user references metadata.</summary>          {             \"part_number\": \"5218487281\",             \"reference1\": \"# ref 1\",             \"reference2\": \"# ref 2\",             \"reference3\": \"# ref 3\",             ...         }
     * @type {{ [key: string]: any; }}
     * @memberof Commodity
     */
    'metadata'?: {
        [key: string]: any;
    } | null;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof Commodity
     */
    'object_type'?: string;
}
/**
 *
 * @export
 * @interface CommodityData
 */
export interface CommodityData {
    /**
     * The commodity\'s weight
     * @type {number}
     * @memberof CommodityData
     */
    'weight': number;
    /**
     * The commodity\'s weight unit
     * @type {WeightUnitEnum}
     * @memberof CommodityData
     */
    'weight_unit': WeightUnitEnum;
    /**
     * A description of the commodity
     * @type {string}
     * @memberof CommodityData
     */
    'description'?: string | null;
    /**
     * The commodity\'s quantity (number or item)
     * @type {number}
     * @memberof CommodityData
     */
    'quantity'?: number;
    /**
     * The commodity\'s sku number
     * @type {string}
     * @memberof CommodityData
     */
    'sku'?: string | null;
    /**
     * The commodity\'s hs_code number
     * @type {string}
     * @memberof CommodityData
     */
    'hs_code'?: string | null;
    /**
     * The monetary value of the commodity
     * @type {number}
     * @memberof CommodityData
     */
    'value_amount'?: number | null;
    /**
     *
     * @type {CommodityValueCurrency}
     * @memberof CommodityData
     */
    'value_currency'?: CommodityValueCurrency | null;
    /**
     *
     * @type {CommodityOriginCountry}
     * @memberof CommodityData
     */
    'origin_country'?: CommodityOriginCountry | null;
    /**
     * The id of the related order line item.
     * @type {string}
     * @memberof CommodityData
     */
    'parent_id'?: string | null;
    /**
     * <details>         <summary>Commodity user references metadata.</summary>          {             \"part_number\": \"5218487281\",             \"reference1\": \"# ref 1\",             \"reference2\": \"# ref 2\",             \"reference3\": \"# ref 3\",             ...         }
     * @type {{ [key: string]: any; }}
     * @memberof CommodityData
     */
    'metadata'?: {
        [key: string]: any;
    } | null;
}
/**
 * @type CommodityOriginCountry
 * The origin or manufacture country
 * @export
 */
export type CommodityOriginCountry = CountryEnum | NullEnum;
/**
 * @type CommodityValueCurrency
 * The currency of the commodity value amount
 * @export
 */
export type CommodityValueCurrency = CurrencyEnum | NullEnum;
/**
 *
 * @export
 * @enum {string}
 */
export declare const ContentTypeEnum: {
    readonly Documents: "documents";
    readonly Gift: "gift";
    readonly Sample: "sample";
    readonly Merchandise: "merchandise";
    readonly ReturnMerchandise: "return_merchandise";
    readonly Other: "other";
};
export type ContentTypeEnum = typeof ContentTypeEnum[keyof typeof ContentTypeEnum];
/**
 *
 * @export
 * @enum {string}
 */
export declare const CountryEnum: {
    readonly Ad: "AD";
    readonly Ae: "AE";
    readonly Af: "AF";
    readonly Ag: "AG";
    readonly Ai: "AI";
    readonly Al: "AL";
    readonly Am: "AM";
    readonly An: "AN";
    readonly Ao: "AO";
    readonly Ar: "AR";
    readonly As: "AS";
    readonly At: "AT";
    readonly Au: "AU";
    readonly Aw: "AW";
    readonly Az: "AZ";
    readonly Ba: "BA";
    readonly Bb: "BB";
    readonly Bd: "BD";
    readonly Be: "BE";
    readonly Bf: "BF";
    readonly Bg: "BG";
    readonly Bh: "BH";
    readonly Bi: "BI";
    readonly Bj: "BJ";
    readonly Bm: "BM";
    readonly Bn: "BN";
    readonly Bo: "BO";
    readonly Br: "BR";
    readonly Bs: "BS";
    readonly Bt: "BT";
    readonly Bw: "BW";
    readonly By: "BY";
    readonly Bz: "BZ";
    readonly Ca: "CA";
    readonly Cd: "CD";
    readonly Cf: "CF";
    readonly Cg: "CG";
    readonly Ch: "CH";
    readonly Ci: "CI";
    readonly Ck: "CK";
    readonly Cl: "CL";
    readonly Cm: "CM";
    readonly Cn: "CN";
    readonly Co: "CO";
    readonly Cr: "CR";
    readonly Cu: "CU";
    readonly Cv: "CV";
    readonly Cy: "CY";
    readonly Cz: "CZ";
    readonly De: "DE";
    readonly Dj: "DJ";
    readonly Dk: "DK";
    readonly Dm: "DM";
    readonly Do: "DO";
    readonly Dz: "DZ";
    readonly Ec: "EC";
    readonly Ee: "EE";
    readonly Eg: "EG";
    readonly Er: "ER";
    readonly Es: "ES";
    readonly Et: "ET";
    readonly Fi: "FI";
    readonly Fj: "FJ";
    readonly Fk: "FK";
    readonly Fm: "FM";
    readonly Fo: "FO";
    readonly Fr: "FR";
    readonly Ga: "GA";
    readonly Gb: "GB";
    readonly Gd: "GD";
    readonly Ge: "GE";
    readonly Gf: "GF";
    readonly Gg: "GG";
    readonly Gh: "GH";
    readonly Gi: "GI";
    readonly Gl: "GL";
    readonly Gm: "GM";
    readonly Gn: "GN";
    readonly Gp: "GP";
    readonly Gq: "GQ";
    readonly Gr: "GR";
    readonly Gt: "GT";
    readonly Gu: "GU";
    readonly Gw: "GW";
    readonly Gy: "GY";
    readonly Hk: "HK";
    readonly Hn: "HN";
    readonly Hr: "HR";
    readonly Ht: "HT";
    readonly Hu: "HU";
    readonly Ic: "IC";
    readonly Id: "ID";
    readonly Ie: "IE";
    readonly Il: "IL";
    readonly In: "IN";
    readonly Iq: "IQ";
    readonly Ir: "IR";
    readonly Is: "IS";
    readonly It: "IT";
    readonly Je: "JE";
    readonly Jm: "JM";
    readonly Jo: "JO";
    readonly Jp: "JP";
    readonly Ke: "KE";
    readonly Kg: "KG";
    readonly Kh: "KH";
    readonly Ki: "KI";
    readonly Km: "KM";
    readonly Kn: "KN";
    readonly Kp: "KP";
    readonly Kr: "KR";
    readonly Kv: "KV";
    readonly Kw: "KW";
    readonly Ky: "KY";
    readonly Kz: "KZ";
    readonly La: "LA";
    readonly Lb: "LB";
    readonly Lc: "LC";
    readonly Li: "LI";
    readonly Lk: "LK";
    readonly Lr: "LR";
    readonly Ls: "LS";
    readonly Lt: "LT";
    readonly Lu: "LU";
    readonly Lv: "LV";
    readonly Ly: "LY";
    readonly Ma: "MA";
    readonly Mc: "MC";
    readonly Md: "MD";
    readonly Me: "ME";
    readonly Mg: "MG";
    readonly Mh: "MH";
    readonly Mk: "MK";
    readonly Ml: "ML";
    readonly Mm: "MM";
    readonly Mn: "MN";
    readonly Mo: "MO";
    readonly Mp: "MP";
    readonly Mq: "MQ";
    readonly Mr: "MR";
    readonly Ms: "MS";
    readonly Mt: "MT";
    readonly Mu: "MU";
    readonly Mv: "MV";
    readonly Mw: "MW";
    readonly Mx: "MX";
    readonly My: "MY";
    readonly Mz: "MZ";
    readonly Na: "NA";
    readonly Nc: "NC";
    readonly Ne: "NE";
    readonly Ng: "NG";
    readonly Ni: "NI";
    readonly Nl: "NL";
    readonly No: "NO";
    readonly Np: "NP";
    readonly Nr: "NR";
    readonly Nu: "NU";
    readonly Nz: "NZ";
    readonly Om: "OM";
    readonly Pa: "PA";
    readonly Pe: "PE";
    readonly Pf: "PF";
    readonly Pg: "PG";
    readonly Ph: "PH";
    readonly Pk: "PK";
    readonly Pl: "PL";
    readonly Pr: "PR";
    readonly Pt: "PT";
    readonly Pw: "PW";
    readonly Py: "PY";
    readonly Qa: "QA";
    readonly Re: "RE";
    readonly Ro: "RO";
    readonly Rs: "RS";
    readonly Ru: "RU";
    readonly Rw: "RW";
    readonly Sa: "SA";
    readonly Sb: "SB";
    readonly Sc: "SC";
    readonly Sd: "SD";
    readonly Se: "SE";
    readonly Sg: "SG";
    readonly Sh: "SH";
    readonly Si: "SI";
    readonly Sk: "SK";
    readonly Sl: "SL";
    readonly Sm: "SM";
    readonly Sn: "SN";
    readonly So: "SO";
    readonly Sr: "SR";
    readonly Ss: "SS";
    readonly St: "ST";
    readonly Sv: "SV";
    readonly Sy: "SY";
    readonly Sz: "SZ";
    readonly Tc: "TC";
    readonly Td: "TD";
    readonly Tg: "TG";
    readonly Th: "TH";
    readonly Tj: "TJ";
    readonly Tl: "TL";
    readonly Tn: "TN";
    readonly To: "TO";
    readonly Tr: "TR";
    readonly Tt: "TT";
    readonly Tv: "TV";
    readonly Tw: "TW";
    readonly Tz: "TZ";
    readonly Ua: "UA";
    readonly Ug: "UG";
    readonly Us: "US";
    readonly Uy: "UY";
    readonly Uz: "UZ";
    readonly Va: "VA";
    readonly Vc: "VC";
    readonly Ve: "VE";
    readonly Vg: "VG";
    readonly Vi: "VI";
    readonly Vn: "VN";
    readonly Vu: "VU";
    readonly Ws: "WS";
    readonly Xb: "XB";
    readonly Xc: "XC";
    readonly Xe: "XE";
    readonly Xm: "XM";
    readonly Xn: "XN";
    readonly Xs: "XS";
    readonly Xy: "XY";
    readonly Ye: "YE";
    readonly Yt: "YT";
    readonly Za: "ZA";
    readonly Zm: "ZM";
    readonly Zw: "ZW";
};
export type CountryEnum = typeof CountryEnum[keyof typeof CountryEnum];
/**
 *
 * @export
 * @enum {string}
 */
export declare const CurrencyEnum: {
    readonly Eur: "EUR";
    readonly Aed: "AED";
    readonly Usd: "USD";
    readonly Xcd: "XCD";
    readonly Amd: "AMD";
    readonly Ang: "ANG";
    readonly Aoa: "AOA";
    readonly Ars: "ARS";
    readonly Aud: "AUD";
    readonly Awg: "AWG";
    readonly Azn: "AZN";
    readonly Bam: "BAM";
    readonly Bbd: "BBD";
    readonly Bdt: "BDT";
    readonly Xof: "XOF";
    readonly Bgn: "BGN";
    readonly Bhd: "BHD";
    readonly Bif: "BIF";
    readonly Bmd: "BMD";
    readonly Bnd: "BND";
    readonly Bob: "BOB";
    readonly Brl: "BRL";
    readonly Bsd: "BSD";
    readonly Btn: "BTN";
    readonly Bwp: "BWP";
    readonly Byn: "BYN";
    readonly Bzd: "BZD";
    readonly Cad: "CAD";
    readonly Cdf: "CDF";
    readonly Xaf: "XAF";
    readonly Chf: "CHF";
    readonly Nzd: "NZD";
    readonly Clp: "CLP";
    readonly Cny: "CNY";
    readonly Cop: "COP";
    readonly Crc: "CRC";
    readonly Cuc: "CUC";
    readonly Cve: "CVE";
    readonly Czk: "CZK";
    readonly Djf: "DJF";
    readonly Dkk: "DKK";
    readonly Dop: "DOP";
    readonly Dzd: "DZD";
    readonly Egp: "EGP";
    readonly Ern: "ERN";
    readonly Etb: "ETB";
    readonly Fjd: "FJD";
    readonly Gbp: "GBP";
    readonly Gel: "GEL";
    readonly Ghs: "GHS";
    readonly Gmd: "GMD";
    readonly Gnf: "GNF";
    readonly Gtq: "GTQ";
    readonly Gyd: "GYD";
    readonly Hkd: "HKD";
    readonly Hnl: "HNL";
    readonly Hrk: "HRK";
    readonly Htg: "HTG";
    readonly Huf: "HUF";
    readonly Idr: "IDR";
    readonly Ils: "ILS";
    readonly Inr: "INR";
    readonly Irr: "IRR";
    readonly Isk: "ISK";
    readonly Jmd: "JMD";
    readonly Jod: "JOD";
    readonly Jpy: "JPY";
    readonly Kes: "KES";
    readonly Kgs: "KGS";
    readonly Khr: "KHR";
    readonly Kmf: "KMF";
    readonly Kpw: "KPW";
    readonly Krw: "KRW";
    readonly Kwd: "KWD";
    readonly Kyd: "KYD";
    readonly Kzt: "KZT";
    readonly Lak: "LAK";
    readonly Lkr: "LKR";
    readonly Lrd: "LRD";
    readonly Lsl: "LSL";
    readonly Lyd: "LYD";
    readonly Mad: "MAD";
    readonly Mdl: "MDL";
    readonly Mga: "MGA";
    readonly Mkd: "MKD";
    readonly Mmk: "MMK";
    readonly Mnt: "MNT";
    readonly Mop: "MOP";
    readonly Mro: "MRO";
    readonly Mur: "MUR";
    readonly Mvr: "MVR";
    readonly Mwk: "MWK";
    readonly Mxn: "MXN";
    readonly Myr: "MYR";
    readonly Mzn: "MZN";
    readonly Nad: "NAD";
    readonly Xpf: "XPF";
    readonly Ngn: "NGN";
    readonly Nio: "NIO";
    readonly Nok: "NOK";
    readonly Npr: "NPR";
    readonly Omr: "OMR";
    readonly Pen: "PEN";
    readonly Pgk: "PGK";
    readonly Php: "PHP";
    readonly Pkr: "PKR";
    readonly Pln: "PLN";
    readonly Pyg: "PYG";
    readonly Qar: "QAR";
    readonly Rsd: "RSD";
    readonly Rub: "RUB";
    readonly Rwf: "RWF";
    readonly Sar: "SAR";
    readonly Sbd: "SBD";
    readonly Scr: "SCR";
    readonly Sdg: "SDG";
    readonly Sek: "SEK";
    readonly Sgd: "SGD";
    readonly Shp: "SHP";
    readonly Sll: "SLL";
    readonly Sos: "SOS";
    readonly Srd: "SRD";
    readonly Ssp: "SSP";
    readonly Std: "STD";
    readonly Syp: "SYP";
    readonly Szl: "SZL";
    readonly Thb: "THB";
    readonly Tjs: "TJS";
    readonly Tnd: "TND";
    readonly Top: "TOP";
    readonly Try: "TRY";
    readonly Ttd: "TTD";
    readonly Twd: "TWD";
    readonly Tzs: "TZS";
    readonly Uah: "UAH";
    readonly Uyu: "UYU";
    readonly Uzs: "UZS";
    readonly Vef: "VEF";
    readonly Vnd: "VND";
    readonly Vuv: "VUV";
    readonly Wst: "WST";
    readonly Yer: "YER";
    readonly Zar: "ZAR";
};
export type CurrencyEnum = typeof CurrencyEnum[keyof typeof CurrencyEnum];
/**
 *
 * @export
 * @interface Customs
 */
export interface Customs {
    /**
     * A unique identifier
     * @type {string}
     * @memberof Customs
     */
    'id'?: string;
    /**
     * The parcel content items
     * @type {Array<Commodity>}
     * @memberof Customs
     */
    'commodities'?: Array<Commodity>;
    /**
     *
     * @type {CustomsDuty}
     * @memberof Customs
     */
    'duty'?: CustomsDuty | null;
    /**
     *
     * @type {CustomsDutyBillingAddress}
     * @memberof Customs
     */
    'duty_billing_address'?: CustomsDutyBillingAddress | null;
    /**
     *
     * @type {CustomsContentType}
     * @memberof Customs
     */
    'content_type'?: CustomsContentType | null;
    /**
     *
     * @type {string}
     * @memberof Customs
     */
    'content_description'?: string | null;
    /**
     *
     * @type {CustomsIncoterm}
     * @memberof Customs
     */
    'incoterm'?: CustomsIncoterm | null;
    /**
     * The invoice reference number
     * @type {string}
     * @memberof Customs
     */
    'invoice'?: string | null;
    /**
     * The invoice date
     * @type {string}
     * @memberof Customs
     */
    'invoice_date'?: string | null;
    /**
     * Indicates if the shipment is commercial
     * @type {boolean}
     * @memberof Customs
     */
    'commercial_invoice'?: boolean | null;
    /**
     * Indicate that signer certified confirmed all
     * @type {boolean}
     * @memberof Customs
     */
    'certify'?: boolean | null;
    /**
     *
     * @type {string}
     * @memberof Customs
     */
    'signer'?: string | null;
    /**
     * <details>         <summary>Customs identification options.</summary>          {             \"aes\": \"5218487281\",             \"eel_pfc\": \"5218487281\",             \"license_number\": \"5218487281\",             \"certificate_number\": \"5218487281\",             \"nip_number\": \"5218487281\",             \"eori_number\": \"5218487281\",             \"vat_registration_number\": \"5218487281\",         }
     * @type {{ [key: string]: any; }}
     * @memberof Customs
     */
    'options'?: {
        [key: string]: any;
    };
    /**
     * Specifies the object type
     * @type {string}
     * @memberof Customs
     */
    'object_type'?: string;
}
/**
 * @type CustomsContentType
 * @export
 */
export type CustomsContentType = BlankEnum | ContentTypeEnum | NullEnum;
/**
 *
 * @export
 * @interface CustomsData
 */
export interface CustomsData {
    /**
     * The parcel content items
     * @type {Array<CommodityData>}
     * @memberof CustomsData
     */
    'commodities': Array<CommodityData>;
    /**
     *
     * @type {CustomsDuty}
     * @memberof CustomsData
     */
    'duty'?: CustomsDuty | null;
    /**
     *
     * @type {CustomsDataDutyBillingAddress}
     * @memberof CustomsData
     */
    'duty_billing_address'?: CustomsDataDutyBillingAddress | null;
    /**
     *
     * @type {CustomsContentType}
     * @memberof CustomsData
     */
    'content_type'?: CustomsContentType | null;
    /**
     *
     * @type {string}
     * @memberof CustomsData
     */
    'content_description'?: string | null;
    /**
     *
     * @type {CustomsIncoterm}
     * @memberof CustomsData
     */
    'incoterm'?: CustomsIncoterm | null;
    /**
     * The invoice reference number
     * @type {string}
     * @memberof CustomsData
     */
    'invoice'?: string | null;
    /**
     * The invoice date
     * @type {string}
     * @memberof CustomsData
     */
    'invoice_date'?: string | null;
    /**
     * Indicates if the shipment is commercial
     * @type {boolean}
     * @memberof CustomsData
     */
    'commercial_invoice'?: boolean | null;
    /**
     * Indicate that signer certified confirmed all
     * @type {boolean}
     * @memberof CustomsData
     */
    'certify'?: boolean | null;
    /**
     *
     * @type {string}
     * @memberof CustomsData
     */
    'signer'?: string | null;
    /**
     * <details>         <summary>Customs identification options.</summary>          {             \"aes\": \"5218487281\",             \"eel_pfc\": \"5218487281\",             \"license_number\": \"5218487281\",             \"certificate_number\": \"5218487281\",             \"nip_number\": \"5218487281\",             \"eori_number\": \"5218487281\",             \"vat_registration_number\": \"5218487281\",         }
     * @type {{ [key: string]: any; }}
     * @memberof CustomsData
     */
    'options'?: {
        [key: string]: any;
    };
}
/**
 * The duty payor address.
 * @export
 * @interface CustomsDataDutyBillingAddress
 */
export interface CustomsDataDutyBillingAddress {
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof CustomsDataDutyBillingAddress
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof CustomsDataDutyBillingAddress
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof CustomsDataDutyBillingAddress
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof CustomsDataDutyBillingAddress
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof CustomsDataDutyBillingAddress
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof CustomsDataDutyBillingAddress
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof CustomsDataDutyBillingAddress
     */
    'country_code': CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof CustomsDataDutyBillingAddress
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof CustomsDataDutyBillingAddress
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof CustomsDataDutyBillingAddress
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof CustomsDataDutyBillingAddress
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof CustomsDataDutyBillingAddress
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof CustomsDataDutyBillingAddress
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof CustomsDataDutyBillingAddress
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof CustomsDataDutyBillingAddress
     */
    'validate_location'?: boolean | null;
}
/**
 * The payment details.<br/>         **Note that this is required for a Dutiable parcel shipped internationally.**
 * @export
 * @interface CustomsDuty
 */
export interface CustomsDuty {
    /**
     *
     * @type {DutyPaidBy}
     * @memberof CustomsDuty
     */
    'paid_by'?: DutyPaidBy | null;
    /**
     *
     * @type {DutyCurrency}
     * @memberof CustomsDuty
     */
    'currency'?: DutyCurrency | null;
    /**
     * The package declared value
     * @type {number}
     * @memberof CustomsDuty
     */
    'declared_value'?: number | null;
    /**
     * The duty payment account number
     * @type {string}
     * @memberof CustomsDuty
     */
    'account_number'?: string | null;
}
/**
 * The duty payor address.
 * @export
 * @interface CustomsDutyBillingAddress
 */
export interface CustomsDutyBillingAddress {
    /**
     * A unique identifier
     * @type {string}
     * @memberof CustomsDutyBillingAddress
     */
    'id'?: string;
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof CustomsDutyBillingAddress
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof CustomsDutyBillingAddress
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof CustomsDutyBillingAddress
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof CustomsDutyBillingAddress
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof CustomsDutyBillingAddress
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof CustomsDutyBillingAddress
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof CustomsDutyBillingAddress
     */
    'country_code': CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof CustomsDutyBillingAddress
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof CustomsDutyBillingAddress
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof CustomsDutyBillingAddress
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof CustomsDutyBillingAddress
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof CustomsDutyBillingAddress
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof CustomsDutyBillingAddress
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof CustomsDutyBillingAddress
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof CustomsDutyBillingAddress
     */
    'validate_location'?: boolean | null;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof CustomsDutyBillingAddress
     */
    'object_type'?: string;
    /**
     *
     * @type {AddressValidation}
     * @memberof CustomsDutyBillingAddress
     */
    'validation'?: AddressValidation | null;
}
/**
 * @type CustomsIncoterm
 * The customs \'term of trade\' also known as \'incoterm\'
 * @export
 */
export type CustomsIncoterm = IncotermEnum | NullEnum;
/**
 *
 * @export
 * @interface CustomsList
 */
export interface CustomsList {
    /**
     *
     * @type {number}
     * @memberof CustomsList
     */
    'count'?: number | null;
    /**
     *
     * @type {string}
     * @memberof CustomsList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CustomsList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<Customs>}
     * @memberof CustomsList
     */
    'results': Array<Customs>;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const DimensionUnitEnum: {
    readonly Cm: "CM";
    readonly In: "IN";
};
export type DimensionUnitEnum = typeof DimensionUnitEnum[keyof typeof DimensionUnitEnum];
/**
 *
 * @export
 * @interface DocumentDetails
 */
export interface DocumentDetails {
    /**
     * The uploaded document id.
     * @type {string}
     * @memberof DocumentDetails
     */
    'document_id'?: string;
    /**
     * The uploaded document file name.
     * @type {string}
     * @memberof DocumentDetails
     */
    'file_name'?: string;
}
/**
 *
 * @export
 * @interface DocumentFileData
 */
export interface DocumentFileData {
    /**
     * A base64 file to upload
     * @type {string}
     * @memberof DocumentFileData
     */
    'doc_file': string;
    /**
     * A file name
     * @type {string}
     * @memberof DocumentFileData
     */
    'doc_name': string;
    /**
     *          Shipment document type          values: <br/>         `certificate_of_origin` `commercial_invoice` `pro_forma_invoice` `packing_list` `other`          For carrier specific packaging types, please consult the reference.
     * @type {string}
     * @memberof DocumentFileData
     */
    'doc_type'?: string | null;
}
/**
 *
 * @export
 * @interface DocumentUploadData
 */
export interface DocumentUploadData {
    /**
     * The documents related shipment.
     * @type {string}
     * @memberof DocumentUploadData
     */
    'shipment_id': string;
    /**
     * Shipping document files
     * @type {Array<DocumentFileData>}
     * @memberof DocumentUploadData
     */
    'document_files': Array<DocumentFileData>;
    /**
     * Shipping document file reference
     * @type {string}
     * @memberof DocumentUploadData
     */
    'reference'?: string | null;
}
/**
 *
 * @export
 * @interface DocumentUploadRecord
 */
export interface DocumentUploadRecord {
    /**
     * A unique identifier
     * @type {string}
     * @memberof DocumentUploadRecord
     */
    'id'?: string;
    /**
     * The shipment carrier
     * @type {string}
     * @memberof DocumentUploadRecord
     */
    'carrier_name'?: string | null;
    /**
     * The shipment carrier configured identifier
     * @type {string}
     * @memberof DocumentUploadRecord
     */
    'carrier_id'?: string | null;
    /**
     * the carrier shipping document ids
     * @type {Array<DocumentDetails>}
     * @memberof DocumentUploadRecord
     */
    'documents'?: Array<DocumentDetails>;
    /**
     * provider specific metadata
     * @type {{ [key: string]: any; }}
     * @memberof DocumentUploadRecord
     */
    'meta'?: {
        [key: string]: any;
    } | null;
    /**
     * Shipping document file reference
     * @type {string}
     * @memberof DocumentUploadRecord
     */
    'reference'?: string | null;
    /**
     * The list of note or warning messages
     * @type {Array<Message>}
     * @memberof DocumentUploadRecord
     */
    'messages'?: Array<Message>;
}
/**
 *
 * @export
 * @interface DocumentUploadRecords
 */
export interface DocumentUploadRecords {
    /**
     *
     * @type {number}
     * @memberof DocumentUploadRecords
     */
    'count'?: number | null;
    /**
     *
     * @type {string}
     * @memberof DocumentUploadRecords
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof DocumentUploadRecords
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<DocumentUploadRecord>}
     * @memberof DocumentUploadRecords
     */
    'results': Array<DocumentUploadRecord>;
}
/**
 *
 * @export
 * @interface Documents
 */
export interface Documents {
    /**
     * The shipment label in base64 string
     * @type {string}
     * @memberof Documents
     */
    'label'?: string | null;
    /**
     * The shipment invoice in base64 string
     * @type {string}
     * @memberof Documents
     */
    'invoice'?: string | null;
}
/**
 *
 * @export
 * @interface Duty
 */
export interface Duty {
    /**
     *
     * @type {DutyPaidBy}
     * @memberof Duty
     */
    'paid_by'?: DutyPaidBy | null;
    /**
     *
     * @type {DutyCurrency}
     * @memberof Duty
     */
    'currency'?: DutyCurrency | null;
    /**
     * The package declared value
     * @type {number}
     * @memberof Duty
     */
    'declared_value'?: number | null;
    /**
     * The duty payment account number
     * @type {string}
     * @memberof Duty
     */
    'account_number'?: string | null;
}
/**
 * @type DutyCurrency
 * The declared value currency
 * @export
 */
export type DutyCurrency = BlankEnum | CurrencyEnum | NullEnum;
/**
 * @type DutyPaidBy
 * The duty payer
 * @export
 */
export type DutyPaidBy = BlankEnum | NullEnum | PaidByEnum;
/**
 *
 * @export
 * @enum {string}
 */
export declare const EnabledEventsEnum: {
    readonly All: "all";
    readonly ShipmentPurchased: "shipment_purchased";
    readonly ShipmentCancelled: "shipment_cancelled";
    readonly ShipmentFulfilled: "shipment_fulfilled";
    readonly TrackerCreated: "tracker_created";
    readonly TrackerUpdated: "tracker_updated";
    readonly OrderCreated: "order_created";
    readonly OrderUpdated: "order_updated";
    readonly OrderFulfilled: "order_fulfilled";
    readonly OrderCancelled: "order_cancelled";
    readonly OrderDelivered: "order_delivered";
    readonly BatchQueued: "batch_queued";
    readonly BatchFailed: "batch_failed";
    readonly BatchRunning: "batch_running";
    readonly BatchCompleted: "batch_completed";
};
export type EnabledEventsEnum = typeof EnabledEventsEnum[keyof typeof EnabledEventsEnum];
/**
 *
 * @export
 * @interface ErrorMessages
 */
export interface ErrorMessages {
    /**
     * The list of error messages
     * @type {Array<Message>}
     * @memberof ErrorMessages
     */
    'messages'?: Array<Message>;
}
/**
 *
 * @export
 * @interface ErrorResponse
 */
export interface ErrorResponse {
    /**
     * The list of API errors
     * @type {Array<APIError>}
     * @memberof ErrorResponse
     */
    'errors'?: Array<APIError>;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const IncotermEnum: {
    readonly Cfr: "CFR";
    readonly Cif: "CIF";
    readonly Cip: "CIP";
    readonly Cpt: "CPT";
    readonly Daf: "DAF";
    readonly Ddp: "DDP";
    readonly Ddu: "DDU";
    readonly Deq: "DEQ";
    readonly Des: "DES";
    readonly Exw: "EXW";
    readonly Fas: "FAS";
    readonly Fca: "FCA";
    readonly Fob: "FOB";
};
export type IncotermEnum = typeof IncotermEnum[keyof typeof IncotermEnum];
/**
 *
 * @export
 * @enum {string}
 */
export declare const LabelTypeEnum: {
    readonly Pdf: "PDF";
    readonly Zpl: "ZPL";
    readonly Png: "PNG";
};
export type LabelTypeEnum = typeof LabelTypeEnum[keyof typeof LabelTypeEnum];
/**
 *
 * @export
 * @interface LineItem
 */
export interface LineItem {
    /**
     * A unique identifier
     * @type {string}
     * @memberof LineItem
     */
    'id'?: string;
    /**
     * The commodity\'s weight
     * @type {number}
     * @memberof LineItem
     */
    'weight': number;
    /**
     * The commodity\'s weight unit
     * @type {WeightUnitEnum}
     * @memberof LineItem
     */
    'weight_unit': WeightUnitEnum;
    /**
     * A description of the commodity
     * @type {string}
     * @memberof LineItem
     */
    'description'?: string | null;
    /**
     * The commodity\'s quantity (number or item)
     * @type {number}
     * @memberof LineItem
     */
    'quantity'?: number;
    /**
     * The commodity\'s sku number
     * @type {string}
     * @memberof LineItem
     */
    'sku'?: string | null;
    /**
     * The commodity\'s hs_code number
     * @type {string}
     * @memberof LineItem
     */
    'hs_code'?: string | null;
    /**
     * The monetary value of the commodity
     * @type {number}
     * @memberof LineItem
     */
    'value_amount'?: number | null;
    /**
     *
     * @type {CommodityValueCurrency}
     * @memberof LineItem
     */
    'value_currency'?: CommodityValueCurrency | null;
    /**
     *
     * @type {CommodityOriginCountry}
     * @memberof LineItem
     */
    'origin_country'?: CommodityOriginCountry | null;
    /**
     * The id of the related order line item.
     * @type {string}
     * @memberof LineItem
     */
    'parent_id'?: string | null;
    /**
     * <details>         <summary>Commodity user references metadata.</summary>          {             \"part_number\": \"5218487281\",             \"reference1\": \"# ref 1\",             \"reference2\": \"# ref 2\",             \"reference3\": \"# ref 3\",             ...         }
     * @type {{ [key: string]: any; }}
     * @memberof LineItem
     */
    'metadata'?: {
        [key: string]: any;
    } | null;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof LineItem
     */
    'object_type'?: string;
    /**
     *
     * @type {number}
     * @memberof LineItem
     */
    'unfulfilled_quantity'?: number;
}
/**
 *
 * @export
 * @interface Message
 */
export interface Message {
    /**
     * The error or warning message
     * @type {string}
     * @memberof Message
     */
    'message'?: string;
    /**
     * The message code
     * @type {string}
     * @memberof Message
     */
    'code'?: string;
    /**
     * any additional details
     * @type {{ [key: string]: any; }}
     * @memberof Message
     */
    'details'?: {
        [key: string]: any;
    };
    /**
     * The targeted carrier
     * @type {string}
     * @memberof Message
     */
    'carrier_name'?: string;
    /**
     * The targeted carrier name (unique identifier)
     * @type {string}
     * @memberof Message
     */
    'carrier_id'?: string;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const NullEnum: {
    readonly Null: "null";
};
export type NullEnum = typeof NullEnum[keyof typeof NullEnum];
/**
 *
 * @export
 * @interface Operation
 */
export interface Operation {
    /**
     * Operation performed
     * @type {string}
     * @memberof Operation
     */
    'operation': string;
    /**
     * Specify whether the operation was successful
     * @type {boolean}
     * @memberof Operation
     */
    'success': boolean;
}
/**
 *
 * @export
 * @interface OperationConfirmation
 */
export interface OperationConfirmation {
    /**
     * Operation performed
     * @type {string}
     * @memberof OperationConfirmation
     */
    'operation': string;
    /**
     * Specify whether the operation was successful
     * @type {boolean}
     * @memberof OperationConfirmation
     */
    'success': boolean;
    /**
     * The operation carrier
     * @type {string}
     * @memberof OperationConfirmation
     */
    'carrier_name': string;
    /**
     * The targeted carrier\'s name (unique identifier)
     * @type {string}
     * @memberof OperationConfirmation
     */
    'carrier_id': string;
}
/**
 *
 * @export
 * @interface OperationResponse
 */
export interface OperationResponse {
    /**
     * The list of note or warning messages
     * @type {Array<Message>}
     * @memberof OperationResponse
     */
    'messages'?: Array<Message>;
    /**
     *
     * @type {OperationResponseConfirmation}
     * @memberof OperationResponse
     */
    'confirmation'?: OperationResponseConfirmation;
}
/**
 * The operation details
 * @export
 * @interface OperationResponseConfirmation
 */
export interface OperationResponseConfirmation {
    /**
     * Operation performed
     * @type {string}
     * @memberof OperationResponseConfirmation
     */
    'operation': string;
    /**
     * Specify whether the operation was successful
     * @type {boolean}
     * @memberof OperationResponseConfirmation
     */
    'success': boolean;
    /**
     * The operation carrier
     * @type {string}
     * @memberof OperationResponseConfirmation
     */
    'carrier_name': string;
    /**
     * The targeted carrier\'s name (unique identifier)
     * @type {string}
     * @memberof OperationResponseConfirmation
     */
    'carrier_id': string;
}
/**
 *
 * @export
 * @interface Order
 */
export interface Order {
    /**
     * A unique identifier
     * @type {string}
     * @memberof Order
     */
    'id'?: string;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof Order
     */
    'object_type'?: string;
    /**
     * The source\' order id.
     * @type {string}
     * @memberof Order
     */
    'order_id': string;
    /**
     * The order date. format: `YYYY-MM-DD`
     * @type {string}
     * @memberof Order
     */
    'order_date'?: string | null;
    /**
     * The order\'s source.
     * @type {string}
     * @memberof Order
     */
    'source'?: string;
    /**
     * The order status.
     * @type {OrderStatusEnum}
     * @memberof Order
     */
    'status'?: OrderStatusEnum;
    /**
     *
     * @type {OrderShippingTo}
     * @memberof Order
     */
    'shipping_to': OrderShippingTo;
    /**
     *
     * @type {OrderShippingFrom}
     * @memberof Order
     */
    'shipping_from'?: OrderShippingFrom | null;
    /**
     *
     * @type {OrderBillingAddress}
     * @memberof Order
     */
    'billing_address'?: OrderBillingAddress | null;
    /**
     * The order line items.
     * @type {Array<LineItem>}
     * @memberof Order
     */
    'line_items': Array<LineItem>;
    /**
     * <details>         <summary>The options available for the order shipments.</summary>          {             \"currency\": \"USD\",             \"paid_by\": \"third_party\",             \"payment_account_number\": \"123456789\",             \"duty_paid_by\": \"third_party\",             \"duty_account_number\": \"123456789\",             \"invoice_number\": \"123456789\",             \"invoice_date\": \"2020-01-01\",             \"single_item_per_parcel\": true,             \"carrier_ids\": [\"canadapost-test\"],             \"preferred_service\": \"fedex_express_saver\",         }
     * @type {{ [key: string]: any; }}
     * @memberof Order
     */
    'options'?: {
        [key: string]: any;
    } | null;
    /**
     * system related metadata.
     * @type {{ [key: string]: any; }}
     * @memberof Order
     */
    'meta'?: {
        [key: string]: any;
    } | null;
    /**
     * User metadata for the order.
     * @type {{ [key: string]: any; }}
     * @memberof Order
     */
    'metadata'?: {
        [key: string]: any;
    };
    /**
     * The shipments associated with the order.
     * @type {Array<Shipment>}
     * @memberof Order
     */
    'shipments'?: Array<Shipment>;
    /**
     * Specify whether the order is in test mode or not.
     * @type {boolean}
     * @memberof Order
     */
    'test_mode': boolean;
    /**
     * The shipment creation datetime.<br/>         Date Format: `YYYY-MM-DD HH:MM:SS.mmmmmmz`
     * @type {string}
     * @memberof Order
     */
    'created_at': string;
}
/**
 * The customer\' or shipping billing address.
 * @export
 * @interface OrderBillingAddress
 */
export interface OrderBillingAddress {
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderBillingAddress
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderBillingAddress
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof OrderBillingAddress
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof OrderBillingAddress
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderBillingAddress
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof OrderBillingAddress
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof OrderBillingAddress
     */
    'country_code': CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof OrderBillingAddress
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof OrderBillingAddress
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof OrderBillingAddress
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof OrderBillingAddress
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof OrderBillingAddress
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderBillingAddress
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof OrderBillingAddress
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof OrderBillingAddress
     */
    'validate_location'?: boolean | null;
}
/**
 *
 * @export
 * @interface OrderData
 */
export interface OrderData {
    /**
     * The source\' order id.
     * @type {string}
     * @memberof OrderData
     */
    'order_id': string;
    /**
     * The order date. format: `YYYY-MM-DD`
     * @type {string}
     * @memberof OrderData
     */
    'order_date'?: string | null;
    /**
     * The order\'s source.<br/>         e.g. API, POS, ERP, Shopify, Woocommerce, etc.
     * @type {string}
     * @memberof OrderData
     */
    'source'?: string;
    /**
     *
     * @type {OrderDataShippingTo}
     * @memberof OrderData
     */
    'shipping_to': OrderDataShippingTo;
    /**
     *
     * @type {OrderDataShippingFrom}
     * @memberof OrderData
     */
    'shipping_from'?: OrderDataShippingFrom | null;
    /**
     *
     * @type {OrderBillingAddress}
     * @memberof OrderData
     */
    'billing_address'?: OrderBillingAddress | null;
    /**
     * The order line items.
     * @type {Array<CommodityData>}
     * @memberof OrderData
     */
    'line_items': Array<CommodityData>;
    /**
     * <details>         <summary>The options available for the order shipments.</summary>          {             \"currency\": \"USD\",             \"paid_by\": \"third_party\",             \"payment_account_number\": \"123456789\",             \"duty_paid_by\": \"third_party\",             \"duty_account_number\": \"123456789\",             \"invoice_number\": \"123456789\",             \"invoice_date\": \"2020-01-01\",             \"single_item_per_parcel\": true,             \"carrier_ids\": [\"canadapost-test\"],             \"preferred_service\": \"fedex_express_saver\",         }
     * @type {{ [key: string]: any; }}
     * @memberof OrderData
     */
    'options'?: {
        [key: string]: any;
    } | null;
    /**
     * User metadata for the order.
     * @type {{ [key: string]: any; }}
     * @memberof OrderData
     */
    'metadata'?: {
        [key: string]: any;
    };
}
/**
 * The origin or warehouse address of the order items.
 * @export
 * @interface OrderDataShippingFrom
 */
export interface OrderDataShippingFrom {
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderDataShippingFrom
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderDataShippingFrom
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof OrderDataShippingFrom
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof OrderDataShippingFrom
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderDataShippingFrom
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof OrderDataShippingFrom
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof OrderDataShippingFrom
     */
    'country_code': CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof OrderDataShippingFrom
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof OrderDataShippingFrom
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof OrderDataShippingFrom
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof OrderDataShippingFrom
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof OrderDataShippingFrom
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderDataShippingFrom
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof OrderDataShippingFrom
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof OrderDataShippingFrom
     */
    'validate_location'?: boolean | null;
}
/**
 * The customer or recipient address for the order.
 * @export
 * @interface OrderDataShippingTo
 */
export interface OrderDataShippingTo {
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderDataShippingTo
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderDataShippingTo
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof OrderDataShippingTo
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof OrderDataShippingTo
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderDataShippingTo
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof OrderDataShippingTo
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof OrderDataShippingTo
     */
    'country_code': CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof OrderDataShippingTo
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof OrderDataShippingTo
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof OrderDataShippingTo
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof OrderDataShippingTo
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof OrderDataShippingTo
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderDataShippingTo
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof OrderDataShippingTo
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof OrderDataShippingTo
     */
    'validate_location'?: boolean | null;
}
/**
 *
 * @export
 * @interface OrderList
 */
export interface OrderList {
    /**
     *
     * @type {number}
     * @memberof OrderList
     */
    'count'?: number | null;
    /**
     *
     * @type {string}
     * @memberof OrderList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrderList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<Order>}
     * @memberof OrderList
     */
    'results': Array<Order>;
}
/**
 * The origin or warehouse address of the order items.
 * @export
 * @interface OrderShippingFrom
 */
export interface OrderShippingFrom {
    /**
     * A unique identifier
     * @type {string}
     * @memberof OrderShippingFrom
     */
    'id'?: string;
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderShippingFrom
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderShippingFrom
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof OrderShippingFrom
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof OrderShippingFrom
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderShippingFrom
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof OrderShippingFrom
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof OrderShippingFrom
     */
    'country_code': CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof OrderShippingFrom
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof OrderShippingFrom
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof OrderShippingFrom
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof OrderShippingFrom
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof OrderShippingFrom
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderShippingFrom
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof OrderShippingFrom
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof OrderShippingFrom
     */
    'validate_location'?: boolean | null;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof OrderShippingFrom
     */
    'object_type'?: string;
    /**
     *
     * @type {AddressValidation}
     * @memberof OrderShippingFrom
     */
    'validation'?: AddressValidation | null;
}
/**
 * The customer address for the order.
 * @export
 * @interface OrderShippingTo
 */
export interface OrderShippingTo {
    /**
     * A unique identifier
     * @type {string}
     * @memberof OrderShippingTo
     */
    'id'?: string;
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderShippingTo
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderShippingTo
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof OrderShippingTo
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof OrderShippingTo
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderShippingTo
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof OrderShippingTo
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof OrderShippingTo
     */
    'country_code': CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof OrderShippingTo
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof OrderShippingTo
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof OrderShippingTo
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof OrderShippingTo
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof OrderShippingTo
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof OrderShippingTo
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof OrderShippingTo
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof OrderShippingTo
     */
    'validate_location'?: boolean | null;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof OrderShippingTo
     */
    'object_type'?: string;
    /**
     *
     * @type {AddressValidation}
     * @memberof OrderShippingTo
     */
    'validation'?: AddressValidation | null;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const OrderStatusEnum: {
    readonly Unfulfilled: "unfulfilled";
    readonly Cancelled: "cancelled";
    readonly Fulfilled: "fulfilled";
    readonly Delivered: "delivered";
    readonly Partial: "partial";
};
export type OrderStatusEnum = typeof OrderStatusEnum[keyof typeof OrderStatusEnum];
/**
 *
 * @export
 * @interface OrderUpdateData
 */
export interface OrderUpdateData {
    /**
     * <details>         <summary>The options available for the order shipments.</summary>          {             \"currency\": \"USD\",             \"paid_by\": \"third_party\",             \"payment_account_number\": \"123456789\",             \"duty_paid_by\": \"recipient\",             \"duty_account_number\": \"123456789\",             \"invoice_number\": \"123456789\",             \"invoice_date\": \"2020-01-01\",             \"single_item_per_parcel\": true,             \"carrier_ids\": [\"canadapost-test\"],         }
     * @type {{ [key: string]: any; }}
     * @memberof OrderUpdateData
     */
    'options'?: {
        [key: string]: any;
    } | null;
    /**
     * User metadata for the shipment
     * @type {{ [key: string]: any; }}
     * @memberof OrderUpdateData
     */
    'metadata'?: {
        [key: string]: any;
    };
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const PaidByEnum: {
    readonly Sender: "sender";
    readonly Recipient: "recipient";
    readonly ThirdParty: "third_party";
};
export type PaidByEnum = typeof PaidByEnum[keyof typeof PaidByEnum];
/**
 *
 * @export
 * @interface Parcel
 */
export interface Parcel {
    /**
     * A unique identifier
     * @type {string}
     * @memberof Parcel
     */
    'id'?: string;
    /**
     * The parcel\'s weight
     * @type {number}
     * @memberof Parcel
     */
    'weight': number;
    /**
     * The parcel\'s width
     * @type {number}
     * @memberof Parcel
     */
    'width'?: number | null;
    /**
     * The parcel\'s height
     * @type {number}
     * @memberof Parcel
     */
    'height'?: number | null;
    /**
     * The parcel\'s length
     * @type {number}
     * @memberof Parcel
     */
    'length'?: number | null;
    /**
     * The parcel\'s packaging type.<br/>         **Note that the packaging is optional when using a package preset.**<br/>         values: <br/>         `envelope` `pak` `tube` `pallet` `small_box` `medium_box` `your_packaging`<br/>         For carrier specific packaging types, please consult the reference.
     * @type {string}
     * @memberof Parcel
     */
    'packaging_type'?: string | null;
    /**
     * The parcel\'s package preset.<br/>         For carrier specific package presets, please consult the reference.
     * @type {string}
     * @memberof Parcel
     */
    'package_preset'?: string | null;
    /**
     * The parcel\'s description
     * @type {string}
     * @memberof Parcel
     */
    'description'?: string | null;
    /**
     * The parcel\'s content description
     * @type {string}
     * @memberof Parcel
     */
    'content'?: string | null;
    /**
     * Indicates if the parcel is composed of documents only
     * @type {boolean}
     * @memberof Parcel
     */
    'is_document'?: boolean | null;
    /**
     * The parcel\'s weight unit
     * @type {WeightUnitEnum}
     * @memberof Parcel
     */
    'weight_unit': WeightUnitEnum;
    /**
     *
     * @type {ParcelDimensionUnit}
     * @memberof Parcel
     */
    'dimension_unit'?: ParcelDimensionUnit | null;
    /**
     * The parcel items.
     * @type {Array<Commodity>}
     * @memberof Parcel
     */
    'items'?: Array<Commodity>;
    /**
     * The parcel reference number.<br/>         (can be used as tracking number for custom carriers)
     * @type {string}
     * @memberof Parcel
     */
    'reference_number'?: string | null;
    /**
     * The parcel\'s freight class for pallet and freight shipments.
     * @type {string}
     * @memberof Parcel
     */
    'freight_class'?: string | null;
    /**
     * <details>         <summary>Parcel specific options.</summary>          {             \"insurance\": \"100.00\",             \"insured_by\": \"carrier\",         }
     * @type {{ [key: string]: any; }}
     * @memberof Parcel
     */
    'options'?: {
        [key: string]: any;
    };
    /**
     * Specifies the object type
     * @type {string}
     * @memberof Parcel
     */
    'object_type'?: string;
}
/**
 *
 * @export
 * @interface ParcelData
 */
export interface ParcelData {
    /**
     * The parcel\'s weight
     * @type {number}
     * @memberof ParcelData
     */
    'weight': number;
    /**
     * The parcel\'s width
     * @type {number}
     * @memberof ParcelData
     */
    'width'?: number | null;
    /**
     * The parcel\'s height
     * @type {number}
     * @memberof ParcelData
     */
    'height'?: number | null;
    /**
     * The parcel\'s length
     * @type {number}
     * @memberof ParcelData
     */
    'length'?: number | null;
    /**
     * The parcel\'s packaging type.<br/>         **Note that the packaging is optional when using a package preset.**<br/>         values: <br/>         `envelope` `pak` `tube` `pallet` `small_box` `medium_box` `your_packaging`<br/>         For carrier specific packaging types, please consult the reference.
     * @type {string}
     * @memberof ParcelData
     */
    'packaging_type'?: string | null;
    /**
     * The parcel\'s package preset.<br/>         For carrier specific package presets, please consult the reference.
     * @type {string}
     * @memberof ParcelData
     */
    'package_preset'?: string | null;
    /**
     * The parcel\'s description
     * @type {string}
     * @memberof ParcelData
     */
    'description'?: string | null;
    /**
     * The parcel\'s content description
     * @type {string}
     * @memberof ParcelData
     */
    'content'?: string | null;
    /**
     * Indicates if the parcel is composed of documents only
     * @type {boolean}
     * @memberof ParcelData
     */
    'is_document'?: boolean | null;
    /**
     * The parcel\'s weight unit
     * @type {WeightUnitEnum}
     * @memberof ParcelData
     */
    'weight_unit': WeightUnitEnum;
    /**
     *
     * @type {ParcelDimensionUnit}
     * @memberof ParcelData
     */
    'dimension_unit'?: ParcelDimensionUnit | null;
    /**
     * The parcel items.
     * @type {Array<CommodityData>}
     * @memberof ParcelData
     */
    'items'?: Array<CommodityData>;
    /**
     * The parcel reference number.<br/>         (can be used as tracking number for custom carriers)
     * @type {string}
     * @memberof ParcelData
     */
    'reference_number'?: string | null;
    /**
     * The parcel\'s freight class for pallet and freight shipments.
     * @type {string}
     * @memberof ParcelData
     */
    'freight_class'?: string | null;
    /**
     * <details>         <summary>Parcel specific options.</summary>          {             \"insurance\": \"100.00\",             \"insured_by\": \"carrier\",         }
     * @type {{ [key: string]: any; }}
     * @memberof ParcelData
     */
    'options'?: {
        [key: string]: any;
    };
}
/**
 * @type ParcelDimensionUnit
 * The parcel\'s dimension unit
 * @export
 */
export type ParcelDimensionUnit = DimensionUnitEnum | NullEnum;
/**
 *
 * @export
 * @interface ParcelList
 */
export interface ParcelList {
    /**
     *
     * @type {number}
     * @memberof ParcelList
     */
    'count'?: number | null;
    /**
     *
     * @type {string}
     * @memberof ParcelList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ParcelList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<Parcel>}
     * @memberof ParcelList
     */
    'results': Array<Parcel>;
}
/**
 *
 * @export
 * @interface PatchedAddressData
 */
export interface PatchedAddressData {
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof PatchedAddressData
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof PatchedAddressData
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof PatchedAddressData
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof PatchedAddressData
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof PatchedAddressData
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof PatchedAddressData
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof PatchedAddressData
     */
    'country_code'?: CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof PatchedAddressData
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof PatchedAddressData
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof PatchedAddressData
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof PatchedAddressData
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof PatchedAddressData
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof PatchedAddressData
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof PatchedAddressData
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof PatchedAddressData
     */
    'validate_location'?: boolean | null;
}
/**
 *
 * @export
 * @interface PatchedCustomsData
 */
export interface PatchedCustomsData {
    /**
     * The parcel content items
     * @type {Array<CommodityData>}
     * @memberof PatchedCustomsData
     */
    'commodities'?: Array<CommodityData>;
    /**
     *
     * @type {CustomsDuty}
     * @memberof PatchedCustomsData
     */
    'duty'?: CustomsDuty | null;
    /**
     *
     * @type {CustomsDataDutyBillingAddress}
     * @memberof PatchedCustomsData
     */
    'duty_billing_address'?: CustomsDataDutyBillingAddress | null;
    /**
     *
     * @type {CustomsContentType}
     * @memberof PatchedCustomsData
     */
    'content_type'?: CustomsContentType | null;
    /**
     *
     * @type {string}
     * @memberof PatchedCustomsData
     */
    'content_description'?: string | null;
    /**
     *
     * @type {CustomsIncoterm}
     * @memberof PatchedCustomsData
     */
    'incoterm'?: CustomsIncoterm | null;
    /**
     * The invoice reference number
     * @type {string}
     * @memberof PatchedCustomsData
     */
    'invoice'?: string | null;
    /**
     * The invoice date
     * @type {string}
     * @memberof PatchedCustomsData
     */
    'invoice_date'?: string | null;
    /**
     * Indicates if the shipment is commercial
     * @type {boolean}
     * @memberof PatchedCustomsData
     */
    'commercial_invoice'?: boolean | null;
    /**
     * Indicate that signer certified confirmed all
     * @type {boolean}
     * @memberof PatchedCustomsData
     */
    'certify'?: boolean | null;
    /**
     *
     * @type {string}
     * @memberof PatchedCustomsData
     */
    'signer'?: string | null;
    /**
     * <details>         <summary>Customs identification options.</summary>          {             \"aes\": \"5218487281\",             \"eel_pfc\": \"5218487281\",             \"license_number\": \"5218487281\",             \"certificate_number\": \"5218487281\",             \"nip_number\": \"5218487281\",             \"eori_number\": \"5218487281\",             \"vat_registration_number\": \"5218487281\",         }
     * @type {{ [key: string]: any; }}
     * @memberof PatchedCustomsData
     */
    'options'?: {
        [key: string]: any;
    };
}
/**
 *
 * @export
 * @interface PatchedParcelData
 */
export interface PatchedParcelData {
    /**
     * The parcel\'s weight
     * @type {number}
     * @memberof PatchedParcelData
     */
    'weight'?: number;
    /**
     * The parcel\'s width
     * @type {number}
     * @memberof PatchedParcelData
     */
    'width'?: number | null;
    /**
     * The parcel\'s height
     * @type {number}
     * @memberof PatchedParcelData
     */
    'height'?: number | null;
    /**
     * The parcel\'s length
     * @type {number}
     * @memberof PatchedParcelData
     */
    'length'?: number | null;
    /**
     * The parcel\'s packaging type.<br/>         **Note that the packaging is optional when using a package preset.**<br/>         values: <br/>         `envelope` `pak` `tube` `pallet` `small_box` `medium_box` `your_packaging`<br/>         For carrier specific packaging types, please consult the reference.
     * @type {string}
     * @memberof PatchedParcelData
     */
    'packaging_type'?: string | null;
    /**
     * The parcel\'s package preset.<br/>         For carrier specific package presets, please consult the reference.
     * @type {string}
     * @memberof PatchedParcelData
     */
    'package_preset'?: string | null;
    /**
     * The parcel\'s description
     * @type {string}
     * @memberof PatchedParcelData
     */
    'description'?: string | null;
    /**
     * The parcel\'s content description
     * @type {string}
     * @memberof PatchedParcelData
     */
    'content'?: string | null;
    /**
     * Indicates if the parcel is composed of documents only
     * @type {boolean}
     * @memberof PatchedParcelData
     */
    'is_document'?: boolean | null;
    /**
     * The parcel\'s weight unit
     * @type {WeightUnitEnum}
     * @memberof PatchedParcelData
     */
    'weight_unit'?: WeightUnitEnum;
    /**
     *
     * @type {ParcelDimensionUnit}
     * @memberof PatchedParcelData
     */
    'dimension_unit'?: ParcelDimensionUnit | null;
    /**
     * The parcel items.
     * @type {Array<CommodityData>}
     * @memberof PatchedParcelData
     */
    'items'?: Array<CommodityData>;
    /**
     * The parcel reference number.<br/>         (can be used as tracking number for custom carriers)
     * @type {string}
     * @memberof PatchedParcelData
     */
    'reference_number'?: string | null;
    /**
     * The parcel\'s freight class for pallet and freight shipments.
     * @type {string}
     * @memberof PatchedParcelData
     */
    'freight_class'?: string | null;
    /**
     * <details>         <summary>Parcel specific options.</summary>          {             \"insurance\": \"100.00\",             \"insured_by\": \"carrier\",         }
     * @type {{ [key: string]: any; }}
     * @memberof PatchedParcelData
     */
    'options'?: {
        [key: string]: any;
    };
}
/**
 *
 * @export
 * @interface PatchedWebhookData
 */
export interface PatchedWebhookData {
    /**
     * The URL of the webhook endpoint.
     * @type {string}
     * @memberof PatchedWebhookData
     */
    'url'?: string;
    /**
     * An optional description of what the webhook is used for.
     * @type {string}
     * @memberof PatchedWebhookData
     */
    'description'?: string | null;
    /**
     * The list of events to enable for this endpoint.
     * @type {Array<EnabledEventsEnum>}
     * @memberof PatchedWebhookData
     */
    'enabled_events'?: Array<EnabledEventsEnum>;
    /**
     * Indicates that the webhook is disabled
     * @type {boolean}
     * @memberof PatchedWebhookData
     */
    'disabled'?: boolean | null;
}
/**
 *
 * @export
 * @interface Payment
 */
export interface Payment {
    /**
     * The payor type
     * @type {PaidByEnum}
     * @memberof Payment
     */
    'paid_by'?: PaidByEnum;
    /**
     *
     * @type {PaymentCurrency}
     * @memberof Payment
     */
    'currency'?: PaymentCurrency | null;
    /**
     * The payor account number
     * @type {string}
     * @memberof Payment
     */
    'account_number'?: string | null;
}
/**
 * @type PaymentCurrency
 * The payment amount currency
 * @export
 */
export type PaymentCurrency = BlankEnum | CurrencyEnum | NullEnum;
/**
 *
 * @export
 * @interface Pickup
 */
export interface Pickup {
    /**
     * A unique pickup identifier
     * @type {string}
     * @memberof Pickup
     */
    'id'?: string;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof Pickup
     */
    'object_type'?: string;
    /**
     * The pickup carrier
     * @type {string}
     * @memberof Pickup
     */
    'carrier_name': string;
    /**
     * The pickup carrier configured name
     * @type {string}
     * @memberof Pickup
     */
    'carrier_id': string;
    /**
     * The pickup confirmation identifier
     * @type {string}
     * @memberof Pickup
     */
    'confirmation_number': string;
    /**
     * The pickup date
     * @type {string}
     * @memberof Pickup
     */
    'pickup_date'?: string | null;
    /**
     *
     * @type {PickupPickupCharge}
     * @memberof Pickup
     */
    'pickup_charge'?: PickupPickupCharge | null;
    /**
     * The pickup expected ready time
     * @type {string}
     * @memberof Pickup
     */
    'ready_time'?: string | null;
    /**
     * The pickup expected closing or late time
     * @type {string}
     * @memberof Pickup
     */
    'closing_time'?: string | null;
    /**
     *
     * @type {PickupAddress}
     * @memberof Pickup
     */
    'address': PickupAddress;
    /**
     * The shipment parcels to pickup.
     * @type {Array<Parcel>}
     * @memberof Pickup
     */
    'parcels': Array<Parcel>;
    /**
     * The pickup instruction.<br/>         eg: Handle with care.
     * @type {string}
     * @memberof Pickup
     */
    'instruction'?: string | null;
    /**
     * The package(s) location.<br/>         eg: Behind the entrance door.
     * @type {string}
     * @memberof Pickup
     */
    'package_location'?: string | null;
    /**
     * Advanced carrier specific pickup options
     * @type {{ [key: string]: any; }}
     * @memberof Pickup
     */
    'options'?: {
        [key: string]: any;
    } | null;
    /**
     * User metadata for the pickup
     * @type {{ [key: string]: any; }}
     * @memberof Pickup
     */
    'metadata'?: {
        [key: string]: any;
    };
    /**
     * Specified whether it was created with a carrier in test mode
     * @type {boolean}
     * @memberof Pickup
     */
    'test_mode': boolean;
}
/**
 * The pickup address
 * @export
 * @interface PickupAddress
 */
export interface PickupAddress {
    /**
     * A unique identifier
     * @type {string}
     * @memberof PickupAddress
     */
    'id'?: string;
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof PickupAddress
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof PickupAddress
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof PickupAddress
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof PickupAddress
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof PickupAddress
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof PickupAddress
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof PickupAddress
     */
    'country_code': CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof PickupAddress
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof PickupAddress
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof PickupAddress
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof PickupAddress
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof PickupAddress
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof PickupAddress
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof PickupAddress
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof PickupAddress
     */
    'validate_location'?: boolean | null;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof PickupAddress
     */
    'object_type'?: string;
    /**
     *
     * @type {AddressValidation}
     * @memberof PickupAddress
     */
    'validation'?: AddressValidation | null;
}
/**
 *
 * @export
 * @interface PickupCancelData
 */
export interface PickupCancelData {
    /**
     * The reason of the pickup cancellation
     * @type {string}
     * @memberof PickupCancelData
     */
    'reason'?: string;
}
/**
 *
 * @export
 * @interface PickupCancelRequest
 */
export interface PickupCancelRequest {
    /**
     * The pickup confirmation identifier
     * @type {string}
     * @memberof PickupCancelRequest
     */
    'confirmation_number': string;
    /**
     *
     * @type {PickupCancelRequestAddress}
     * @memberof PickupCancelRequest
     */
    'address'?: PickupCancelRequestAddress;
    /**
     * The pickup date.<br/>         Date Format: `YYYY-MM-DD`
     * @type {string}
     * @memberof PickupCancelRequest
     */
    'pickup_date'?: string | null;
    /**
     * The reason of the pickup cancellation
     * @type {string}
     * @memberof PickupCancelRequest
     */
    'reason'?: string;
}
/**
 * The pickup address
 * @export
 * @interface PickupCancelRequestAddress
 */
export interface PickupCancelRequestAddress {
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof PickupCancelRequestAddress
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof PickupCancelRequestAddress
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof PickupCancelRequestAddress
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof PickupCancelRequestAddress
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof PickupCancelRequestAddress
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof PickupCancelRequestAddress
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof PickupCancelRequestAddress
     */
    'country_code': CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof PickupCancelRequestAddress
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof PickupCancelRequestAddress
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof PickupCancelRequestAddress
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof PickupCancelRequestAddress
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof PickupCancelRequestAddress
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof PickupCancelRequestAddress
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof PickupCancelRequestAddress
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof PickupCancelRequestAddress
     */
    'validate_location'?: boolean | null;
}
/**
 *
 * @export
 * @interface PickupData
 */
export interface PickupData {
    /**
     * The expected pickup date.<br/>         Date Format: `YYYY-MM-DD`
     * @type {string}
     * @memberof PickupData
     */
    'pickup_date': string;
    /**
     *
     * @type {PickupCancelRequestAddress}
     * @memberof PickupData
     */
    'address'?: PickupCancelRequestAddress;
    /**
     * The ready time for pickup.<br/>         Time Format: `HH:MM`
     * @type {string}
     * @memberof PickupData
     */
    'ready_time': string;
    /**
     * The closing or late time of the pickup.<br/>         Time Format: `HH:MM`
     * @type {string}
     * @memberof PickupData
     */
    'closing_time': string;
    /**
     * The pickup instruction.<br/>         eg: Handle with care.
     * @type {string}
     * @memberof PickupData
     */
    'instruction'?: string | null;
    /**
     * The package(s) location.<br/>         eg: Behind the entrance door.
     * @type {string}
     * @memberof PickupData
     */
    'package_location'?: string | null;
    /**
     * Advanced carrier specific pickup options
     * @type {{ [key: string]: any; }}
     * @memberof PickupData
     */
    'options'?: {
        [key: string]: any;
    } | null;
    /**
     * The list of shipments to be picked up
     * @type {Array<string>}
     * @memberof PickupData
     */
    'tracking_numbers': Array<string>;
    /**
     * User metadata for the pickup
     * @type {{ [key: string]: any; }}
     * @memberof PickupData
     */
    'metadata'?: {
        [key: string]: any;
    };
}
/**
 *
 * @export
 * @interface PickupList
 */
export interface PickupList {
    /**
     *
     * @type {number}
     * @memberof PickupList
     */
    'count'?: number | null;
    /**
     *
     * @type {string}
     * @memberof PickupList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PickupList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<Pickup>}
     * @memberof PickupList
     */
    'results': Array<Pickup>;
}
/**
 * The pickup cost details
 * @export
 * @interface PickupPickupCharge
 */
export interface PickupPickupCharge {
    /**
     * The charge description
     * @type {string}
     * @memberof PickupPickupCharge
     */
    'name'?: string | null;
    /**
     * The charge monetary value
     * @type {number}
     * @memberof PickupPickupCharge
     */
    'amount'?: number | null;
    /**
     * The charge amount currency
     * @type {string}
     * @memberof PickupPickupCharge
     */
    'currency'?: string | null;
}
/**
 *
 * @export
 * @interface PickupRequest
 */
export interface PickupRequest {
    /**
     * The expected pickup date.<br/>         Date Format: `YYYY-MM-DD`
     * @type {string}
     * @memberof PickupRequest
     */
    'pickup_date': string;
    /**
     *
     * @type {PickupCancelRequestAddress}
     * @memberof PickupRequest
     */
    'address': PickupCancelRequestAddress;
    /**
     * The shipment parcels to pickup.
     * @type {Array<ParcelData>}
     * @memberof PickupRequest
     */
    'parcels': Array<ParcelData>;
    /**
     * The ready time for pickup.<br/>         Time Format: `HH:MM`
     * @type {string}
     * @memberof PickupRequest
     */
    'ready_time': string;
    /**
     * The closing or late time of the pickup.<br/>         Time Format: `HH:MM`
     * @type {string}
     * @memberof PickupRequest
     */
    'closing_time': string;
    /**
     * The pickup instruction.<br/>         eg: Handle with care.
     * @type {string}
     * @memberof PickupRequest
     */
    'instruction'?: string | null;
    /**
     * The package(s) location.<br/>         eg: Behind the entrance door.
     * @type {string}
     * @memberof PickupRequest
     */
    'package_location'?: string | null;
    /**
     * Advanced carrier specific pickup options
     * @type {{ [key: string]: any; }}
     * @memberof PickupRequest
     */
    'options'?: {
        [key: string]: any;
    } | null;
}
/**
 *
 * @export
 * @interface PickupResponse
 */
export interface PickupResponse {
    /**
     * The list of note or warning messages
     * @type {Array<Message>}
     * @memberof PickupResponse
     */
    'messages'?: Array<Message>;
    /**
     *
     * @type {PickupResponsePickup}
     * @memberof PickupResponse
     */
    'pickup'?: PickupResponsePickup;
}
/**
 * The scheduled pickup\'s summary
 * @export
 * @interface PickupResponsePickup
 */
export interface PickupResponsePickup {
    /**
     * A unique pickup identifier
     * @type {string}
     * @memberof PickupResponsePickup
     */
    'id'?: string;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof PickupResponsePickup
     */
    'object_type'?: string;
    /**
     * The pickup carrier
     * @type {string}
     * @memberof PickupResponsePickup
     */
    'carrier_name': string;
    /**
     * The pickup carrier configured name
     * @type {string}
     * @memberof PickupResponsePickup
     */
    'carrier_id': string;
    /**
     * The pickup confirmation identifier
     * @type {string}
     * @memberof PickupResponsePickup
     */
    'confirmation_number': string;
    /**
     * The pickup date
     * @type {string}
     * @memberof PickupResponsePickup
     */
    'pickup_date'?: string | null;
    /**
     *
     * @type {PickupPickupCharge}
     * @memberof PickupResponsePickup
     */
    'pickup_charge'?: PickupPickupCharge | null;
    /**
     * The pickup expected ready time
     * @type {string}
     * @memberof PickupResponsePickup
     */
    'ready_time'?: string | null;
    /**
     * The pickup expected closing or late time
     * @type {string}
     * @memberof PickupResponsePickup
     */
    'closing_time'?: string | null;
    /**
     *
     * @type {PickupAddress}
     * @memberof PickupResponsePickup
     */
    'address': PickupAddress;
    /**
     * The shipment parcels to pickup.
     * @type {Array<Parcel>}
     * @memberof PickupResponsePickup
     */
    'parcels': Array<Parcel>;
    /**
     * The pickup instruction.<br/>         eg: Handle with care.
     * @type {string}
     * @memberof PickupResponsePickup
     */
    'instruction'?: string | null;
    /**
     * The package(s) location.<br/>         eg: Behind the entrance door.
     * @type {string}
     * @memberof PickupResponsePickup
     */
    'package_location'?: string | null;
    /**
     * Advanced carrier specific pickup options
     * @type {{ [key: string]: any; }}
     * @memberof PickupResponsePickup
     */
    'options'?: {
        [key: string]: any;
    } | null;
    /**
     * User metadata for the pickup
     * @type {{ [key: string]: any; }}
     * @memberof PickupResponsePickup
     */
    'metadata'?: {
        [key: string]: any;
    };
    /**
     * Specified whether it was created with a carrier in test mode
     * @type {boolean}
     * @memberof PickupResponsePickup
     */
    'test_mode': boolean;
}
/**
 *
 * @export
 * @interface PickupUpdateData
 */
export interface PickupUpdateData {
    /**
     * The expected pickup date.<br/>         Date Format: YYYY-MM-DD
     * @type {string}
     * @memberof PickupUpdateData
     */
    'pickup_date'?: string;
    /**
     *
     * @type {PickupCancelRequestAddress}
     * @memberof PickupUpdateData
     */
    'address'?: PickupCancelRequestAddress;
    /**
     * The ready time for pickup.
     * @type {string}
     * @memberof PickupUpdateData
     */
    'ready_time'?: string | null;
    /**
     * The closing or late time of the pickup
     * @type {string}
     * @memberof PickupUpdateData
     */
    'closing_time'?: string | null;
    /**
     * The pickup instruction.<br/>         eg: Handle with care.
     * @type {string}
     * @memberof PickupUpdateData
     */
    'instruction'?: string | null;
    /**
     * The package(s) location.<br/>         eg: Behind the entrance door.
     * @type {string}
     * @memberof PickupUpdateData
     */
    'package_location'?: string | null;
    /**
     * Advanced carrier specific pickup options
     * @type {{ [key: string]: any; }}
     * @memberof PickupUpdateData
     */
    'options'?: {
        [key: string]: any;
    } | null;
    /**
     * The list of shipments to be picked up
     * @type {Array<string>}
     * @memberof PickupUpdateData
     */
    'tracking_numbers'?: Array<string>;
    /**
     * User metadata for the pickup
     * @type {{ [key: string]: any; }}
     * @memberof PickupUpdateData
     */
    'metadata'?: {
        [key: string]: any;
    };
    /**
     * pickup identification number
     * @type {string}
     * @memberof PickupUpdateData
     */
    'confirmation_number': string;
}
/**
 *
 * @export
 * @interface PickupUpdateRequest
 */
export interface PickupUpdateRequest {
    /**
     * The expected pickup date.<br/>         Date Format: `YYYY-MM-DD`
     * @type {string}
     * @memberof PickupUpdateRequest
     */
    'pickup_date': string;
    /**
     *
     * @type {PickupAddress}
     * @memberof PickupUpdateRequest
     */
    'address': PickupAddress;
    /**
     * The shipment parcels to pickup.
     * @type {Array<Parcel>}
     * @memberof PickupUpdateRequest
     */
    'parcels': Array<Parcel>;
    /**
     * pickup identification number
     * @type {string}
     * @memberof PickupUpdateRequest
     */
    'confirmation_number': string;
    /**
     * The ready time for pickup.         Time Format: `HH:MM`
     * @type {string}
     * @memberof PickupUpdateRequest
     */
    'ready_time': string;
    /**
     * The closing or late time of the pickup.<br/>         Time Format: `HH:MM`
     * @type {string}
     * @memberof PickupUpdateRequest
     */
    'closing_time': string;
    /**
     * The pickup instruction.<br/>         eg: Handle with care.
     * @type {string}
     * @memberof PickupUpdateRequest
     */
    'instruction'?: string | null;
    /**
     * The package(s) location.<br/>         eg: Behind the entrance door.
     * @type {string}
     * @memberof PickupUpdateRequest
     */
    'package_location'?: string | null;
    /**
     * Advanced carrier specific pickup options
     * @type {{ [key: string]: any; }}
     * @memberof PickupUpdateRequest
     */
    'options'?: {
        [key: string]: any;
    } | null;
}
/**
 *
 * @export
 * @interface Rate
 */
export interface Rate {
    /**
     * A unique identifier
     * @type {string}
     * @memberof Rate
     */
    'id'?: string;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof Rate
     */
    'object_type'?: string;
    /**
     * The rate\'s carrier
     * @type {string}
     * @memberof Rate
     */
    'carrier_name': string;
    /**
     * The targeted carrier\'s name (unique identifier)
     * @type {string}
     * @memberof Rate
     */
    'carrier_id': string;
    /**
     * The rate monetary values currency code
     * @type {string}
     * @memberof Rate
     */
    'currency'?: string;
    /**
     * The carrier\'s rate (quote) service
     * @type {string}
     * @memberof Rate
     */
    'service'?: string | null;
    /**
     * The rate\'s monetary amount of the total charge.<br/>         This is the gross amount of the rate after adding the additional charges
     * @type {number}
     * @memberof Rate
     */
    'total_charge'?: number;
    /**
     * The estimated delivery transit days
     * @type {number}
     * @memberof Rate
     */
    'transit_days'?: number | null;
    /**
     * list of the rate\'s additional charges
     * @type {Array<Charge>}
     * @memberof Rate
     */
    'extra_charges'?: Array<Charge>;
    /**
     * provider specific metadata
     * @type {{ [key: string]: any; }}
     * @memberof Rate
     */
    'meta'?: {
        [key: string]: any;
    } | null;
    /**
     * Specified whether it was created with a carrier in test mode
     * @type {boolean}
     * @memberof Rate
     */
    'test_mode': boolean;
}
/**
 *
 * @export
 * @interface RateRequest
 */
export interface RateRequest {
    /**
     *
     * @type {RateRequestShipper}
     * @memberof RateRequest
     */
    'shipper': RateRequestShipper;
    /**
     *
     * @type {RateRequestShipper}
     * @memberof RateRequest
     */
    'recipient': RateRequestShipper;
    /**
     * The shipment\'s parcels
     * @type {Array<ParcelData>}
     * @memberof RateRequest
     */
    'parcels': Array<ParcelData>;
    /**
     * The requested carrier service for the shipment.<br/>         Please consult the reference for specific carriers services.<br/>         Note that this is a list because on a Multi-carrier rate request you could specify a service per carrier.
     * @type {Array<string>}
     * @memberof RateRequest
     */
    'services'?: Array<string> | null;
    /**
     * <details>         <summary>The options available for the shipment.</summary>          {             \"currency\": \"USD\",             \"insurance\": 100.00,             \"cash_on_delivery\": 30.00,             \"shipment_date\": \"2020-01-01\",             \"dangerous_good\": true,             \"declared_value\": 150.00,             \"email_notification\": true,             \"email_notification_to\": \"shipper@mail.com\",             \"signature_confirmation\": true,             \"preferred_service\": \"fedex_express_saver\",         }
     * @type {{ [key: string]: any; }}
     * @memberof RateRequest
     */
    'options'?: {
        [key: string]: any;
    };
    /**
     * The shipment reference
     * @type {string}
     * @memberof RateRequest
     */
    'reference'?: string | null;
    /**
     * The list of configured carriers you wish to get rates from.
     * @type {Array<string>}
     * @memberof RateRequest
     */
    'carrier_ids'?: Array<string> | null;
}
/**
 * The address of the party<br/>         Origin address (ship from) for the **shipper**<br/>         Destination address (ship to) for the **recipient**
 * @export
 * @interface RateRequestShipper
 */
export interface RateRequestShipper {
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof RateRequestShipper
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof RateRequestShipper
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof RateRequestShipper
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof RateRequestShipper
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof RateRequestShipper
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof RateRequestShipper
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof RateRequestShipper
     */
    'country_code': CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof RateRequestShipper
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof RateRequestShipper
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof RateRequestShipper
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof RateRequestShipper
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof RateRequestShipper
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof RateRequestShipper
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof RateRequestShipper
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof RateRequestShipper
     */
    'validate_location'?: boolean | null;
}
/**
 *
 * @export
 * @interface RateResponse
 */
export interface RateResponse {
    /**
     * The list of note or warning messages
     * @type {Array<Message>}
     * @memberof RateResponse
     */
    'messages'?: Array<Message>;
    /**
     * The list of returned rates
     * @type {Array<Rate>}
     * @memberof RateResponse
     */
    'rates': Array<Rate>;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const ResourceTypeEnum: {
    readonly Orders: "orders";
    readonly Shipments: "shipments";
    readonly Trackers: "trackers";
    readonly Billing: "billing";
};
export type ResourceTypeEnum = typeof ResourceTypeEnum[keyof typeof ResourceTypeEnum];
/**
 *
 * @export
 * @interface Shipment
 */
export interface Shipment {
    /**
     * A unique identifier
     * @type {string}
     * @memberof Shipment
     */
    'id'?: string;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof Shipment
     */
    'object_type'?: string;
    /**
     * The shipment tracking url
     * @type {string}
     * @memberof Shipment
     */
    'tracking_url'?: string | null;
    /**
     *
     * @type {ShipmentShipper}
     * @memberof Shipment
     */
    'shipper': ShipmentShipper;
    /**
     *
     * @type {ShipmentShipper}
     * @memberof Shipment
     */
    'recipient': ShipmentShipper;
    /**
     * The shipment\'s parcels
     * @type {Array<Parcel>}
     * @memberof Shipment
     */
    'parcels': Array<Parcel>;
    /**
     * The carriers services requested for the shipment.<br/>         Please consult the reference for specific carriers services.<br/>         **Note that this is a list because on a Multi-carrier rate request you could specify a service per carrier.**
     * @type {Array<string>}
     * @memberof Shipment
     */
    'services'?: Array<string> | null;
    /**
     * <details>         <summary>The options available for the shipment.</summary>          {             \"currency\": \"USD\",             \"insurance\": 100.00,             \"cash_on_delivery\": 30.00,             \"shipment_date\": \"2020-01-01\",             \"dangerous_good\": true,             \"declared_value\": 150.00,             \"email_notification\": true,             \"email_notification_to\": \"shipper@mail.com\",             \"signature_confirmation\": true,             \"preferred_service\": \"fedex_express_saver\",         }
     * @type {{ [key: string]: any; }}
     * @memberof Shipment
     */
    'options'?: {
        [key: string]: any;
    };
    /**
     *
     * @type {ShipmentPayment}
     * @memberof Shipment
     */
    'payment'?: ShipmentPayment;
    /**
     *
     * @type {ShipmentBillingAddress}
     * @memberof Shipment
     */
    'billing_address'?: ShipmentBillingAddress | null;
    /**
     *
     * @type {ShipmentCustoms}
     * @memberof Shipment
     */
    'customs'?: ShipmentCustoms | null;
    /**
     * The list for shipment rates fetched previously
     * @type {Array<Rate>}
     * @memberof Shipment
     */
    'rates'?: Array<Rate>;
    /**
     * The shipment reference
     * @type {string}
     * @memberof Shipment
     */
    'reference'?: string | null;
    /**
     *
     * @type {ShipmentLabelType}
     * @memberof Shipment
     */
    'label_type'?: ShipmentLabelType | null;
    /**
     * The list of configured carriers you wish to get rates from.<br/>         **Note that the request will be sent to all carriers in nothing is specified**
     * @type {Array<string>}
     * @memberof Shipment
     */
    'carrier_ids'?: Array<string> | null;
    /**
     * The attached tracker id
     * @type {string}
     * @memberof Shipment
     */
    'tracker_id'?: string | null;
    /**
     * The shipment creation datetime.<br/>         Date Format: `YYYY-MM-DD HH:MM:SS.mmmmmmz`
     * @type {string}
     * @memberof Shipment
     */
    'created_at': string;
    /**
     * User metadata for the shipment
     * @type {{ [key: string]: any; }}
     * @memberof Shipment
     */
    'metadata'?: {
        [key: string]: any;
    };
    /**
     * The list of note or warning messages
     * @type {Array<Message>}
     * @memberof Shipment
     */
    'messages'?: Array<Message>;
    /**
     * The current Shipment status
     * @type {ShipmentStatus}
     * @memberof Shipment
     */
    'status'?: ShipmentStatus;
    /**
     * The shipment carrier
     * @type {string}
     * @memberof Shipment
     */
    'carrier_name'?: string | null;
    /**
     * The shipment carrier configured identifier
     * @type {string}
     * @memberof Shipment
     */
    'carrier_id'?: string | null;
    /**
     * The shipment tracking number
     * @type {string}
     * @memberof Shipment
     */
    'tracking_number'?: string | null;
    /**
     * The shipment carrier system identifier
     * @type {string}
     * @memberof Shipment
     */
    'shipment_identifier'?: string | null;
    /**
     *
     * @type {ShipmentSelectedRate}
     * @memberof Shipment
     */
    'selected_rate'?: ShipmentSelectedRate | null;
    /**
     * provider specific metadata
     * @type {{ [key: string]: any; }}
     * @memberof Shipment
     */
    'meta'?: {
        [key: string]: any;
    } | null;
    /**
     * The selected service
     * @type {string}
     * @memberof Shipment
     */
    'service'?: string | null;
    /**
     * The shipment selected rate.
     * @type {string}
     * @memberof Shipment
     */
    'selected_rate_id'?: string | null;
    /**
     * Specified whether it was created with a carrier in test mode
     * @type {boolean}
     * @memberof Shipment
     */
    'test_mode': boolean;
    /**
     * The shipment label URL
     * @type {string}
     * @memberof Shipment
     */
    'label_url'?: string | null;
    /**
     * The shipment invoice URL
     * @type {string}
     * @memberof Shipment
     */
    'invoice_url'?: string | null;
}
/**
 * The payor address.
 * @export
 * @interface ShipmentBillingAddress
 */
export interface ShipmentBillingAddress {
    /**
     * A unique identifier
     * @type {string}
     * @memberof ShipmentBillingAddress
     */
    'id'?: string;
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof ShipmentBillingAddress
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof ShipmentBillingAddress
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof ShipmentBillingAddress
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof ShipmentBillingAddress
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof ShipmentBillingAddress
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof ShipmentBillingAddress
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof ShipmentBillingAddress
     */
    'country_code': CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof ShipmentBillingAddress
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof ShipmentBillingAddress
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof ShipmentBillingAddress
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof ShipmentBillingAddress
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof ShipmentBillingAddress
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof ShipmentBillingAddress
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof ShipmentBillingAddress
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof ShipmentBillingAddress
     */
    'validate_location'?: boolean | null;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof ShipmentBillingAddress
     */
    'object_type'?: string;
    /**
     *
     * @type {AddressValidation}
     * @memberof ShipmentBillingAddress
     */
    'validation'?: AddressValidation | null;
}
/**
 *
 * @export
 * @interface ShipmentCancelRequest
 */
export interface ShipmentCancelRequest {
    /**
     * The shipment identifier returned during creation
     * @type {string}
     * @memberof ShipmentCancelRequest
     */
    'shipment_identifier': string;
    /**
     * The selected shipment service
     * @type {string}
     * @memberof ShipmentCancelRequest
     */
    'service'?: string | null;
    /**
     * Advanced carrier specific cancellation options
     * @type {{ [key: string]: any; }}
     * @memberof ShipmentCancelRequest
     */
    'options'?: {
        [key: string]: any;
    };
}
/**
 * The customs details.<br/>         **Note that this is required for the shipment of an international Dutiable parcel.**
 * @export
 * @interface ShipmentCustoms
 */
export interface ShipmentCustoms {
    /**
     * A unique identifier
     * @type {string}
     * @memberof ShipmentCustoms
     */
    'id'?: string;
    /**
     * The parcel content items
     * @type {Array<Commodity>}
     * @memberof ShipmentCustoms
     */
    'commodities'?: Array<Commodity>;
    /**
     *
     * @type {CustomsDuty}
     * @memberof ShipmentCustoms
     */
    'duty'?: CustomsDuty | null;
    /**
     *
     * @type {CustomsDutyBillingAddress}
     * @memberof ShipmentCustoms
     */
    'duty_billing_address'?: CustomsDutyBillingAddress | null;
    /**
     *
     * @type {CustomsContentType}
     * @memberof ShipmentCustoms
     */
    'content_type'?: CustomsContentType | null;
    /**
     *
     * @type {string}
     * @memberof ShipmentCustoms
     */
    'content_description'?: string | null;
    /**
     *
     * @type {CustomsIncoterm}
     * @memberof ShipmentCustoms
     */
    'incoterm'?: CustomsIncoterm | null;
    /**
     * The invoice reference number
     * @type {string}
     * @memberof ShipmentCustoms
     */
    'invoice'?: string | null;
    /**
     * The invoice date
     * @type {string}
     * @memberof ShipmentCustoms
     */
    'invoice_date'?: string | null;
    /**
     * Indicates if the shipment is commercial
     * @type {boolean}
     * @memberof ShipmentCustoms
     */
    'commercial_invoice'?: boolean | null;
    /**
     * Indicate that signer certified confirmed all
     * @type {boolean}
     * @memberof ShipmentCustoms
     */
    'certify'?: boolean | null;
    /**
     *
     * @type {string}
     * @memberof ShipmentCustoms
     */
    'signer'?: string | null;
    /**
     * <details>         <summary>Customs identification options.</summary>          {             \"aes\": \"5218487281\",             \"eel_pfc\": \"5218487281\",             \"license_number\": \"5218487281\",             \"certificate_number\": \"5218487281\",             \"nip_number\": \"5218487281\",             \"eori_number\": \"5218487281\",             \"vat_registration_number\": \"5218487281\",         }
     * @type {{ [key: string]: any; }}
     * @memberof ShipmentCustoms
     */
    'options'?: {
        [key: string]: any;
    };
    /**
     * Specifies the object type
     * @type {string}
     * @memberof ShipmentCustoms
     */
    'object_type'?: string;
}
/**
 *
 * @export
 * @interface ShipmentData
 */
export interface ShipmentData {
    /**
     *
     * @type {ShipmentDataShipper}
     * @memberof ShipmentData
     */
    'shipper': ShipmentDataShipper;
    /**
     *
     * @type {ShipmentDataShipper}
     * @memberof ShipmentData
     */
    'recipient': ShipmentDataShipper;
    /**
     * The shipment\'s parcels
     * @type {Array<ParcelData>}
     * @memberof ShipmentData
     */
    'parcels': Array<ParcelData>;
    /**
     * <details>         <summary>The options available for the shipment.</summary>          {             \"currency\": \"USD\",             \"insurance\": 100.00,             \"cash_on_delivery\": 30.00,             \"shipment_date\": \"2020-01-01\",             \"dangerous_good\": true,             \"declared_value\": 150.00,             \"email_notification\": true,             \"email_notification_to\": \"shipper@mail.com\",             \"signature_confirmation\": true,             \"preferred_service\": \"fedex_express_saver\",         }
     * @type {{ [key: string]: any; }}
     * @memberof ShipmentData
     */
    'options'?: {
        [key: string]: any;
    };
    /**
     *
     * @type {ShipmentPayment}
     * @memberof ShipmentData
     */
    'payment'?: ShipmentPayment;
    /**
     *
     * @type {ShipmentDataBillingAddress}
     * @memberof ShipmentData
     */
    'billing_address'?: ShipmentDataBillingAddress | null;
    /**
     *
     * @type {ShipmentDataCustoms}
     * @memberof ShipmentData
     */
    'customs'?: ShipmentDataCustoms | null;
    /**
     * The shipment reference
     * @type {string}
     * @memberof ShipmentData
     */
    'reference'?: string | null;
    /**
     * The shipment label file type.
     * @type {LabelTypeEnum}
     * @memberof ShipmentData
     */
    'label_type'?: LabelTypeEnum;
    /**
     * **Specify a service to Buy a label in one call without rating.**
     * @type {string}
     * @memberof ShipmentData
     */
    'service'?: string;
    /**
     * The requested carrier service for the shipment.<br/>         Please consult the reference for specific carriers services.<br/>         **Note that this is a list because on a Multi-carrier rate request         you could specify a service per carrier.**
     * @type {Array<string>}
     * @memberof ShipmentData
     */
    'services'?: Array<string> | null;
    /**
     * The list of configured carriers you wish to get rates from.<br/>         **Note that the request will be sent to all carriers in nothing is specified**
     * @type {Array<string>}
     * @memberof ShipmentData
     */
    'carrier_ids'?: Array<string> | null;
    /**
     * User metadata for the shipment
     * @type {{ [key: string]: any; }}
     * @memberof ShipmentData
     */
    'metadata'?: {
        [key: string]: any;
    };
}
/**
 * The payor address.
 * @export
 * @interface ShipmentDataBillingAddress
 */
export interface ShipmentDataBillingAddress {
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof ShipmentDataBillingAddress
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof ShipmentDataBillingAddress
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof ShipmentDataBillingAddress
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof ShipmentDataBillingAddress
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof ShipmentDataBillingAddress
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof ShipmentDataBillingAddress
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof ShipmentDataBillingAddress
     */
    'country_code': CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof ShipmentDataBillingAddress
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof ShipmentDataBillingAddress
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof ShipmentDataBillingAddress
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof ShipmentDataBillingAddress
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof ShipmentDataBillingAddress
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof ShipmentDataBillingAddress
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof ShipmentDataBillingAddress
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof ShipmentDataBillingAddress
     */
    'validate_location'?: boolean | null;
}
/**
 * The customs details.<br/>         **Note that this is required for the shipment of an international Dutiable parcel.**
 * @export
 * @interface ShipmentDataCustoms
 */
export interface ShipmentDataCustoms {
    /**
     * The parcel content items
     * @type {Array<CommodityData>}
     * @memberof ShipmentDataCustoms
     */
    'commodities': Array<CommodityData>;
    /**
     *
     * @type {CustomsDuty}
     * @memberof ShipmentDataCustoms
     */
    'duty'?: CustomsDuty | null;
    /**
     *
     * @type {CustomsDataDutyBillingAddress}
     * @memberof ShipmentDataCustoms
     */
    'duty_billing_address'?: CustomsDataDutyBillingAddress | null;
    /**
     *
     * @type {CustomsContentType}
     * @memberof ShipmentDataCustoms
     */
    'content_type'?: CustomsContentType | null;
    /**
     *
     * @type {string}
     * @memberof ShipmentDataCustoms
     */
    'content_description'?: string | null;
    /**
     *
     * @type {CustomsIncoterm}
     * @memberof ShipmentDataCustoms
     */
    'incoterm'?: CustomsIncoterm | null;
    /**
     * The invoice reference number
     * @type {string}
     * @memberof ShipmentDataCustoms
     */
    'invoice'?: string | null;
    /**
     * The invoice date
     * @type {string}
     * @memberof ShipmentDataCustoms
     */
    'invoice_date'?: string | null;
    /**
     * Indicates if the shipment is commercial
     * @type {boolean}
     * @memberof ShipmentDataCustoms
     */
    'commercial_invoice'?: boolean | null;
    /**
     * Indicate that signer certified confirmed all
     * @type {boolean}
     * @memberof ShipmentDataCustoms
     */
    'certify'?: boolean | null;
    /**
     *
     * @type {string}
     * @memberof ShipmentDataCustoms
     */
    'signer'?: string | null;
    /**
     * <details>         <summary>Customs identification options.</summary>          {             \"aes\": \"5218487281\",             \"eel_pfc\": \"5218487281\",             \"license_number\": \"5218487281\",             \"certificate_number\": \"5218487281\",             \"nip_number\": \"5218487281\",             \"eori_number\": \"5218487281\",             \"vat_registration_number\": \"5218487281\",         }
     * @type {{ [key: string]: any; }}
     * @memberof ShipmentDataCustoms
     */
    'options'?: {
        [key: string]: any;
    };
}
/**
 * The address of the party.<br/>         Origin address (ship from) for the **shipper**<br/>         Destination address (ship to) for the **recipient**
 * @export
 * @interface ShipmentDataShipper
 */
export interface ShipmentDataShipper {
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof ShipmentDataShipper
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof ShipmentDataShipper
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof ShipmentDataShipper
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof ShipmentDataShipper
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof ShipmentDataShipper
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof ShipmentDataShipper
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof ShipmentDataShipper
     */
    'country_code': CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof ShipmentDataShipper
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof ShipmentDataShipper
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof ShipmentDataShipper
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof ShipmentDataShipper
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof ShipmentDataShipper
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof ShipmentDataShipper
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof ShipmentDataShipper
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof ShipmentDataShipper
     */
    'validate_location'?: boolean | null;
}
/**
 * @type ShipmentLabelType
 * The shipment label file type.
 * @export
 */
export type ShipmentLabelType = BlankEnum | LabelTypeEnum | NullEnum;
/**
 *
 * @export
 * @interface ShipmentList
 */
export interface ShipmentList {
    /**
     *
     * @type {number}
     * @memberof ShipmentList
     */
    'count'?: number | null;
    /**
     *
     * @type {string}
     * @memberof ShipmentList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ShipmentList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<Shipment>}
     * @memberof ShipmentList
     */
    'results': Array<Shipment>;
}
/**
 * The payment details
 * @export
 * @interface ShipmentPayment
 */
export interface ShipmentPayment {
    /**
     * The payor type
     * @type {PaidByEnum}
     * @memberof ShipmentPayment
     */
    'paid_by'?: PaidByEnum;
    /**
     *
     * @type {PaymentCurrency}
     * @memberof ShipmentPayment
     */
    'currency'?: PaymentCurrency | null;
    /**
     * The payor account number
     * @type {string}
     * @memberof ShipmentPayment
     */
    'account_number'?: string | null;
}
/**
 *
 * @export
 * @interface ShipmentPurchaseData
 */
export interface ShipmentPurchaseData {
    /**
     * The shipment selected rate.
     * @type {string}
     * @memberof ShipmentPurchaseData
     */
    'selected_rate_id': string;
    /**
     * The shipment label file type.
     * @type {LabelTypeEnum}
     * @memberof ShipmentPurchaseData
     */
    'label_type'?: LabelTypeEnum;
    /**
     *
     * @type {ShipmentPurchaseDataPayment}
     * @memberof ShipmentPurchaseData
     */
    'payment'?: ShipmentPurchaseDataPayment;
    /**
     * The shipment reference
     * @type {string}
     * @memberof ShipmentPurchaseData
     */
    'reference'?: string | null;
    /**
     * User metadata for the shipment
     * @type {{ [key: string]: any; }}
     * @memberof ShipmentPurchaseData
     */
    'metadata'?: {
        [key: string]: any;
    };
}
/**
 * The payment details
 * @export
 * @interface ShipmentPurchaseDataPayment
 */
export interface ShipmentPurchaseDataPayment {
    /**
     * The payor type
     * @type {PaidByEnum}
     * @memberof ShipmentPurchaseDataPayment
     */
    'paid_by'?: PaidByEnum;
    /**
     *
     * @type {PaymentCurrency}
     * @memberof ShipmentPurchaseDataPayment
     */
    'currency'?: PaymentCurrency | null;
    /**
     * The payor account number
     * @type {string}
     * @memberof ShipmentPurchaseDataPayment
     */
    'account_number'?: string | null;
}
/**
 *
 * @export
 * @interface ShipmentRateData
 */
export interface ShipmentRateData {
    /**
     * The requested carrier service for the shipment.<br/>         Please consult [the reference](#operation/references) for specific carriers services.<br/>         **Note that this is a list because on a Multi-carrier rate request you could         specify a service per carrier.**
     * @type {Array<string>}
     * @memberof ShipmentRateData
     */
    'services'?: Array<string> | null;
    /**
     * The list of configured carriers you wish to get rates from.<br/>         **Note that the request will be sent to all carriers in nothing is specified**
     * @type {Array<string>}
     * @memberof ShipmentRateData
     */
    'carrier_ids'?: Array<string> | null;
    /**
     * The shipment reference
     * @type {string}
     * @memberof ShipmentRateData
     */
    'reference'?: string | null;
    /**
     * User metadata for the shipment
     * @type {{ [key: string]: any; }}
     * @memberof ShipmentRateData
     */
    'metadata'?: {
        [key: string]: any;
    };
}
/**
 * The shipment selected rate
 * @export
 * @interface ShipmentSelectedRate
 */
export interface ShipmentSelectedRate {
    /**
     * A unique identifier
     * @type {string}
     * @memberof ShipmentSelectedRate
     */
    'id'?: string;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof ShipmentSelectedRate
     */
    'object_type'?: string;
    /**
     * The rate\'s carrier
     * @type {string}
     * @memberof ShipmentSelectedRate
     */
    'carrier_name': string;
    /**
     * The targeted carrier\'s name (unique identifier)
     * @type {string}
     * @memberof ShipmentSelectedRate
     */
    'carrier_id': string;
    /**
     * The rate monetary values currency code
     * @type {string}
     * @memberof ShipmentSelectedRate
     */
    'currency'?: string;
    /**
     * The carrier\'s rate (quote) service
     * @type {string}
     * @memberof ShipmentSelectedRate
     */
    'service'?: string | null;
    /**
     * The rate\'s monetary amount of the total charge.<br/>         This is the gross amount of the rate after adding the additional charges
     * @type {number}
     * @memberof ShipmentSelectedRate
     */
    'total_charge'?: number;
    /**
     * The estimated delivery transit days
     * @type {number}
     * @memberof ShipmentSelectedRate
     */
    'transit_days'?: number | null;
    /**
     * list of the rate\'s additional charges
     * @type {Array<Charge>}
     * @memberof ShipmentSelectedRate
     */
    'extra_charges'?: Array<Charge>;
    /**
     * provider specific metadata
     * @type {{ [key: string]: any; }}
     * @memberof ShipmentSelectedRate
     */
    'meta'?: {
        [key: string]: any;
    } | null;
    /**
     * Specified whether it was created with a carrier in test mode
     * @type {boolean}
     * @memberof ShipmentSelectedRate
     */
    'test_mode': boolean;
}
/**
 * The address of the party.<br/>         Origin address (ship from) for the **shipper**<br/>         Destination address (ship to) for the **recipient**
 * @export
 * @interface ShipmentShipper
 */
export interface ShipmentShipper {
    /**
     * A unique identifier
     * @type {string}
     * @memberof ShipmentShipper
     */
    'id'?: string;
    /**
     * The address postal code         **(required for shipment purchase)**
     * @type {string}
     * @memberof ShipmentShipper
     */
    'postal_code'?: string | null;
    /**
     * The address city.         **(required for shipment purchase)**
     * @type {string}
     * @memberof ShipmentShipper
     */
    'city'?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof ShipmentShipper
     */
    'federal_tax_id'?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof ShipmentShipper
     */
    'state_tax_id'?: string | null;
    /**
     * Attention to         **(required for shipment purchase)**
     * @type {string}
     * @memberof ShipmentShipper
     */
    'person_name'?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof ShipmentShipper
     */
    'company_name'?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof ShipmentShipper
     */
    'country_code': CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof ShipmentShipper
     */
    'email'?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof ShipmentShipper
     */
    'phone_number'?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof ShipmentShipper
     */
    'state_code'?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof ShipmentShipper
     */
    'suburb'?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof ShipmentShipper
     */
    'residential'?: boolean | null;
    /**
     * The address line with street number <br/>         **(required for shipment purchase)**
     * @type {string}
     * @memberof ShipmentShipper
     */
    'address_line1'?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof ShipmentShipper
     */
    'address_line2'?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof ShipmentShipper
     */
    'validate_location'?: boolean | null;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof ShipmentShipper
     */
    'object_type'?: string;
    /**
     *
     * @type {AddressValidation}
     * @memberof ShipmentShipper
     */
    'validation'?: AddressValidation | null;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const ShipmentStatus: {
    readonly Draft: "draft";
    readonly Purchased: "purchased";
    readonly Cancelled: "cancelled";
    readonly Shipped: "shipped";
    readonly InTransit: "in_transit";
    readonly Delivered: "delivered";
};
export type ShipmentStatus = typeof ShipmentStatus[keyof typeof ShipmentStatus];
/**
 *
 * @export
 * @interface ShipmentUpdateData
 */
export interface ShipmentUpdateData {
    /**
     * The shipment label file type.
     * @type {LabelTypeEnum}
     * @memberof ShipmentUpdateData
     */
    'label_type'?: LabelTypeEnum;
    /**
     *
     * @type {ShipmentPurchaseDataPayment}
     * @memberof ShipmentUpdateData
     */
    'payment'?: ShipmentPurchaseDataPayment;
    /**
     * <details>         <summary>The options available for the shipment.</summary>          {             \"currency\": \"USD\",             \"insurance\": 100.00,             \"cash_on_delivery\": 30.00,             \"shipment_date\": \"2020-01-01\",             \"dangerous_good\": true,             \"declared_value\": 150.00,             \"email_notification\": true,             \"email_notification_to\": \"shipper@mail.com\",             \"signature_confirmation\": true,         }
     * @type {{ [key: string]: any; }}
     * @memberof ShipmentUpdateData
     */
    'options'?: {
        [key: string]: any;
    };
    /**
     * The shipment reference
     * @type {string}
     * @memberof ShipmentUpdateData
     */
    'reference'?: string | null;
    /**
     * User metadata for the shipment
     * @type {{ [key: string]: any; }}
     * @memberof ShipmentUpdateData
     */
    'metadata'?: {
        [key: string]: any;
    };
}
/**
 *
 * @export
 * @interface ShippingRequest
 */
export interface ShippingRequest {
    /**
     *
     * @type {ShipmentDataShipper}
     * @memberof ShippingRequest
     */
    'shipper': ShipmentDataShipper;
    /**
     *
     * @type {ShipmentDataShipper}
     * @memberof ShippingRequest
     */
    'recipient': ShipmentDataShipper;
    /**
     * The shipment\'s parcels
     * @type {Array<ParcelData>}
     * @memberof ShippingRequest
     */
    'parcels': Array<ParcelData>;
    /**
     * <details>         <summary>The options available for the shipment.</summary>          {             \"currency\": \"USD\",             \"insurance\": 100.00,             \"cash_on_delivery\": 30.00,             \"shipment_date\": \"2020-01-01\",             \"dangerous_good\": true,             \"declared_value\": 150.00,             \"email_notification\": true,             \"email_notification_to\": \"shipper@mail.com\",             \"signature_confirmation\": true,             \"preferred_service\": \"fedex_express_saver\",         }
     * @type {{ [key: string]: any; }}
     * @memberof ShippingRequest
     */
    'options'?: {
        [key: string]: any;
    };
    /**
     *
     * @type {ShipmentPayment}
     * @memberof ShippingRequest
     */
    'payment'?: ShipmentPayment;
    /**
     *
     * @type {ShipmentDataBillingAddress}
     * @memberof ShippingRequest
     */
    'billing_address'?: ShipmentDataBillingAddress | null;
    /**
     *
     * @type {ShipmentDataCustoms}
     * @memberof ShippingRequest
     */
    'customs'?: ShipmentDataCustoms | null;
    /**
     * The shipment reference
     * @type {string}
     * @memberof ShippingRequest
     */
    'reference'?: string | null;
    /**
     * The shipment label file type.
     * @type {LabelTypeEnum}
     * @memberof ShippingRequest
     */
    'label_type'?: LabelTypeEnum;
    /**
     * The shipment selected rate.
     * @type {string}
     * @memberof ShippingRequest
     */
    'selected_rate_id': string;
    /**
     * The list for shipment rates fetched previously
     * @type {Array<Rate>}
     * @memberof ShippingRequest
     */
    'rates': Array<Rate>;
}
/**
 *
 * @export
 * @interface ShippingResponse
 */
export interface ShippingResponse {
    /**
     * A unique identifier
     * @type {string}
     * @memberof ShippingResponse
     */
    'id'?: string;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof ShippingResponse
     */
    'object_type'?: string;
    /**
     * The shipment tracking url
     * @type {string}
     * @memberof ShippingResponse
     */
    'tracking_url'?: string | null;
    /**
     *
     * @type {ShipmentShipper}
     * @memberof ShippingResponse
     */
    'shipper': ShipmentShipper;
    /**
     *
     * @type {ShipmentShipper}
     * @memberof ShippingResponse
     */
    'recipient': ShipmentShipper;
    /**
     * The shipment\'s parcels
     * @type {Array<Parcel>}
     * @memberof ShippingResponse
     */
    'parcels': Array<Parcel>;
    /**
     * The carriers services requested for the shipment.<br/>         Please consult the reference for specific carriers services.<br/>         **Note that this is a list because on a Multi-carrier rate request you could specify a service per carrier.**
     * @type {Array<string>}
     * @memberof ShippingResponse
     */
    'services'?: Array<string> | null;
    /**
     * <details>         <summary>The options available for the shipment.</summary>          {             \"currency\": \"USD\",             \"insurance\": 100.00,             \"cash_on_delivery\": 30.00,             \"shipment_date\": \"2020-01-01\",             \"dangerous_good\": true,             \"declared_value\": 150.00,             \"email_notification\": true,             \"email_notification_to\": \"shipper@mail.com\",             \"signature_confirmation\": true,             \"preferred_service\": \"fedex_express_saver\",         }
     * @type {{ [key: string]: any; }}
     * @memberof ShippingResponse
     */
    'options'?: {
        [key: string]: any;
    };
    /**
     *
     * @type {ShipmentPayment}
     * @memberof ShippingResponse
     */
    'payment'?: ShipmentPayment;
    /**
     *
     * @type {ShipmentBillingAddress}
     * @memberof ShippingResponse
     */
    'billing_address'?: ShipmentBillingAddress | null;
    /**
     *
     * @type {ShipmentCustoms}
     * @memberof ShippingResponse
     */
    'customs'?: ShipmentCustoms | null;
    /**
     * The list for shipment rates fetched previously
     * @type {Array<Rate>}
     * @memberof ShippingResponse
     */
    'rates'?: Array<Rate>;
    /**
     * The shipment reference
     * @type {string}
     * @memberof ShippingResponse
     */
    'reference'?: string | null;
    /**
     *
     * @type {ShipmentLabelType}
     * @memberof ShippingResponse
     */
    'label_type'?: ShipmentLabelType | null;
    /**
     * The list of configured carriers you wish to get rates from.<br/>         **Note that the request will be sent to all carriers in nothing is specified**
     * @type {Array<string>}
     * @memberof ShippingResponse
     */
    'carrier_ids'?: Array<string> | null;
    /**
     * The attached tracker id
     * @type {string}
     * @memberof ShippingResponse
     */
    'tracker_id'?: string | null;
    /**
     * The shipment creation datetime.<br/>         Date Format: `YYYY-MM-DD HH:MM:SS.mmmmmmz`
     * @type {string}
     * @memberof ShippingResponse
     */
    'created_at': string;
    /**
     * User metadata for the shipment
     * @type {{ [key: string]: any; }}
     * @memberof ShippingResponse
     */
    'metadata'?: {
        [key: string]: any;
    };
    /**
     * The list of note or warning messages
     * @type {Array<Message>}
     * @memberof ShippingResponse
     */
    'messages'?: Array<Message>;
    /**
     * The current Shipment status
     * @type {ShipmentStatus}
     * @memberof ShippingResponse
     */
    'status'?: ShipmentStatus;
    /**
     * The shipment carrier
     * @type {string}
     * @memberof ShippingResponse
     */
    'carrier_name'?: string | null;
    /**
     * The shipment carrier configured identifier
     * @type {string}
     * @memberof ShippingResponse
     */
    'carrier_id'?: string | null;
    /**
     * The shipment tracking number
     * @type {string}
     * @memberof ShippingResponse
     */
    'tracking_number'?: string | null;
    /**
     * The shipment carrier system identifier
     * @type {string}
     * @memberof ShippingResponse
     */
    'shipment_identifier'?: string | null;
    /**
     *
     * @type {ShipmentSelectedRate}
     * @memberof ShippingResponse
     */
    'selected_rate'?: ShipmentSelectedRate | null;
    /**
     *
     * @type {ShippingResponseDocs}
     * @memberof ShippingResponse
     */
    'docs'?: ShippingResponseDocs | null;
    /**
     * provider specific metadata
     * @type {{ [key: string]: any; }}
     * @memberof ShippingResponse
     */
    'meta'?: {
        [key: string]: any;
    } | null;
    /**
     * The selected service
     * @type {string}
     * @memberof ShippingResponse
     */
    'service'?: string | null;
    /**
     * The shipment selected rate.
     * @type {string}
     * @memberof ShippingResponse
     */
    'selected_rate_id'?: string | null;
    /**
     * Specified whether it was created with a carrier in test mode
     * @type {boolean}
     * @memberof ShippingResponse
     */
    'test_mode': boolean;
}
/**
 * The shipment documents
 * @export
 * @interface ShippingResponseDocs
 */
export interface ShippingResponseDocs {
    /**
     * The shipment label in base64 string
     * @type {string}
     * @memberof ShippingResponseDocs
     */
    'label'?: string | null;
    /**
     * The shipment invoice in base64 string
     * @type {string}
     * @memberof ShippingResponseDocs
     */
    'invoice'?: string | null;
}
/**
 *
 * @export
 * @interface TokenObtainPair
 */
export interface TokenObtainPair {
    /**
     *
     * @type {string}
     * @memberof TokenObtainPair
     */
    'email': string;
    /**
     *
     * @type {string}
     * @memberof TokenObtainPair
     */
    'password': string;
}
/**
 *
 * @export
 * @interface TokenPair
 */
export interface TokenPair {
    /**
     *
     * @type {string}
     * @memberof TokenPair
     */
    'access': string;
    /**
     *
     * @type {string}
     * @memberof TokenPair
     */
    'refresh': string;
}
/**
 *
 * @export
 * @interface TokenRefresh
 */
export interface TokenRefresh {
    /**
     *
     * @type {string}
     * @memberof TokenRefresh
     */
    'refresh': string;
    /**
     *
     * @type {string}
     * @memberof TokenRefresh
     */
    'access': string;
}
/**
 *
 * @export
 * @interface TokenVerify
 */
export interface TokenVerify {
    /**
     *
     * @type {string}
     * @memberof TokenVerify
     */
    'token': string;
}
/**
 *
 * @export
 * @interface TrackerList
 */
export interface TrackerList {
    /**
     *
     * @type {number}
     * @memberof TrackerList
     */
    'count'?: number | null;
    /**
     *
     * @type {string}
     * @memberof TrackerList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof TrackerList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<TrackingStatus>}
     * @memberof TrackerList
     */
    'results': Array<TrackingStatus>;
}
/**
 *
 * @export
 * @interface TrackerUpdateData
 */
export interface TrackerUpdateData {
    /**
     * User metadata for the tracker
     * @type {{ [key: string]: any; }}
     * @memberof TrackerUpdateData
     */
    'metadata'?: {
        [key: string]: any;
    };
}
/**
 *
 * @export
 * @interface TrackingData
 */
export interface TrackingData {
    /**
     * The package tracking number
     * @type {string}
     * @memberof TrackingData
     */
    'tracking_number': string;
    /**
     * The tracking carrier
     * @type {string}
     * @memberof TrackingData
     */
    'carrier_name': string;
}
/**
 *
 * @export
 * @interface TrackingEvent
 */
export interface TrackingEvent {
    /**
     * The tracking event\'s date
     * @type {string}
     * @memberof TrackingEvent
     */
    'date'?: string;
    /**
     * The tracking event\'s description
     * @type {string}
     * @memberof TrackingEvent
     */
    'description'?: string;
    /**
     * The tracking event\'s location
     * @type {string}
     * @memberof TrackingEvent
     */
    'location'?: string;
    /**
     * The tracking event\'s code
     * @type {string}
     * @memberof TrackingEvent
     */
    'code'?: string | null;
    /**
     * The tracking event\'s time
     * @type {string}
     * @memberof TrackingEvent
     */
    'time'?: string | null;
}
/**
 *
 * @export
 * @interface TrackingResponse
 */
export interface TrackingResponse {
    /**
     * The list of note or warning messages
     * @type {Array<Message>}
     * @memberof TrackingResponse
     */
    'messages'?: Array<Message>;
    /**
     *
     * @type {TrackingResponseTracking}
     * @memberof TrackingResponse
     */
    'tracking'?: TrackingResponseTracking;
}
/**
 * The tracking details retrieved
 * @export
 * @interface TrackingResponseTracking
 */
export interface TrackingResponseTracking {
    /**
     * A unique identifier
     * @type {string}
     * @memberof TrackingResponseTracking
     */
    'id'?: string;
    /**
     * The tracking carrier
     * @type {string}
     * @memberof TrackingResponseTracking
     */
    'carrier_name': string;
    /**
     * The tracking carrier configured identifier
     * @type {string}
     * @memberof TrackingResponseTracking
     */
    'carrier_id': string;
    /**
     * The shipment tracking number
     * @type {string}
     * @memberof TrackingResponseTracking
     */
    'tracking_number': string;
    /**
     * The tracking details events
     * @type {Array<TrackingEvent>}
     * @memberof TrackingResponseTracking
     */
    'events'?: Array<TrackingEvent> | null;
    /**
     * Specified whether the related shipment was delivered
     * @type {boolean}
     * @memberof TrackingResponseTracking
     */
    'delivered'?: boolean;
    /**
     * Specified whether the object was created with a carrier in test mode
     * @type {boolean}
     * @memberof TrackingResponseTracking
     */
    'test_mode': boolean;
    /**
     * The current tracking status
     * @type {TrackingStatusStatusEnum}
     * @memberof TrackingResponseTracking
     */
    'status'?: TrackingStatusStatusEnum;
    /**
     * The delivery estimated date
     * @type {string}
     * @memberof TrackingResponseTracking
     */
    'estimated_delivery'?: string;
    /**
     * provider specific metadata
     * @type {{ [key: string]: any; }}
     * @memberof TrackingResponseTracking
     */
    'meta'?: {
        [key: string]: any;
    } | null;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof TrackingResponseTracking
     */
    'object_type'?: string;
    /**
     * User metadata for the tracker
     * @type {{ [key: string]: any; }}
     * @memberof TrackingResponseTracking
     */
    'metadata'?: {
        [key: string]: any;
    };
    /**
     * The list of note or warning messages
     * @type {Array<Message>}
     * @memberof TrackingResponseTracking
     */
    'messages'?: Array<Message>;
}
/**
 *
 * @export
 * @interface TrackingStatus
 */
export interface TrackingStatus {
    /**
     * A unique identifier
     * @type {string}
     * @memberof TrackingStatus
     */
    'id'?: string;
    /**
     * The tracking carrier
     * @type {string}
     * @memberof TrackingStatus
     */
    'carrier_name': string;
    /**
     * The tracking carrier configured identifier
     * @type {string}
     * @memberof TrackingStatus
     */
    'carrier_id': string;
    /**
     * The shipment tracking number
     * @type {string}
     * @memberof TrackingStatus
     */
    'tracking_number': string;
    /**
     * The tracking details events
     * @type {Array<TrackingEvent>}
     * @memberof TrackingStatus
     */
    'events'?: Array<TrackingEvent> | null;
    /**
     * Specified whether the related shipment was delivered
     * @type {boolean}
     * @memberof TrackingStatus
     */
    'delivered'?: boolean;
    /**
     * Specified whether the object was created with a carrier in test mode
     * @type {boolean}
     * @memberof TrackingStatus
     */
    'test_mode': boolean;
    /**
     * The current tracking status
     * @type {TrackingStatusStatusEnum}
     * @memberof TrackingStatus
     */
    'status'?: TrackingStatusStatusEnum;
    /**
     * The delivery estimated date
     * @type {string}
     * @memberof TrackingStatus
     */
    'estimated_delivery'?: string;
    /**
     * provider specific metadata
     * @type {{ [key: string]: any; }}
     * @memberof TrackingStatus
     */
    'meta'?: {
        [key: string]: any;
    } | null;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof TrackingStatus
     */
    'object_type'?: string;
    /**
     * User metadata for the tracker
     * @type {{ [key: string]: any; }}
     * @memberof TrackingStatus
     */
    'metadata'?: {
        [key: string]: any;
    };
    /**
     * The list of note or warning messages
     * @type {Array<Message>}
     * @memberof TrackingStatus
     */
    'messages'?: Array<Message>;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const TrackingStatusStatusEnum: {
    readonly Pending: "pending";
    readonly InTransit: "in_transit";
    readonly Incident: "incident";
    readonly Delivered: "delivered";
    readonly Unknown: "unknown";
};
export type TrackingStatusStatusEnum = typeof TrackingStatusStatusEnum[keyof typeof TrackingStatusStatusEnum];
/**
 *
 * @export
 * @interface VerifiedTokenObtainPair
 */
export interface VerifiedTokenObtainPair {
    /**
     *
     * @type {string}
     * @memberof VerifiedTokenObtainPair
     */
    'refresh': string;
    /**
     *
     * @type {string}
     * @memberof VerifiedTokenObtainPair
     */
    'access': string;
    /**
     * The OTP (One Time Password) token received by the user from the         configured Two Factor Authentication method.
     * @type {string}
     * @memberof VerifiedTokenObtainPair
     */
    'otp_token': string;
}
/**
 *
 * @export
 * @interface Webhook
 */
export interface Webhook {
    /**
     * A unique identifier
     * @type {string}
     * @memberof Webhook
     */
    'id'?: string;
    /**
     * The URL of the webhook endpoint.
     * @type {string}
     * @memberof Webhook
     */
    'url': string;
    /**
     * An optional description of what the webhook is used for.
     * @type {string}
     * @memberof Webhook
     */
    'description'?: string | null;
    /**
     * The list of events to enable for this endpoint.
     * @type {Array<EnabledEventsEnum>}
     * @memberof Webhook
     */
    'enabled_events': Array<EnabledEventsEnum>;
    /**
     * Indicates that the webhook is disabled
     * @type {boolean}
     * @memberof Webhook
     */
    'disabled'?: boolean | null;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof Webhook
     */
    'object_type'?: string;
    /**
     * The datetime of the last event sent.
     * @type {string}
     * @memberof Webhook
     */
    'last_event_at'?: string | null;
    /**
     * Header signature secret
     * @type {string}
     * @memberof Webhook
     */
    'secret': string;
    /**
     * Specified whether it was created with a carrier in test mode
     * @type {boolean}
     * @memberof Webhook
     */
    'test_mode': boolean;
}
/**
 *
 * @export
 * @interface WebhookData
 */
export interface WebhookData {
    /**
     * The URL of the webhook endpoint.
     * @type {string}
     * @memberof WebhookData
     */
    'url': string;
    /**
     * An optional description of what the webhook is used for.
     * @type {string}
     * @memberof WebhookData
     */
    'description'?: string | null;
    /**
     * The list of events to enable for this endpoint.
     * @type {Array<EnabledEventsEnum>}
     * @memberof WebhookData
     */
    'enabled_events': Array<EnabledEventsEnum>;
    /**
     * Indicates that the webhook is disabled
     * @type {boolean}
     * @memberof WebhookData
     */
    'disabled'?: boolean | null;
}
/**
 *
 * @export
 * @interface WebhookList
 */
export interface WebhookList {
    /**
     *
     * @type {number}
     * @memberof WebhookList
     */
    'count'?: number | null;
    /**
     *
     * @type {string}
     * @memberof WebhookList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof WebhookList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<Webhook>}
     * @memberof WebhookList
     */
    'results': Array<Webhook>;
}
/**
 *
 * @export
 * @interface WebhookTestRequest
 */
export interface WebhookTestRequest {
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof WebhookTestRequest
     */
    'payload': {
        [key: string]: any;
    };
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const WeightUnitEnum: {
    readonly Kg: "KG";
    readonly Lb: "LB";
};
export type WeightUnitEnum = typeof WeightUnitEnum[keyof typeof WeightUnitEnum];
/**
 * APIApi - axios parameter creator
 * @export
 */
export declare const APIApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Authenticate the user and return a token pair
     * @summary Obtain auth token pair
     * @param {TokenObtainPair} tokenObtainPair
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authenticate: (tokenObtainPair: TokenObtainPair, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Data References
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    data: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a verified JWT token pair by submitting a Two-Factor authentication code.
     * @summary Get verified JWT token
     * @param {VerifiedTokenObtainPair} verifiedTokenObtainPair
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getVerifiedToken: (verifiedTokenObtainPair: VerifiedTokenObtainPair, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Instance Metadata
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ping: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Authenticate the user and return a token pair
     * @summary Refresh auth token
     * @param {TokenRefresh} tokenRefresh
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refreshToken: (tokenRefresh: TokenRefresh, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Verify an existent authentication token
     * @summary Verify token
     * @param {TokenVerify} tokenVerify
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verifyToken: (tokenVerify: TokenVerify, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * APIApi - functional programming interface
 * @export
 */
export declare const APIApiFp: (configuration?: Configuration) => {
    /**
     * Authenticate the user and return a token pair
     * @summary Obtain auth token pair
     * @param {TokenObtainPair} tokenObtainPair
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authenticate(tokenObtainPair: TokenObtainPair, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TokenPair>>;
    /**
     *
     * @summary Data References
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    data(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<{
        [key: string]: any;
    }>>;
    /**
     * Get a verified JWT token pair by submitting a Two-Factor authentication code.
     * @summary Get verified JWT token
     * @param {VerifiedTokenObtainPair} verifiedTokenObtainPair
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getVerifiedToken(verifiedTokenObtainPair: VerifiedTokenObtainPair, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TokenPair>>;
    /**
     *
     * @summary Instance Metadata
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ping(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<{
        [key: string]: any;
    }>>;
    /**
     * Authenticate the user and return a token pair
     * @summary Refresh auth token
     * @param {TokenRefresh} tokenRefresh
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refreshToken(tokenRefresh: TokenRefresh, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TokenPair>>;
    /**
     * Verify an existent authentication token
     * @summary Verify token
     * @param {TokenVerify} tokenVerify
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verifyToken(tokenVerify: TokenVerify, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<{
        [key: string]: any;
    }>>;
};
/**
 * APIApi - factory interface
 * @export
 */
export declare const APIApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Authenticate the user and return a token pair
     * @summary Obtain auth token pair
     * @param {TokenObtainPair} tokenObtainPair
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authenticate(tokenObtainPair: TokenObtainPair, options?: any): AxiosPromise<TokenPair>;
    /**
     *
     * @summary Data References
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    data(options?: any): AxiosPromise<{
        [key: string]: any;
    }>;
    /**
     * Get a verified JWT token pair by submitting a Two-Factor authentication code.
     * @summary Get verified JWT token
     * @param {VerifiedTokenObtainPair} verifiedTokenObtainPair
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getVerifiedToken(verifiedTokenObtainPair: VerifiedTokenObtainPair, options?: any): AxiosPromise<TokenPair>;
    /**
     *
     * @summary Instance Metadata
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ping(options?: any): AxiosPromise<{
        [key: string]: any;
    }>;
    /**
     * Authenticate the user and return a token pair
     * @summary Refresh auth token
     * @param {TokenRefresh} tokenRefresh
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    refreshToken(tokenRefresh: TokenRefresh, options?: any): AxiosPromise<TokenPair>;
    /**
     * Verify an existent authentication token
     * @summary Verify token
     * @param {TokenVerify} tokenVerify
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verifyToken(tokenVerify: TokenVerify, options?: any): AxiosPromise<{
        [key: string]: any;
    }>;
};
/**
 * Request parameters for authenticate operation in APIApi.
 * @export
 * @interface APIApiAuthenticateRequest
 */
export interface APIApiAuthenticateRequest {
    /**
     *
     * @type {TokenObtainPair}
     * @memberof APIApiAuthenticate
     */
    readonly tokenObtainPair: TokenObtainPair;
}
/**
 * Request parameters for getVerifiedToken operation in APIApi.
 * @export
 * @interface APIApiGetVerifiedTokenRequest
 */
export interface APIApiGetVerifiedTokenRequest {
    /**
     *
     * @type {VerifiedTokenObtainPair}
     * @memberof APIApiGetVerifiedToken
     */
    readonly verifiedTokenObtainPair: VerifiedTokenObtainPair;
}
/**
 * Request parameters for refreshToken operation in APIApi.
 * @export
 * @interface APIApiRefreshTokenRequest
 */
export interface APIApiRefreshTokenRequest {
    /**
     *
     * @type {TokenRefresh}
     * @memberof APIApiRefreshToken
     */
    readonly tokenRefresh: TokenRefresh;
}
/**
 * Request parameters for verifyToken operation in APIApi.
 * @export
 * @interface APIApiVerifyTokenRequest
 */
export interface APIApiVerifyTokenRequest {
    /**
     *
     * @type {TokenVerify}
     * @memberof APIApiVerifyToken
     */
    readonly tokenVerify: TokenVerify;
}
/**
 * APIApi - object-oriented interface
 * @export
 * @class APIApi
 * @extends {BaseAPI}
 */
export declare class APIApi extends BaseAPI {
    /**
     * Authenticate the user and return a token pair
     * @summary Obtain auth token pair
     * @param {APIApiAuthenticateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    authenticate(requestParameters: APIApiAuthenticateRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TokenPair, any>>;
    /**
     *
     * @summary Data References
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    data(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<{
        [key: string]: any;
    }, any>>;
    /**
     * Get a verified JWT token pair by submitting a Two-Factor authentication code.
     * @summary Get verified JWT token
     * @param {APIApiGetVerifiedTokenRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    getVerifiedToken(requestParameters: APIApiGetVerifiedTokenRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TokenPair, any>>;
    /**
     *
     * @summary Instance Metadata
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    ping(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<{
        [key: string]: any;
    }, any>>;
    /**
     * Authenticate the user and return a token pair
     * @summary Refresh auth token
     * @param {APIApiRefreshTokenRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    refreshToken(requestParameters: APIApiRefreshTokenRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TokenPair, any>>;
    /**
     * Verify an existent authentication token
     * @summary Verify token
     * @param {APIApiVerifyTokenRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof APIApi
     */
    verifyToken(requestParameters: APIApiVerifyTokenRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<{
        [key: string]: any;
    }, any>>;
}
/**
 * AddressesApi - axios parameter creator
 * @export
 */
export declare const AddressesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create a new address.
     * @summary Create an address
     * @param {AddressData} addressData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create: (addressData: AddressData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Discard an address.
     * @summary Discard an address
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    discard: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve all addresses.
     * @summary List all addresses
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve an address.
     * @summary Retrieve an address
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * update an address.
     * @summary Update an address
     * @param {string} id
     * @param {PatchedAddressData} [patchedAddressData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update: (id: string, patchedAddressData?: PatchedAddressData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AddressesApi - functional programming interface
 * @export
 */
export declare const AddressesApiFp: (configuration?: Configuration) => {
    /**
     * Create a new address.
     * @summary Create an address
     * @param {AddressData} addressData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create(addressData: AddressData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Address>>;
    /**
     * Discard an address.
     * @summary Discard an address
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    discard(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Address>>;
    /**
     * Retrieve all addresses.
     * @summary List all addresses
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddressList>>;
    /**
     * Retrieve an address.
     * @summary Retrieve an address
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Address>>;
    /**
     * update an address.
     * @summary Update an address
     * @param {string} id
     * @param {PatchedAddressData} [patchedAddressData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update(id: string, patchedAddressData?: PatchedAddressData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Address>>;
};
/**
 * AddressesApi - factory interface
 * @export
 */
export declare const AddressesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create a new address.
     * @summary Create an address
     * @param {AddressData} addressData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create(addressData: AddressData, options?: any): AxiosPromise<Address>;
    /**
     * Discard an address.
     * @summary Discard an address
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    discard(id: string, options?: any): AxiosPromise<Address>;
    /**
     * Retrieve all addresses.
     * @summary List all addresses
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(options?: any): AxiosPromise<AddressList>;
    /**
     * Retrieve an address.
     * @summary Retrieve an address
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: any): AxiosPromise<Address>;
    /**
     * update an address.
     * @summary Update an address
     * @param {string} id
     * @param {PatchedAddressData} [patchedAddressData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update(id: string, patchedAddressData?: PatchedAddressData, options?: any): AxiosPromise<Address>;
};
/**
 * Request parameters for create operation in AddressesApi.
 * @export
 * @interface AddressesApiCreateRequest
 */
export interface AddressesApiCreateRequest {
    /**
     *
     * @type {AddressData}
     * @memberof AddressesApiCreate
     */
    readonly addressData: AddressData;
}
/**
 * Request parameters for discard operation in AddressesApi.
 * @export
 * @interface AddressesApiDiscardRequest
 */
export interface AddressesApiDiscardRequest {
    /**
     *
     * @type {string}
     * @memberof AddressesApiDiscard
     */
    readonly id: string;
}
/**
 * Request parameters for retrieve operation in AddressesApi.
 * @export
 * @interface AddressesApiRetrieveRequest
 */
export interface AddressesApiRetrieveRequest {
    /**
     *
     * @type {string}
     * @memberof AddressesApiRetrieve
     */
    readonly id: string;
}
/**
 * Request parameters for update operation in AddressesApi.
 * @export
 * @interface AddressesApiUpdateRequest
 */
export interface AddressesApiUpdateRequest {
    /**
     *
     * @type {string}
     * @memberof AddressesApiUpdate
     */
    readonly id: string;
    /**
     *
     * @type {PatchedAddressData}
     * @memberof AddressesApiUpdate
     */
    readonly patchedAddressData?: PatchedAddressData;
}
/**
 * AddressesApi - object-oriented interface
 * @export
 * @class AddressesApi
 * @extends {BaseAPI}
 */
export declare class AddressesApi extends BaseAPI {
    /**
     * Create a new address.
     * @summary Create an address
     * @param {AddressesApiCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressesApi
     */
    create(requestParameters: AddressesApiCreateRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Address, any>>;
    /**
     * Discard an address.
     * @summary Discard an address
     * @param {AddressesApiDiscardRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressesApi
     */
    discard(requestParameters: AddressesApiDiscardRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Address, any>>;
    /**
     * Retrieve all addresses.
     * @summary List all addresses
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressesApi
     */
    list(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AddressList, any>>;
    /**
     * Retrieve an address.
     * @summary Retrieve an address
     * @param {AddressesApiRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressesApi
     */
    retrieve(requestParameters: AddressesApiRetrieveRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Address, any>>;
    /**
     * update an address.
     * @summary Update an address
     * @param {AddressesApiUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressesApi
     */
    update(requestParameters: AddressesApiUpdateRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Address, any>>;
}
/**
 * BatchesApi - axios parameter creator
 * @export
 */
export declare const BatchesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create multiple orders in a single batch. `Beta`
     * @summary Create orders
     * @param {BatchOrderData} batchOrderData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createOrders: (batchOrderData: BatchOrderData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create multiple shipments in a single batch. `Beta`
     * @summary Create shipments
     * @param {BatchShipmentData} batchShipmentData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createShipments: (batchShipmentData: BatchShipmentData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create multiple trackers in a single batch. `Beta`
     * @summary Create trackers
     * @param {BatchTrackerData} batchTrackerData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createTrackers: (batchTrackerData: BatchTrackerData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Import csv, xls and xlsx data files for: `Beta`<br/> - trackers data - orders data - shipments data - billing data (soon)<br/><br/> **This operation will return a batch operation that you can poll to follow the import progression.**
     * @summary Import data files
     * @param {File} [dataFile]
     * @param {string} [dataTemplate] A data template slug to use for the import.&lt;br/&gt;         **When nothing is specified, the system default headers are expected.**
     * @param {'billing' | 'order' | 'shipment' | 'trackers'} [resourceType] The type of the resource to import
     * @param {string} [resourceType2]
     * @param {string} [dataTemplate2]
     * @param {File} [dataFile2]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    importFile: (dataFile?: File, dataTemplate?: string, resourceType?: 'billing' | 'order' | 'shipment' | 'trackers', resourceType2?: string, dataTemplate2?: string, dataFile2?: File, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve all batch operations. `Beta`
     * @summary List all batch operations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a batch operation. `Beta`
     * @summary Retrieve a batch operation
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BatchesApi - functional programming interface
 * @export
 */
export declare const BatchesApiFp: (configuration?: Configuration) => {
    /**
     * Create multiple orders in a single batch. `Beta`
     * @summary Create orders
     * @param {BatchOrderData} batchOrderData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createOrders(batchOrderData: BatchOrderData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BatchOperation>>;
    /**
     * Create multiple shipments in a single batch. `Beta`
     * @summary Create shipments
     * @param {BatchShipmentData} batchShipmentData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createShipments(batchShipmentData: BatchShipmentData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BatchOperation>>;
    /**
     * Create multiple trackers in a single batch. `Beta`
     * @summary Create trackers
     * @param {BatchTrackerData} batchTrackerData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createTrackers(batchTrackerData: BatchTrackerData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BatchOperation>>;
    /**
     * Import csv, xls and xlsx data files for: `Beta`<br/> - trackers data - orders data - shipments data - billing data (soon)<br/><br/> **This operation will return a batch operation that you can poll to follow the import progression.**
     * @summary Import data files
     * @param {File} [dataFile]
     * @param {string} [dataTemplate] A data template slug to use for the import.&lt;br/&gt;         **When nothing is specified, the system default headers are expected.**
     * @param {'billing' | 'order' | 'shipment' | 'trackers'} [resourceType] The type of the resource to import
     * @param {string} [resourceType2]
     * @param {string} [dataTemplate2]
     * @param {File} [dataFile2]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    importFile(dataFile?: File, dataTemplate?: string, resourceType?: 'billing' | 'order' | 'shipment' | 'trackers', resourceType2?: string, dataTemplate2?: string, dataFile2?: File, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BatchOperation>>;
    /**
     * Retrieve all batch operations. `Beta`
     * @summary List all batch operations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BatchOperations>>;
    /**
     * Retrieve a batch operation. `Beta`
     * @summary Retrieve a batch operation
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BatchOperation>>;
};
/**
 * BatchesApi - factory interface
 * @export
 */
export declare const BatchesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create multiple orders in a single batch. `Beta`
     * @summary Create orders
     * @param {BatchOrderData} batchOrderData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createOrders(batchOrderData: BatchOrderData, options?: any): AxiosPromise<BatchOperation>;
    /**
     * Create multiple shipments in a single batch. `Beta`
     * @summary Create shipments
     * @param {BatchShipmentData} batchShipmentData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createShipments(batchShipmentData: BatchShipmentData, options?: any): AxiosPromise<BatchOperation>;
    /**
     * Create multiple trackers in a single batch. `Beta`
     * @summary Create trackers
     * @param {BatchTrackerData} batchTrackerData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createTrackers(batchTrackerData: BatchTrackerData, options?: any): AxiosPromise<BatchOperation>;
    /**
     * Import csv, xls and xlsx data files for: `Beta`<br/> - trackers data - orders data - shipments data - billing data (soon)<br/><br/> **This operation will return a batch operation that you can poll to follow the import progression.**
     * @summary Import data files
     * @param {File} [dataFile]
     * @param {string} [dataTemplate] A data template slug to use for the import.&lt;br/&gt;         **When nothing is specified, the system default headers are expected.**
     * @param {'billing' | 'order' | 'shipment' | 'trackers'} [resourceType] The type of the resource to import
     * @param {string} [resourceType2]
     * @param {string} [dataTemplate2]
     * @param {File} [dataFile2]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    importFile(dataFile?: File, dataTemplate?: string, resourceType?: 'billing' | 'order' | 'shipment' | 'trackers', resourceType2?: string, dataTemplate2?: string, dataFile2?: File, options?: any): AxiosPromise<BatchOperation>;
    /**
     * Retrieve all batch operations. `Beta`
     * @summary List all batch operations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(options?: any): AxiosPromise<BatchOperations>;
    /**
     * Retrieve a batch operation. `Beta`
     * @summary Retrieve a batch operation
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: any): AxiosPromise<BatchOperation>;
};
/**
 * Request parameters for createOrders operation in BatchesApi.
 * @export
 * @interface BatchesApiCreateOrdersRequest
 */
export interface BatchesApiCreateOrdersRequest {
    /**
     *
     * @type {BatchOrderData}
     * @memberof BatchesApiCreateOrders
     */
    readonly batchOrderData: BatchOrderData;
}
/**
 * Request parameters for createShipments operation in BatchesApi.
 * @export
 * @interface BatchesApiCreateShipmentsRequest
 */
export interface BatchesApiCreateShipmentsRequest {
    /**
     *
     * @type {BatchShipmentData}
     * @memberof BatchesApiCreateShipments
     */
    readonly batchShipmentData: BatchShipmentData;
}
/**
 * Request parameters for createTrackers operation in BatchesApi.
 * @export
 * @interface BatchesApiCreateTrackersRequest
 */
export interface BatchesApiCreateTrackersRequest {
    /**
     *
     * @type {BatchTrackerData}
     * @memberof BatchesApiCreateTrackers
     */
    readonly batchTrackerData: BatchTrackerData;
}
/**
 * Request parameters for importFile operation in BatchesApi.
 * @export
 * @interface BatchesApiImportFileRequest
 */
export interface BatchesApiImportFileRequest {
    /**
     *
     * @type {File}
     * @memberof BatchesApiImportFile
     */
    readonly dataFile?: File;
    /**
     * A data template slug to use for the import.&lt;br/&gt;         **When nothing is specified, the system default headers are expected.**
     * @type {string}
     * @memberof BatchesApiImportFile
     */
    readonly dataTemplate?: string;
    /**
     * The type of the resource to import
     * @type {'billing' | 'order' | 'shipment' | 'trackers'}
     * @memberof BatchesApiImportFile
     */
    readonly resourceType?: 'billing' | 'order' | 'shipment' | 'trackers';
    /**
     *
     * @type {string}
     * @memberof BatchesApiImportFile
     */
    readonly resourceType2?: string;
    /**
     *
     * @type {string}
     * @memberof BatchesApiImportFile
     */
    readonly dataTemplate2?: string;
    /**
     *
     * @type {File}
     * @memberof BatchesApiImportFile
     */
    readonly dataFile2?: File;
}
/**
 * Request parameters for retrieve operation in BatchesApi.
 * @export
 * @interface BatchesApiRetrieveRequest
 */
export interface BatchesApiRetrieveRequest {
    /**
     *
     * @type {string}
     * @memberof BatchesApiRetrieve
     */
    readonly id: string;
}
/**
 * BatchesApi - object-oriented interface
 * @export
 * @class BatchesApi
 * @extends {BaseAPI}
 */
export declare class BatchesApi extends BaseAPI {
    /**
     * Create multiple orders in a single batch. `Beta`
     * @summary Create orders
     * @param {BatchesApiCreateOrdersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApi
     */
    createOrders(requestParameters: BatchesApiCreateOrdersRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<BatchOperation, any>>;
    /**
     * Create multiple shipments in a single batch. `Beta`
     * @summary Create shipments
     * @param {BatchesApiCreateShipmentsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApi
     */
    createShipments(requestParameters: BatchesApiCreateShipmentsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<BatchOperation, any>>;
    /**
     * Create multiple trackers in a single batch. `Beta`
     * @summary Create trackers
     * @param {BatchesApiCreateTrackersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApi
     */
    createTrackers(requestParameters: BatchesApiCreateTrackersRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<BatchOperation, any>>;
    /**
     * Import csv, xls and xlsx data files for: `Beta`<br/> - trackers data - orders data - shipments data - billing data (soon)<br/><br/> **This operation will return a batch operation that you can poll to follow the import progression.**
     * @summary Import data files
     * @param {BatchesApiImportFileRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApi
     */
    importFile(requestParameters?: BatchesApiImportFileRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<BatchOperation, any>>;
    /**
     * Retrieve all batch operations. `Beta`
     * @summary List all batch operations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApi
     */
    list(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<BatchOperations, any>>;
    /**
     * Retrieve a batch operation. `Beta`
     * @summary Retrieve a batch operation
     * @param {BatchesApiRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BatchesApi
     */
    retrieve(requestParameters: BatchesApiRetrieveRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<BatchOperation, any>>;
}
/**
 * CarriersApi - axios parameter creator
 * @export
 */
export declare const CarriersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Retrieve a carrier\'s services
     * @summary Get carrier services
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getServices: (carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the list of configured carriers
     * @summary List all carriers
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {boolean} [action]
     * @param {boolean} [systemOnly]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list: (carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', action?: boolean, systemOnly?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CarriersApi - functional programming interface
 * @export
 */
export declare const CarriersApiFp: (configuration?: Configuration) => {
    /**
     * Retrieve a carrier\'s services
     * @summary Get carrier services
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getServices(carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<{
        [key: string]: any;
    }>>;
    /**
     * Returns the list of configured carriers
     * @summary List all carriers
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {boolean} [action]
     * @param {boolean} [systemOnly]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', action?: boolean, systemOnly?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CarrierList>>;
};
/**
 * CarriersApi - factory interface
 * @export
 */
export declare const CarriersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Retrieve a carrier\'s services
     * @summary Get carrier services
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getServices(carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', options?: any): AxiosPromise<{
        [key: string]: any;
    }>;
    /**
     * Returns the list of configured carriers
     * @summary List all carriers
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {boolean} [action]
     * @param {boolean} [systemOnly]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', action?: boolean, systemOnly?: boolean, options?: any): AxiosPromise<CarrierList>;
};
/**
 * Request parameters for getServices operation in CarriersApi.
 * @export
 * @interface CarriersApiGetServicesRequest
 */
export interface CarriersApiGetServicesRequest {
    /**
     *
     * @type {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'}
     * @memberof CarriersApiGetServices
     */
    readonly carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress';
}
/**
 * Request parameters for list operation in CarriersApi.
 * @export
 * @interface CarriersApiListRequest
 */
export interface CarriersApiListRequest {
    /**
     *
     * @type {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'}
     * @memberof CarriersApiList
     */
    readonly carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress';
    /**
     *
     * @type {boolean}
     * @memberof CarriersApiList
     */
    readonly action?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CarriersApiList
     */
    readonly systemOnly?: boolean;
}
/**
 * CarriersApi - object-oriented interface
 * @export
 * @class CarriersApi
 * @extends {BaseAPI}
 */
export declare class CarriersApi extends BaseAPI {
    /**
     * Retrieve a carrier\'s services
     * @summary Get carrier services
     * @param {CarriersApiGetServicesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CarriersApi
     */
    getServices(requestParameters: CarriersApiGetServicesRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<{
        [key: string]: any;
    }, any>>;
    /**
     * Returns the list of configured carriers
     * @summary List all carriers
     * @param {CarriersApiListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CarriersApi
     */
    list(requestParameters: CarriersApiListRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CarrierList, any>>;
}
/**
 * CustomsApi - axios parameter creator
 * @export
 */
export declare const CustomsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create a new customs declaration.
     * @summary Create a customs info
     * @param {CustomsData} customsData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create: (customsData: CustomsData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Discard a customs declaration.
     * @summary Discard a customs info
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    discard: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve all stored customs declarations.
     * @summary List all customs info
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve customs declaration.
     * @summary Retrieve a customs info
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * modify an existing customs declaration.
     * @summary Update a customs info
     * @param {string} id
     * @param {PatchedCustomsData} [patchedCustomsData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update: (id: string, patchedCustomsData?: PatchedCustomsData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CustomsApi - functional programming interface
 * @export
 */
export declare const CustomsApiFp: (configuration?: Configuration) => {
    /**
     * Create a new customs declaration.
     * @summary Create a customs info
     * @param {CustomsData} customsData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create(customsData: CustomsData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Customs>>;
    /**
     * Discard a customs declaration.
     * @summary Discard a customs info
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    discard(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Customs>>;
    /**
     * Retrieve all stored customs declarations.
     * @summary List all customs info
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CustomsList>>;
    /**
     * Retrieve customs declaration.
     * @summary Retrieve a customs info
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Customs>>;
    /**
     * modify an existing customs declaration.
     * @summary Update a customs info
     * @param {string} id
     * @param {PatchedCustomsData} [patchedCustomsData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update(id: string, patchedCustomsData?: PatchedCustomsData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Customs>>;
};
/**
 * CustomsApi - factory interface
 * @export
 */
export declare const CustomsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create a new customs declaration.
     * @summary Create a customs info
     * @param {CustomsData} customsData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create(customsData: CustomsData, options?: any): AxiosPromise<Customs>;
    /**
     * Discard a customs declaration.
     * @summary Discard a customs info
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    discard(id: string, options?: any): AxiosPromise<Customs>;
    /**
     * Retrieve all stored customs declarations.
     * @summary List all customs info
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(options?: any): AxiosPromise<CustomsList>;
    /**
     * Retrieve customs declaration.
     * @summary Retrieve a customs info
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: any): AxiosPromise<Customs>;
    /**
     * modify an existing customs declaration.
     * @summary Update a customs info
     * @param {string} id
     * @param {PatchedCustomsData} [patchedCustomsData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update(id: string, patchedCustomsData?: PatchedCustomsData, options?: any): AxiosPromise<Customs>;
};
/**
 * Request parameters for create operation in CustomsApi.
 * @export
 * @interface CustomsApiCreateRequest
 */
export interface CustomsApiCreateRequest {
    /**
     *
     * @type {CustomsData}
     * @memberof CustomsApiCreate
     */
    readonly customsData: CustomsData;
}
/**
 * Request parameters for discard operation in CustomsApi.
 * @export
 * @interface CustomsApiDiscardRequest
 */
export interface CustomsApiDiscardRequest {
    /**
     *
     * @type {string}
     * @memberof CustomsApiDiscard
     */
    readonly id: string;
}
/**
 * Request parameters for retrieve operation in CustomsApi.
 * @export
 * @interface CustomsApiRetrieveRequest
 */
export interface CustomsApiRetrieveRequest {
    /**
     *
     * @type {string}
     * @memberof CustomsApiRetrieve
     */
    readonly id: string;
}
/**
 * Request parameters for update operation in CustomsApi.
 * @export
 * @interface CustomsApiUpdateRequest
 */
export interface CustomsApiUpdateRequest {
    /**
     *
     * @type {string}
     * @memberof CustomsApiUpdate
     */
    readonly id: string;
    /**
     *
     * @type {PatchedCustomsData}
     * @memberof CustomsApiUpdate
     */
    readonly patchedCustomsData?: PatchedCustomsData;
}
/**
 * CustomsApi - object-oriented interface
 * @export
 * @class CustomsApi
 * @extends {BaseAPI}
 */
export declare class CustomsApi extends BaseAPI {
    /**
     * Create a new customs declaration.
     * @summary Create a customs info
     * @param {CustomsApiCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomsApi
     */
    create(requestParameters: CustomsApiCreateRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Customs, any>>;
    /**
     * Discard a customs declaration.
     * @summary Discard a customs info
     * @param {CustomsApiDiscardRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomsApi
     */
    discard(requestParameters: CustomsApiDiscardRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Customs, any>>;
    /**
     * Retrieve all stored customs declarations.
     * @summary List all customs info
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomsApi
     */
    list(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CustomsList, any>>;
    /**
     * Retrieve customs declaration.
     * @summary Retrieve a customs info
     * @param {CustomsApiRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomsApi
     */
    retrieve(requestParameters: CustomsApiRetrieveRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Customs, any>>;
    /**
     * modify an existing customs declaration.
     * @summary Update a customs info
     * @param {CustomsApiUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomsApi
     */
    update(requestParameters: CustomsApiUpdateRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Customs, any>>;
}
/**
 * DocumentsApi - axios parameter creator
 * @export
 */
export declare const DocumentsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Retrieve all shipping document upload records.
     * @summary List all upload records
     * @param {string} [createdAfter]
     * @param {string} [createdBefore]
     * @param {string} [shipmentId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list: (createdAfter?: string, createdBefore?: string, shipmentId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a shipping document upload record.
     * @summary Retrieve an upload record
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Upload a shipping document.
     * @summary Upload documents
     * @param {DocumentUploadData} documentUploadData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    upload: (documentUploadData: DocumentUploadData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DocumentsApi - functional programming interface
 * @export
 */
export declare const DocumentsApiFp: (configuration?: Configuration) => {
    /**
     * Retrieve all shipping document upload records.
     * @summary List all upload records
     * @param {string} [createdAfter]
     * @param {string} [createdBefore]
     * @param {string} [shipmentId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(createdAfter?: string, createdBefore?: string, shipmentId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DocumentUploadRecords>>;
    /**
     * Retrieve a shipping document upload record.
     * @summary Retrieve an upload record
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DocumentUploadRecord>>;
    /**
     * Upload a shipping document.
     * @summary Upload documents
     * @param {DocumentUploadData} documentUploadData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    upload(documentUploadData: DocumentUploadData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DocumentUploadRecord>>;
};
/**
 * DocumentsApi - factory interface
 * @export
 */
export declare const DocumentsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Retrieve all shipping document upload records.
     * @summary List all upload records
     * @param {string} [createdAfter]
     * @param {string} [createdBefore]
     * @param {string} [shipmentId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(createdAfter?: string, createdBefore?: string, shipmentId?: string, options?: any): AxiosPromise<DocumentUploadRecords>;
    /**
     * Retrieve a shipping document upload record.
     * @summary Retrieve an upload record
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: any): AxiosPromise<DocumentUploadRecord>;
    /**
     * Upload a shipping document.
     * @summary Upload documents
     * @param {DocumentUploadData} documentUploadData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    upload(documentUploadData: DocumentUploadData, options?: any): AxiosPromise<DocumentUploadRecord>;
};
/**
 * Request parameters for list operation in DocumentsApi.
 * @export
 * @interface DocumentsApiListRequest
 */
export interface DocumentsApiListRequest {
    /**
     *
     * @type {string}
     * @memberof DocumentsApiList
     */
    readonly createdAfter?: string;
    /**
     *
     * @type {string}
     * @memberof DocumentsApiList
     */
    readonly createdBefore?: string;
    /**
     *
     * @type {string}
     * @memberof DocumentsApiList
     */
    readonly shipmentId?: string;
}
/**
 * Request parameters for retrieve operation in DocumentsApi.
 * @export
 * @interface DocumentsApiRetrieveRequest
 */
export interface DocumentsApiRetrieveRequest {
    /**
     *
     * @type {string}
     * @memberof DocumentsApiRetrieve
     */
    readonly id: string;
}
/**
 * Request parameters for upload operation in DocumentsApi.
 * @export
 * @interface DocumentsApiUploadRequest
 */
export interface DocumentsApiUploadRequest {
    /**
     *
     * @type {DocumentUploadData}
     * @memberof DocumentsApiUpload
     */
    readonly documentUploadData: DocumentUploadData;
}
/**
 * DocumentsApi - object-oriented interface
 * @export
 * @class DocumentsApi
 * @extends {BaseAPI}
 */
export declare class DocumentsApi extends BaseAPI {
    /**
     * Retrieve all shipping document upload records.
     * @summary List all upload records
     * @param {DocumentsApiListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DocumentsApi
     */
    list(requestParameters?: DocumentsApiListRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DocumentUploadRecords, any>>;
    /**
     * Retrieve a shipping document upload record.
     * @summary Retrieve an upload record
     * @param {DocumentsApiRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DocumentsApi
     */
    retrieve(requestParameters: DocumentsApiRetrieveRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DocumentUploadRecord, any>>;
    /**
     * Upload a shipping document.
     * @summary Upload documents
     * @param {DocumentsApiUploadRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DocumentsApi
     */
    upload(requestParameters: DocumentsApiUploadRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DocumentUploadRecord, any>>;
}
/**
 * OrdersApi - axios parameter creator
 * @export
 */
export declare const OrdersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Cancel an order.
     * @summary Cancel an order
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancel: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a new order object.
     * @summary Create an order
     * @param {OrderData} orderData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create: (orderData: OrderData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve all orders.
     * @summary List all orders
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve an order.
     * @summary Retrieve an order
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This operation allows for updating properties of an order including `options` and `metadata`. It is not for editing the line items of an order.
     * @summary Update an order
     * @param {string} id
     * @param {OrderUpdateData} [orderUpdateData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update: (id: string, orderUpdateData?: OrderUpdateData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * OrdersApi - functional programming interface
 * @export
 */
export declare const OrdersApiFp: (configuration?: Configuration) => {
    /**
     * Cancel an order.
     * @summary Cancel an order
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancel(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Order>>;
    /**
     * Create a new order object.
     * @summary Create an order
     * @param {OrderData} orderData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create(orderData: OrderData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Order>>;
    /**
     * Retrieve all orders.
     * @summary List all orders
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrderList>>;
    /**
     * Retrieve an order.
     * @summary Retrieve an order
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Order>>;
    /**
     * This operation allows for updating properties of an order including `options` and `metadata`. It is not for editing the line items of an order.
     * @summary Update an order
     * @param {string} id
     * @param {OrderUpdateData} [orderUpdateData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update(id: string, orderUpdateData?: OrderUpdateData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Order>>;
};
/**
 * OrdersApi - factory interface
 * @export
 */
export declare const OrdersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Cancel an order.
     * @summary Cancel an order
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancel(id: string, options?: any): AxiosPromise<Order>;
    /**
     * Create a new order object.
     * @summary Create an order
     * @param {OrderData} orderData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create(orderData: OrderData, options?: any): AxiosPromise<Order>;
    /**
     * Retrieve all orders.
     * @summary List all orders
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(options?: any): AxiosPromise<OrderList>;
    /**
     * Retrieve an order.
     * @summary Retrieve an order
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: any): AxiosPromise<Order>;
    /**
     * This operation allows for updating properties of an order including `options` and `metadata`. It is not for editing the line items of an order.
     * @summary Update an order
     * @param {string} id
     * @param {OrderUpdateData} [orderUpdateData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update(id: string, orderUpdateData?: OrderUpdateData, options?: any): AxiosPromise<Order>;
};
/**
 * Request parameters for cancel operation in OrdersApi.
 * @export
 * @interface OrdersApiCancelRequest
 */
export interface OrdersApiCancelRequest {
    /**
     *
     * @type {string}
     * @memberof OrdersApiCancel
     */
    readonly id: string;
}
/**
 * Request parameters for create operation in OrdersApi.
 * @export
 * @interface OrdersApiCreateRequest
 */
export interface OrdersApiCreateRequest {
    /**
     *
     * @type {OrderData}
     * @memberof OrdersApiCreate
     */
    readonly orderData: OrderData;
}
/**
 * Request parameters for retrieve operation in OrdersApi.
 * @export
 * @interface OrdersApiRetrieveRequest
 */
export interface OrdersApiRetrieveRequest {
    /**
     *
     * @type {string}
     * @memberof OrdersApiRetrieve
     */
    readonly id: string;
}
/**
 * Request parameters for update operation in OrdersApi.
 * @export
 * @interface OrdersApiUpdateRequest
 */
export interface OrdersApiUpdateRequest {
    /**
     *
     * @type {string}
     * @memberof OrdersApiUpdate
     */
    readonly id: string;
    /**
     *
     * @type {OrderUpdateData}
     * @memberof OrdersApiUpdate
     */
    readonly orderUpdateData?: OrderUpdateData;
}
/**
 * OrdersApi - object-oriented interface
 * @export
 * @class OrdersApi
 * @extends {BaseAPI}
 */
export declare class OrdersApi extends BaseAPI {
    /**
     * Cancel an order.
     * @summary Cancel an order
     * @param {OrdersApiCancelRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrdersApi
     */
    cancel(requestParameters: OrdersApiCancelRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Order, any>>;
    /**
     * Create a new order object.
     * @summary Create an order
     * @param {OrdersApiCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrdersApi
     */
    create(requestParameters: OrdersApiCreateRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Order, any>>;
    /**
     * Retrieve all orders.
     * @summary List all orders
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrdersApi
     */
    list(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<OrderList, any>>;
    /**
     * Retrieve an order.
     * @summary Retrieve an order
     * @param {OrdersApiRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrdersApi
     */
    retrieve(requestParameters: OrdersApiRetrieveRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Order, any>>;
    /**
     * This operation allows for updating properties of an order including `options` and `metadata`. It is not for editing the line items of an order.
     * @summary Update an order
     * @param {OrdersApiUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrdersApi
     */
    update(requestParameters: OrdersApiUpdateRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Order, any>>;
}
/**
 * ParcelsApi - axios parameter creator
 * @export
 */
export declare const ParcelsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create a new parcel.
     * @summary Create a parcel
     * @param {ParcelData} parcelData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create: (parcelData: ParcelData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Remove a parcel.
     * @summary Remove a parcel
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    discard: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve all stored parcels.
     * @summary List all parcels
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a parcel.
     * @summary Retrieve a parcel
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * modify an existing parcel\'s details.
     * @summary Update a parcel
     * @param {string} id
     * @param {PatchedParcelData} [patchedParcelData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update: (id: string, patchedParcelData?: PatchedParcelData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ParcelsApi - functional programming interface
 * @export
 */
export declare const ParcelsApiFp: (configuration?: Configuration) => {
    /**
     * Create a new parcel.
     * @summary Create a parcel
     * @param {ParcelData} parcelData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create(parcelData: ParcelData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Parcel>>;
    /**
     * Remove a parcel.
     * @summary Remove a parcel
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    discard(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Parcel>>;
    /**
     * Retrieve all stored parcels.
     * @summary List all parcels
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ParcelList>>;
    /**
     * Retrieve a parcel.
     * @summary Retrieve a parcel
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Parcel>>;
    /**
     * modify an existing parcel\'s details.
     * @summary Update a parcel
     * @param {string} id
     * @param {PatchedParcelData} [patchedParcelData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update(id: string, patchedParcelData?: PatchedParcelData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Parcel>>;
};
/**
 * ParcelsApi - factory interface
 * @export
 */
export declare const ParcelsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create a new parcel.
     * @summary Create a parcel
     * @param {ParcelData} parcelData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create(parcelData: ParcelData, options?: any): AxiosPromise<Parcel>;
    /**
     * Remove a parcel.
     * @summary Remove a parcel
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    discard(id: string, options?: any): AxiosPromise<Parcel>;
    /**
     * Retrieve all stored parcels.
     * @summary List all parcels
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(options?: any): AxiosPromise<ParcelList>;
    /**
     * Retrieve a parcel.
     * @summary Retrieve a parcel
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: any): AxiosPromise<Parcel>;
    /**
     * modify an existing parcel\'s details.
     * @summary Update a parcel
     * @param {string} id
     * @param {PatchedParcelData} [patchedParcelData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update(id: string, patchedParcelData?: PatchedParcelData, options?: any): AxiosPromise<Parcel>;
};
/**
 * Request parameters for create operation in ParcelsApi.
 * @export
 * @interface ParcelsApiCreateRequest
 */
export interface ParcelsApiCreateRequest {
    /**
     *
     * @type {ParcelData}
     * @memberof ParcelsApiCreate
     */
    readonly parcelData: ParcelData;
}
/**
 * Request parameters for discard operation in ParcelsApi.
 * @export
 * @interface ParcelsApiDiscardRequest
 */
export interface ParcelsApiDiscardRequest {
    /**
     *
     * @type {string}
     * @memberof ParcelsApiDiscard
     */
    readonly id: string;
}
/**
 * Request parameters for retrieve operation in ParcelsApi.
 * @export
 * @interface ParcelsApiRetrieveRequest
 */
export interface ParcelsApiRetrieveRequest {
    /**
     *
     * @type {string}
     * @memberof ParcelsApiRetrieve
     */
    readonly id: string;
}
/**
 * Request parameters for update operation in ParcelsApi.
 * @export
 * @interface ParcelsApiUpdateRequest
 */
export interface ParcelsApiUpdateRequest {
    /**
     *
     * @type {string}
     * @memberof ParcelsApiUpdate
     */
    readonly id: string;
    /**
     *
     * @type {PatchedParcelData}
     * @memberof ParcelsApiUpdate
     */
    readonly patchedParcelData?: PatchedParcelData;
}
/**
 * ParcelsApi - object-oriented interface
 * @export
 * @class ParcelsApi
 * @extends {BaseAPI}
 */
export declare class ParcelsApi extends BaseAPI {
    /**
     * Create a new parcel.
     * @summary Create a parcel
     * @param {ParcelsApiCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ParcelsApi
     */
    create(requestParameters: ParcelsApiCreateRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Parcel, any>>;
    /**
     * Remove a parcel.
     * @summary Remove a parcel
     * @param {ParcelsApiDiscardRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ParcelsApi
     */
    discard(requestParameters: ParcelsApiDiscardRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Parcel, any>>;
    /**
     * Retrieve all stored parcels.
     * @summary List all parcels
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ParcelsApi
     */
    list(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ParcelList, any>>;
    /**
     * Retrieve a parcel.
     * @summary Retrieve a parcel
     * @param {ParcelsApiRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ParcelsApi
     */
    retrieve(requestParameters: ParcelsApiRetrieveRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Parcel, any>>;
    /**
     * modify an existing parcel\'s details.
     * @summary Update a parcel
     * @param {ParcelsApiUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ParcelsApi
     */
    update(requestParameters: ParcelsApiUpdateRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Parcel, any>>;
}
/**
 * PickupsApi - axios parameter creator
 * @export
 */
export declare const PickupsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Cancel a pickup of one or more shipments.
     * @summary Cancel a pickup
     * @param {string} id
     * @param {PickupCancelData} [pickupCancelData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancel: (id: string, pickupCancelData?: PickupCancelData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve all scheduled pickups.
     * @summary List shipment pickups
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a scheduled pickup.
     * @summary Retrieve a pickup
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Schedule a pickup for one or many shipments with labels already purchased.
     * @summary Schedule a pickup
     * @param {string} carrierName
     * @param {PickupData} pickupData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    schedule: (carrierName: string, pickupData: PickupData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Modify a pickup for one or many shipments with labels already purchased.
     * @summary Update a pickup
     * @param {string} id
     * @param {PickupUpdateData} pickupUpdateData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update: (id: string, pickupUpdateData: PickupUpdateData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PickupsApi - functional programming interface
 * @export
 */
export declare const PickupsApiFp: (configuration?: Configuration) => {
    /**
     * Cancel a pickup of one or more shipments.
     * @summary Cancel a pickup
     * @param {string} id
     * @param {PickupCancelData} [pickupCancelData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancel(id: string, pickupCancelData?: PickupCancelData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Pickup>>;
    /**
     * Retrieve all scheduled pickups.
     * @summary List shipment pickups
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PickupList>>;
    /**
     * Retrieve a scheduled pickup.
     * @summary Retrieve a pickup
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Pickup>>;
    /**
     * Schedule a pickup for one or many shipments with labels already purchased.
     * @summary Schedule a pickup
     * @param {string} carrierName
     * @param {PickupData} pickupData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    schedule(carrierName: string, pickupData: PickupData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Pickup>>;
    /**
     * Modify a pickup for one or many shipments with labels already purchased.
     * @summary Update a pickup
     * @param {string} id
     * @param {PickupUpdateData} pickupUpdateData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update(id: string, pickupUpdateData: PickupUpdateData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Pickup>>;
};
/**
 * PickupsApi - factory interface
 * @export
 */
export declare const PickupsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Cancel a pickup of one or more shipments.
     * @summary Cancel a pickup
     * @param {string} id
     * @param {PickupCancelData} [pickupCancelData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancel(id: string, pickupCancelData?: PickupCancelData, options?: any): AxiosPromise<Pickup>;
    /**
     * Retrieve all scheduled pickups.
     * @summary List shipment pickups
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(options?: any): AxiosPromise<PickupList>;
    /**
     * Retrieve a scheduled pickup.
     * @summary Retrieve a pickup
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: any): AxiosPromise<Pickup>;
    /**
     * Schedule a pickup for one or many shipments with labels already purchased.
     * @summary Schedule a pickup
     * @param {string} carrierName
     * @param {PickupData} pickupData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    schedule(carrierName: string, pickupData: PickupData, options?: any): AxiosPromise<Pickup>;
    /**
     * Modify a pickup for one or many shipments with labels already purchased.
     * @summary Update a pickup
     * @param {string} id
     * @param {PickupUpdateData} pickupUpdateData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update(id: string, pickupUpdateData: PickupUpdateData, options?: any): AxiosPromise<Pickup>;
};
/**
 * Request parameters for cancel operation in PickupsApi.
 * @export
 * @interface PickupsApiCancelRequest
 */
export interface PickupsApiCancelRequest {
    /**
     *
     * @type {string}
     * @memberof PickupsApiCancel
     */
    readonly id: string;
    /**
     *
     * @type {PickupCancelData}
     * @memberof PickupsApiCancel
     */
    readonly pickupCancelData?: PickupCancelData;
}
/**
 * Request parameters for retrieve operation in PickupsApi.
 * @export
 * @interface PickupsApiRetrieveRequest
 */
export interface PickupsApiRetrieveRequest {
    /**
     *
     * @type {string}
     * @memberof PickupsApiRetrieve
     */
    readonly id: string;
}
/**
 * Request parameters for schedule operation in PickupsApi.
 * @export
 * @interface PickupsApiScheduleRequest
 */
export interface PickupsApiScheduleRequest {
    /**
     *
     * @type {string}
     * @memberof PickupsApiSchedule
     */
    readonly carrierName: string;
    /**
     *
     * @type {PickupData}
     * @memberof PickupsApiSchedule
     */
    readonly pickupData: PickupData;
}
/**
 * Request parameters for update operation in PickupsApi.
 * @export
 * @interface PickupsApiUpdateRequest
 */
export interface PickupsApiUpdateRequest {
    /**
     *
     * @type {string}
     * @memberof PickupsApiUpdate
     */
    readonly id: string;
    /**
     *
     * @type {PickupUpdateData}
     * @memberof PickupsApiUpdate
     */
    readonly pickupUpdateData: PickupUpdateData;
}
/**
 * PickupsApi - object-oriented interface
 * @export
 * @class PickupsApi
 * @extends {BaseAPI}
 */
export declare class PickupsApi extends BaseAPI {
    /**
     * Cancel a pickup of one or more shipments.
     * @summary Cancel a pickup
     * @param {PickupsApiCancelRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PickupsApi
     */
    cancel(requestParameters: PickupsApiCancelRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Pickup, any>>;
    /**
     * Retrieve all scheduled pickups.
     * @summary List shipment pickups
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PickupsApi
     */
    list(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PickupList, any>>;
    /**
     * Retrieve a scheduled pickup.
     * @summary Retrieve a pickup
     * @param {PickupsApiRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PickupsApi
     */
    retrieve(requestParameters: PickupsApiRetrieveRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Pickup, any>>;
    /**
     * Schedule a pickup for one or many shipments with labels already purchased.
     * @summary Schedule a pickup
     * @param {PickupsApiScheduleRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PickupsApi
     */
    schedule(requestParameters: PickupsApiScheduleRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Pickup, any>>;
    /**
     * Modify a pickup for one or many shipments with labels already purchased.
     * @summary Update a pickup
     * @param {PickupsApiUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PickupsApi
     */
    update(requestParameters: PickupsApiUpdateRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Pickup, any>>;
}
/**
 * ProxyApi - axios parameter creator
 * @export
 */
export declare const ProxyApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Once the shipping rates are retrieved, provide the required info to submit the shipment by specifying your preferred rate.
     * @summary Buy a shipment label
     * @param {ShippingRequest} shippingRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    buyLabel: (shippingRequest: ShippingRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Cancel a pickup previously scheduled
     * @summary Cancel a pickup
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {PickupCancelRequest} pickupCancelRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelPickup: (carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', pickupCancelRequest: PickupCancelRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *  The Shipping process begins by fetching rates for your shipment. Use this service to fetch a shipping rates available.
     * @summary Fetch shipment rates
     * @param {RateRequest} rateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fetchRates: (rateRequest: RateRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * You can track a shipment by specifying the carrier and the shipment tracking number.
     * @summary Get tracking details
     * @param {TrackingData} trackingData
     * @param {string} [hub]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTracking: (trackingData: TrackingData, hub?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Schedule one or many parcels pickup
     * @summary Schedule a pickup
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {PickupRequest} pickupRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    schedulePickup: (carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', pickupRequest: PickupRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * You can track a shipment by specifying the carrier and the shipment tracking number.
     * @summary Track a shipment
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'fedex' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {string} trackingNumber
     * @param {string} [hub]
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    trackShipment: (carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'fedex' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', trackingNumber: string, hub?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Modify a scheduled pickup
     * @summary Update a pickup
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {PickupUpdateRequest} pickupUpdateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updatePickup: (carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', pickupUpdateRequest: PickupUpdateRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Cancel a shipment and the label previously created
     * @summary Void a shipment label
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {ShipmentCancelRequest} shipmentCancelRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    voidLabel: (carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', shipmentCancelRequest: ShipmentCancelRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ProxyApi - functional programming interface
 * @export
 */
export declare const ProxyApiFp: (configuration?: Configuration) => {
    /**
     * Once the shipping rates are retrieved, provide the required info to submit the shipment by specifying your preferred rate.
     * @summary Buy a shipment label
     * @param {ShippingRequest} shippingRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    buyLabel(shippingRequest: ShippingRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ShippingResponse>>;
    /**
     * Cancel a pickup previously scheduled
     * @summary Cancel a pickup
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {PickupCancelRequest} pickupCancelRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelPickup(carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', pickupCancelRequest: PickupCancelRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OperationResponse>>;
    /**
     *  The Shipping process begins by fetching rates for your shipment. Use this service to fetch a shipping rates available.
     * @summary Fetch shipment rates
     * @param {RateRequest} rateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fetchRates(rateRequest: RateRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RateResponse>>;
    /**
     * You can track a shipment by specifying the carrier and the shipment tracking number.
     * @summary Get tracking details
     * @param {TrackingData} trackingData
     * @param {string} [hub]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTracking(trackingData: TrackingData, hub?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TrackingResponse>>;
    /**
     * Schedule one or many parcels pickup
     * @summary Schedule a pickup
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {PickupRequest} pickupRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    schedulePickup(carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', pickupRequest: PickupRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PickupResponse>>;
    /**
     * You can track a shipment by specifying the carrier and the shipment tracking number.
     * @summary Track a shipment
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'fedex' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {string} trackingNumber
     * @param {string} [hub]
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    trackShipment(carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'fedex' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', trackingNumber: string, hub?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TrackingResponse>>;
    /**
     * Modify a scheduled pickup
     * @summary Update a pickup
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {PickupUpdateRequest} pickupUpdateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updatePickup(carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', pickupUpdateRequest: PickupUpdateRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PickupResponse>>;
    /**
     * Cancel a shipment and the label previously created
     * @summary Void a shipment label
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {ShipmentCancelRequest} shipmentCancelRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    voidLabel(carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', shipmentCancelRequest: ShipmentCancelRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OperationResponse>>;
};
/**
 * ProxyApi - factory interface
 * @export
 */
export declare const ProxyApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Once the shipping rates are retrieved, provide the required info to submit the shipment by specifying your preferred rate.
     * @summary Buy a shipment label
     * @param {ShippingRequest} shippingRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    buyLabel(shippingRequest: ShippingRequest, options?: any): AxiosPromise<ShippingResponse>;
    /**
     * Cancel a pickup previously scheduled
     * @summary Cancel a pickup
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {PickupCancelRequest} pickupCancelRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelPickup(carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', pickupCancelRequest: PickupCancelRequest, options?: any): AxiosPromise<OperationResponse>;
    /**
     *  The Shipping process begins by fetching rates for your shipment. Use this service to fetch a shipping rates available.
     * @summary Fetch shipment rates
     * @param {RateRequest} rateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fetchRates(rateRequest: RateRequest, options?: any): AxiosPromise<RateResponse>;
    /**
     * You can track a shipment by specifying the carrier and the shipment tracking number.
     * @summary Get tracking details
     * @param {TrackingData} trackingData
     * @param {string} [hub]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTracking(trackingData: TrackingData, hub?: string, options?: any): AxiosPromise<TrackingResponse>;
    /**
     * Schedule one or many parcels pickup
     * @summary Schedule a pickup
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {PickupRequest} pickupRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    schedulePickup(carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', pickupRequest: PickupRequest, options?: any): AxiosPromise<PickupResponse>;
    /**
     * You can track a shipment by specifying the carrier and the shipment tracking number.
     * @summary Track a shipment
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'fedex' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {string} trackingNumber
     * @param {string} [hub]
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    trackShipment(carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'fedex' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', trackingNumber: string, hub?: string, options?: any): AxiosPromise<TrackingResponse>;
    /**
     * Modify a scheduled pickup
     * @summary Update a pickup
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {PickupUpdateRequest} pickupUpdateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updatePickup(carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', pickupUpdateRequest: PickupUpdateRequest, options?: any): AxiosPromise<PickupResponse>;
    /**
     * Cancel a shipment and the label previously created
     * @summary Void a shipment label
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName
     * @param {ShipmentCancelRequest} shipmentCancelRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    voidLabel(carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', shipmentCancelRequest: ShipmentCancelRequest, options?: any): AxiosPromise<OperationResponse>;
};
/**
 * Request parameters for buyLabel operation in ProxyApi.
 * @export
 * @interface ProxyApiBuyLabelRequest
 */
export interface ProxyApiBuyLabelRequest {
    /**
     *
     * @type {ShippingRequest}
     * @memberof ProxyApiBuyLabel
     */
    readonly shippingRequest: ShippingRequest;
}
/**
 * Request parameters for cancelPickup operation in ProxyApi.
 * @export
 * @interface ProxyApiCancelPickupRequest
 */
export interface ProxyApiCancelPickupRequest {
    /**
     *
     * @type {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'}
     * @memberof ProxyApiCancelPickup
     */
    readonly carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress';
    /**
     *
     * @type {PickupCancelRequest}
     * @memberof ProxyApiCancelPickup
     */
    readonly pickupCancelRequest: PickupCancelRequest;
}
/**
 * Request parameters for fetchRates operation in ProxyApi.
 * @export
 * @interface ProxyApiFetchRatesRequest
 */
export interface ProxyApiFetchRatesRequest {
    /**
     *
     * @type {RateRequest}
     * @memberof ProxyApiFetchRates
     */
    readonly rateRequest: RateRequest;
}
/**
 * Request parameters for getTracking operation in ProxyApi.
 * @export
 * @interface ProxyApiGetTrackingRequest
 */
export interface ProxyApiGetTrackingRequest {
    /**
     *
     * @type {TrackingData}
     * @memberof ProxyApiGetTracking
     */
    readonly trackingData: TrackingData;
    /**
     *
     * @type {string}
     * @memberof ProxyApiGetTracking
     */
    readonly hub?: string;
}
/**
 * Request parameters for schedulePickup operation in ProxyApi.
 * @export
 * @interface ProxyApiSchedulePickupRequest
 */
export interface ProxyApiSchedulePickupRequest {
    /**
     *
     * @type {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'}
     * @memberof ProxyApiSchedulePickup
     */
    readonly carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress';
    /**
     *
     * @type {PickupRequest}
     * @memberof ProxyApiSchedulePickup
     */
    readonly pickupRequest: PickupRequest;
}
/**
 * Request parameters for trackShipment operation in ProxyApi.
 * @export
 * @interface ProxyApiTrackShipmentRequest
 */
export interface ProxyApiTrackShipmentRequest {
    /**
     *
     * @type {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'fedex' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'}
     * @memberof ProxyApiTrackShipment
     */
    readonly carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'fedex' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress';
    /**
     *
     * @type {string}
     * @memberof ProxyApiTrackShipment
     */
    readonly trackingNumber: string;
    /**
     *
     * @type {string}
     * @memberof ProxyApiTrackShipment
     */
    readonly hub?: string;
}
/**
 * Request parameters for updatePickup operation in ProxyApi.
 * @export
 * @interface ProxyApiUpdatePickupRequest
 */
export interface ProxyApiUpdatePickupRequest {
    /**
     *
     * @type {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'}
     * @memberof ProxyApiUpdatePickup
     */
    readonly carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress';
    /**
     *
     * @type {PickupUpdateRequest}
     * @memberof ProxyApiUpdatePickup
     */
    readonly pickupUpdateRequest: PickupUpdateRequest;
}
/**
 * Request parameters for voidLabel operation in ProxyApi.
 * @export
 * @interface ProxyApiVoidLabelRequest
 */
export interface ProxyApiVoidLabelRequest {
    /**
     *
     * @type {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'}
     * @memberof ProxyApiVoidLabel
     */
    readonly carrierName: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress';
    /**
     *
     * @type {ShipmentCancelRequest}
     * @memberof ProxyApiVoidLabel
     */
    readonly shipmentCancelRequest: ShipmentCancelRequest;
}
/**
 * ProxyApi - object-oriented interface
 * @export
 * @class ProxyApi
 * @extends {BaseAPI}
 */
export declare class ProxyApi extends BaseAPI {
    /**
     * Once the shipping rates are retrieved, provide the required info to submit the shipment by specifying your preferred rate.
     * @summary Buy a shipment label
     * @param {ProxyApiBuyLabelRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProxyApi
     */
    buyLabel(requestParameters: ProxyApiBuyLabelRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ShippingResponse, any>>;
    /**
     * Cancel a pickup previously scheduled
     * @summary Cancel a pickup
     * @param {ProxyApiCancelPickupRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProxyApi
     */
    cancelPickup(requestParameters: ProxyApiCancelPickupRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<OperationResponse, any>>;
    /**
     *  The Shipping process begins by fetching rates for your shipment. Use this service to fetch a shipping rates available.
     * @summary Fetch shipment rates
     * @param {ProxyApiFetchRatesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProxyApi
     */
    fetchRates(requestParameters: ProxyApiFetchRatesRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<RateResponse, any>>;
    /**
     * You can track a shipment by specifying the carrier and the shipment tracking number.
     * @summary Get tracking details
     * @param {ProxyApiGetTrackingRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProxyApi
     */
    getTracking(requestParameters: ProxyApiGetTrackingRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TrackingResponse, any>>;
    /**
     * Schedule one or many parcels pickup
     * @summary Schedule a pickup
     * @param {ProxyApiSchedulePickupRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProxyApi
     */
    schedulePickup(requestParameters: ProxyApiSchedulePickupRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PickupResponse, any>>;
    /**
     * You can track a shipment by specifying the carrier and the shipment tracking number.
     * @summary Track a shipment
     * @param {ProxyApiTrackShipmentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     * @memberof ProxyApi
     */
    trackShipment(requestParameters: ProxyApiTrackShipmentRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TrackingResponse, any>>;
    /**
     * Modify a scheduled pickup
     * @summary Update a pickup
     * @param {ProxyApiUpdatePickupRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProxyApi
     */
    updatePickup(requestParameters: ProxyApiUpdatePickupRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<PickupResponse, any>>;
    /**
     * Cancel a shipment and the label previously created
     * @summary Void a shipment label
     * @param {ProxyApiVoidLabelRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProxyApi
     */
    voidLabel(requestParameters: ProxyApiVoidLabelRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<OperationResponse, any>>;
}
/**
 * ShipmentsApi - axios parameter creator
 * @export
 */
export declare const ShipmentsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Void a shipment with the associated label.
     * @summary Cancel a shipment
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancel: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a new shipment instance.
     * @summary Create a shipment
     * @param {ShipmentData} shipmentData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create: (shipmentData: ShipmentData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve all shipments.
     * @summary List all shipments
     * @param {string} [address]
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} [carrierName]
     * @param {string} [createdAfter]
     * @param {string} [createdBefore]
     * @param {string} [keyword]
     * @param {string} [metadataKey]
     * @param {string} [metadataValue]
     * @param {string} [optionKey]
     * @param {string} [optionValue]
     * @param {string} [reference]
     * @param {string} [service]
     * @param {'cancelled' | 'delivered' | 'draft' | 'in_transit' | 'purchased' | 'shipped'} [status]
     * @param {string} [trackingNumber]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list: (address?: string, carrierName?: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', createdAfter?: string, createdBefore?: string, keyword?: string, metadataKey?: string, metadataValue?: string, optionKey?: string, optionValue?: string, reference?: string, service?: string, status?: 'cancelled' | 'delivered' | 'draft' | 'in_transit' | 'purchased' | 'shipped', trackingNumber?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Select your preferred rates to buy a shipment label.
     * @summary Buy a shipment label
     * @param {string} id
     * @param {ShipmentPurchaseData} shipmentPurchaseData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    purchase: (id: string, shipmentPurchaseData: ShipmentPurchaseData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Refresh the list of the shipment rates
     * @summary Fetch new shipment rates
     * @param {string} id
     * @param {ShipmentRateData} [shipmentRateData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rates: (id: string, shipmentRateData?: ShipmentRateData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a shipment.
     * @summary Retrieve a shipment
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This operation allows for updating properties of a shipment including `label_type`, `reference`, `payment`, `options` and `metadata`. It is not for editing the parcels of a shipment.
     * @summary Update a shipment
     * @param {string} id
     * @param {ShipmentUpdateData} [shipmentUpdateData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update: (id: string, shipmentUpdateData?: ShipmentUpdateData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ShipmentsApi - functional programming interface
 * @export
 */
export declare const ShipmentsApiFp: (configuration?: Configuration) => {
    /**
     * Void a shipment with the associated label.
     * @summary Cancel a shipment
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancel(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Shipment>>;
    /**
     * Create a new shipment instance.
     * @summary Create a shipment
     * @param {ShipmentData} shipmentData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create(shipmentData: ShipmentData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Shipment>>;
    /**
     * Retrieve all shipments.
     * @summary List all shipments
     * @param {string} [address]
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} [carrierName]
     * @param {string} [createdAfter]
     * @param {string} [createdBefore]
     * @param {string} [keyword]
     * @param {string} [metadataKey]
     * @param {string} [metadataValue]
     * @param {string} [optionKey]
     * @param {string} [optionValue]
     * @param {string} [reference]
     * @param {string} [service]
     * @param {'cancelled' | 'delivered' | 'draft' | 'in_transit' | 'purchased' | 'shipped'} [status]
     * @param {string} [trackingNumber]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(address?: string, carrierName?: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', createdAfter?: string, createdBefore?: string, keyword?: string, metadataKey?: string, metadataValue?: string, optionKey?: string, optionValue?: string, reference?: string, service?: string, status?: 'cancelled' | 'delivered' | 'draft' | 'in_transit' | 'purchased' | 'shipped', trackingNumber?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ShipmentList>>;
    /**
     * Select your preferred rates to buy a shipment label.
     * @summary Buy a shipment label
     * @param {string} id
     * @param {ShipmentPurchaseData} shipmentPurchaseData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    purchase(id: string, shipmentPurchaseData: ShipmentPurchaseData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Shipment>>;
    /**
     * Refresh the list of the shipment rates
     * @summary Fetch new shipment rates
     * @param {string} id
     * @param {ShipmentRateData} [shipmentRateData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rates(id: string, shipmentRateData?: ShipmentRateData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Shipment>>;
    /**
     * Retrieve a shipment.
     * @summary Retrieve a shipment
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Shipment>>;
    /**
     * This operation allows for updating properties of a shipment including `label_type`, `reference`, `payment`, `options` and `metadata`. It is not for editing the parcels of a shipment.
     * @summary Update a shipment
     * @param {string} id
     * @param {ShipmentUpdateData} [shipmentUpdateData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update(id: string, shipmentUpdateData?: ShipmentUpdateData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Shipment>>;
};
/**
 * ShipmentsApi - factory interface
 * @export
 */
export declare const ShipmentsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Void a shipment with the associated label.
     * @summary Cancel a shipment
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancel(id: string, options?: any): AxiosPromise<Shipment>;
    /**
     * Create a new shipment instance.
     * @summary Create a shipment
     * @param {ShipmentData} shipmentData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create(shipmentData: ShipmentData, options?: any): AxiosPromise<Shipment>;
    /**
     * Retrieve all shipments.
     * @summary List all shipments
     * @param {string} [address]
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} [carrierName]
     * @param {string} [createdAfter]
     * @param {string} [createdBefore]
     * @param {string} [keyword]
     * @param {string} [metadataKey]
     * @param {string} [metadataValue]
     * @param {string} [optionKey]
     * @param {string} [optionValue]
     * @param {string} [reference]
     * @param {string} [service]
     * @param {'cancelled' | 'delivered' | 'draft' | 'in_transit' | 'purchased' | 'shipped'} [status]
     * @param {string} [trackingNumber]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(address?: string, carrierName?: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', createdAfter?: string, createdBefore?: string, keyword?: string, metadataKey?: string, metadataValue?: string, optionKey?: string, optionValue?: string, reference?: string, service?: string, status?: 'cancelled' | 'delivered' | 'draft' | 'in_transit' | 'purchased' | 'shipped', trackingNumber?: string, options?: any): AxiosPromise<ShipmentList>;
    /**
     * Select your preferred rates to buy a shipment label.
     * @summary Buy a shipment label
     * @param {string} id
     * @param {ShipmentPurchaseData} shipmentPurchaseData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    purchase(id: string, shipmentPurchaseData: ShipmentPurchaseData, options?: any): AxiosPromise<Shipment>;
    /**
     * Refresh the list of the shipment rates
     * @summary Fetch new shipment rates
     * @param {string} id
     * @param {ShipmentRateData} [shipmentRateData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rates(id: string, shipmentRateData?: ShipmentRateData, options?: any): AxiosPromise<Shipment>;
    /**
     * Retrieve a shipment.
     * @summary Retrieve a shipment
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: any): AxiosPromise<Shipment>;
    /**
     * This operation allows for updating properties of a shipment including `label_type`, `reference`, `payment`, `options` and `metadata`. It is not for editing the parcels of a shipment.
     * @summary Update a shipment
     * @param {string} id
     * @param {ShipmentUpdateData} [shipmentUpdateData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update(id: string, shipmentUpdateData?: ShipmentUpdateData, options?: any): AxiosPromise<Shipment>;
};
/**
 * Request parameters for cancel operation in ShipmentsApi.
 * @export
 * @interface ShipmentsApiCancelRequest
 */
export interface ShipmentsApiCancelRequest {
    /**
     *
     * @type {string}
     * @memberof ShipmentsApiCancel
     */
    readonly id: string;
}
/**
 * Request parameters for create operation in ShipmentsApi.
 * @export
 * @interface ShipmentsApiCreateRequest
 */
export interface ShipmentsApiCreateRequest {
    /**
     *
     * @type {ShipmentData}
     * @memberof ShipmentsApiCreate
     */
    readonly shipmentData: ShipmentData;
}
/**
 * Request parameters for list operation in ShipmentsApi.
 * @export
 * @interface ShipmentsApiListRequest
 */
export interface ShipmentsApiListRequest {
    /**
     *
     * @type {string}
     * @memberof ShipmentsApiList
     */
    readonly address?: string;
    /**
     *
     * @type {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'}
     * @memberof ShipmentsApiList
     */
    readonly carrierName?: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress';
    /**
     *
     * @type {string}
     * @memberof ShipmentsApiList
     */
    readonly createdAfter?: string;
    /**
     *
     * @type {string}
     * @memberof ShipmentsApiList
     */
    readonly createdBefore?: string;
    /**
     *
     * @type {string}
     * @memberof ShipmentsApiList
     */
    readonly keyword?: string;
    /**
     *
     * @type {string}
     * @memberof ShipmentsApiList
     */
    readonly metadataKey?: string;
    /**
     *
     * @type {string}
     * @memberof ShipmentsApiList
     */
    readonly metadataValue?: string;
    /**
     *
     * @type {string}
     * @memberof ShipmentsApiList
     */
    readonly optionKey?: string;
    /**
     *
     * @type {string}
     * @memberof ShipmentsApiList
     */
    readonly optionValue?: string;
    /**
     *
     * @type {string}
     * @memberof ShipmentsApiList
     */
    readonly reference?: string;
    /**
     *
     * @type {string}
     * @memberof ShipmentsApiList
     */
    readonly service?: string;
    /**
     *
     * @type {'cancelled' | 'delivered' | 'draft' | 'in_transit' | 'purchased' | 'shipped'}
     * @memberof ShipmentsApiList
     */
    readonly status?: 'cancelled' | 'delivered' | 'draft' | 'in_transit' | 'purchased' | 'shipped';
    /**
     *
     * @type {string}
     * @memberof ShipmentsApiList
     */
    readonly trackingNumber?: string;
}
/**
 * Request parameters for purchase operation in ShipmentsApi.
 * @export
 * @interface ShipmentsApiPurchaseRequest
 */
export interface ShipmentsApiPurchaseRequest {
    /**
     *
     * @type {string}
     * @memberof ShipmentsApiPurchase
     */
    readonly id: string;
    /**
     *
     * @type {ShipmentPurchaseData}
     * @memberof ShipmentsApiPurchase
     */
    readonly shipmentPurchaseData: ShipmentPurchaseData;
}
/**
 * Request parameters for rates operation in ShipmentsApi.
 * @export
 * @interface ShipmentsApiRatesRequest
 */
export interface ShipmentsApiRatesRequest {
    /**
     *
     * @type {string}
     * @memberof ShipmentsApiRates
     */
    readonly id: string;
    /**
     *
     * @type {ShipmentRateData}
     * @memberof ShipmentsApiRates
     */
    readonly shipmentRateData?: ShipmentRateData;
}
/**
 * Request parameters for retrieve operation in ShipmentsApi.
 * @export
 * @interface ShipmentsApiRetrieveRequest
 */
export interface ShipmentsApiRetrieveRequest {
    /**
     *
     * @type {string}
     * @memberof ShipmentsApiRetrieve
     */
    readonly id: string;
}
/**
 * Request parameters for update operation in ShipmentsApi.
 * @export
 * @interface ShipmentsApiUpdateRequest
 */
export interface ShipmentsApiUpdateRequest {
    /**
     *
     * @type {string}
     * @memberof ShipmentsApiUpdate
     */
    readonly id: string;
    /**
     *
     * @type {ShipmentUpdateData}
     * @memberof ShipmentsApiUpdate
     */
    readonly shipmentUpdateData?: ShipmentUpdateData;
}
/**
 * ShipmentsApi - object-oriented interface
 * @export
 * @class ShipmentsApi
 * @extends {BaseAPI}
 */
export declare class ShipmentsApi extends BaseAPI {
    /**
     * Void a shipment with the associated label.
     * @summary Cancel a shipment
     * @param {ShipmentsApiCancelRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    cancel(requestParameters: ShipmentsApiCancelRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Shipment, any>>;
    /**
     * Create a new shipment instance.
     * @summary Create a shipment
     * @param {ShipmentsApiCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    create(requestParameters: ShipmentsApiCreateRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Shipment, any>>;
    /**
     * Retrieve all shipments.
     * @summary List all shipments
     * @param {ShipmentsApiListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    list(requestParameters?: ShipmentsApiListRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ShipmentList, any>>;
    /**
     * Select your preferred rates to buy a shipment label.
     * @summary Buy a shipment label
     * @param {ShipmentsApiPurchaseRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    purchase(requestParameters: ShipmentsApiPurchaseRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Shipment, any>>;
    /**
     * Refresh the list of the shipment rates
     * @summary Fetch new shipment rates
     * @param {ShipmentsApiRatesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    rates(requestParameters: ShipmentsApiRatesRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Shipment, any>>;
    /**
     * Retrieve a shipment.
     * @summary Retrieve a shipment
     * @param {ShipmentsApiRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    retrieve(requestParameters: ShipmentsApiRetrieveRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Shipment, any>>;
    /**
     * This operation allows for updating properties of a shipment including `label_type`, `reference`, `payment`, `options` and `metadata`. It is not for editing the parcels of a shipment.
     * @summary Update a shipment
     * @param {ShipmentsApiUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentsApi
     */
    update(requestParameters: ShipmentsApiUpdateRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Shipment, any>>;
}
/**
 * TrackersApi - axios parameter creator
 * @export
 */
export declare const TrackersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * This API creates or retrieves (if existent) a tracking status object containing the details and events of a shipping in progress.
     * @summary Add a package tracker
     * @param {TrackingData} trackingData
     * @param {string} [hub]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    add: (trackingData: TrackingData, hub?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This API creates or retrieves (if existent) a tracking status object containing the details and events of a shipping in progress.
     * @summary Create a package tracker
     * @param {string} carrierName
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'fedex' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName2
     * @param {string} trackingNumber
     * @param {string} [hub]
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    create: (carrierName: string, carrierName2: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'fedex' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', trackingNumber: string, hub?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve all shipment trackers.
     * @summary List all package trackers
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} [carrierName]
     * @param {string} [createdAfter]
     * @param {string} [createdBefore]
     * @param {'delivered' | 'in_transit' | 'incident' | 'pending' | 'unknown'} [status]
     * @param {string} [trackingNumber]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list: (carrierName?: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', createdAfter?: string, createdBefore?: string, status?: 'delivered' | 'in_transit' | 'incident' | 'pending' | 'unknown', trackingNumber?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Discard a package tracker.
     * @summary Discard a package tracker
     * @param {string} idOrTrackingNumber
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    remove: (idOrTrackingNumber: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a package tracker
     * @summary Retrieves a package tracker
     * @param {string} idOrTrackingNumber
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieves: (idOrTrackingNumber: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Mixin to log requests
     * @summary Update tracker data
     * @param {string} idOrTrackingNumber
     * @param {TrackerUpdateData} [trackerUpdateData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update: (idOrTrackingNumber: string, trackerUpdateData?: TrackerUpdateData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TrackersApi - functional programming interface
 * @export
 */
export declare const TrackersApiFp: (configuration?: Configuration) => {
    /**
     * This API creates or retrieves (if existent) a tracking status object containing the details and events of a shipping in progress.
     * @summary Add a package tracker
     * @param {TrackingData} trackingData
     * @param {string} [hub]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    add(trackingData: TrackingData, hub?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TrackingStatus>>;
    /**
     * This API creates or retrieves (if existent) a tracking status object containing the details and events of a shipping in progress.
     * @summary Create a package tracker
     * @param {string} carrierName
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'fedex' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName2
     * @param {string} trackingNumber
     * @param {string} [hub]
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    create(carrierName: string, carrierName2: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'fedex' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', trackingNumber: string, hub?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TrackingStatus>>;
    /**
     * Retrieve all shipment trackers.
     * @summary List all package trackers
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} [carrierName]
     * @param {string} [createdAfter]
     * @param {string} [createdBefore]
     * @param {'delivered' | 'in_transit' | 'incident' | 'pending' | 'unknown'} [status]
     * @param {string} [trackingNumber]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(carrierName?: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', createdAfter?: string, createdBefore?: string, status?: 'delivered' | 'in_transit' | 'incident' | 'pending' | 'unknown', trackingNumber?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TrackerList>>;
    /**
     * Discard a package tracker.
     * @summary Discard a package tracker
     * @param {string} idOrTrackingNumber
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    remove(idOrTrackingNumber: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TrackingStatus>>;
    /**
     * Retrieve a package tracker
     * @summary Retrieves a package tracker
     * @param {string} idOrTrackingNumber
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieves(idOrTrackingNumber: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TrackingStatus>>;
    /**
     * Mixin to log requests
     * @summary Update tracker data
     * @param {string} idOrTrackingNumber
     * @param {TrackerUpdateData} [trackerUpdateData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update(idOrTrackingNumber: string, trackerUpdateData?: TrackerUpdateData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TrackingStatus>>;
};
/**
 * TrackersApi - factory interface
 * @export
 */
export declare const TrackersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * This API creates or retrieves (if existent) a tracking status object containing the details and events of a shipping in progress.
     * @summary Add a package tracker
     * @param {TrackingData} trackingData
     * @param {string} [hub]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    add(trackingData: TrackingData, hub?: string, options?: any): AxiosPromise<TrackingStatus>;
    /**
     * This API creates or retrieves (if existent) a tracking status object containing the details and events of a shipping in progress.
     * @summary Create a package tracker
     * @param {string} carrierName
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'fedex' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} carrierName2
     * @param {string} trackingNumber
     * @param {string} [hub]
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     */
    create(carrierName: string, carrierName2: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'fedex' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', trackingNumber: string, hub?: string, options?: any): AxiosPromise<TrackingStatus>;
    /**
     * Retrieve all shipment trackers.
     * @summary List all package trackers
     * @param {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'} [carrierName]
     * @param {string} [createdAfter]
     * @param {string} [createdBefore]
     * @param {'delivered' | 'in_transit' | 'incident' | 'pending' | 'unknown'} [status]
     * @param {string} [trackingNumber]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(carrierName?: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress', createdAfter?: string, createdBefore?: string, status?: 'delivered' | 'in_transit' | 'incident' | 'pending' | 'unknown', trackingNumber?: string, options?: any): AxiosPromise<TrackerList>;
    /**
     * Discard a package tracker.
     * @summary Discard a package tracker
     * @param {string} idOrTrackingNumber
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    remove(idOrTrackingNumber: string, options?: any): AxiosPromise<TrackingStatus>;
    /**
     * Retrieve a package tracker
     * @summary Retrieves a package tracker
     * @param {string} idOrTrackingNumber
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieves(idOrTrackingNumber: string, options?: any): AxiosPromise<TrackingStatus>;
    /**
     * Mixin to log requests
     * @summary Update tracker data
     * @param {string} idOrTrackingNumber
     * @param {TrackerUpdateData} [trackerUpdateData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update(idOrTrackingNumber: string, trackerUpdateData?: TrackerUpdateData, options?: any): AxiosPromise<TrackingStatus>;
};
/**
 * Request parameters for add operation in TrackersApi.
 * @export
 * @interface TrackersApiAddRequest
 */
export interface TrackersApiAddRequest {
    /**
     *
     * @type {TrackingData}
     * @memberof TrackersApiAdd
     */
    readonly trackingData: TrackingData;
    /**
     *
     * @type {string}
     * @memberof TrackersApiAdd
     */
    readonly hub?: string;
}
/**
 * Request parameters for create operation in TrackersApi.
 * @export
 * @interface TrackersApiCreateRequest
 */
export interface TrackersApiCreateRequest {
    /**
     *
     * @type {string}
     * @memberof TrackersApiCreate
     */
    readonly carrierName: string;
    /**
     *
     * @type {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'fedex' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'}
     * @memberof TrackersApiCreate
     */
    readonly carrierName2: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'fedex' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress';
    /**
     *
     * @type {string}
     * @memberof TrackersApiCreate
     */
    readonly trackingNumber: string;
    /**
     *
     * @type {string}
     * @memberof TrackersApiCreate
     */
    readonly hub?: string;
}
/**
 * Request parameters for list operation in TrackersApi.
 * @export
 * @interface TrackersApiListRequest
 */
export interface TrackersApiListRequest {
    /**
     *
     * @type {'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress'}
     * @memberof TrackersApiList
     */
    readonly carrierName?: 'amazon_mws' | 'aramex' | 'australiapost' | 'canadapost' | 'canpar' | 'chronopost' | 'dhl_express' | 'dhl_poland' | 'dhl_universal' | 'dicom' | 'dpdhl' | 'easypost' | 'eshipper' | 'fedex' | 'freightcom' | 'generic' | 'purolator' | 'royalmail' | 'sendle' | 'sf_express' | 'tnt' | 'ups' | 'ups_freight' | 'usps' | 'usps_international' | 'yanwen' | 'yunexpress';
    /**
     *
     * @type {string}
     * @memberof TrackersApiList
     */
    readonly createdAfter?: string;
    /**
     *
     * @type {string}
     * @memberof TrackersApiList
     */
    readonly createdBefore?: string;
    /**
     *
     * @type {'delivered' | 'in_transit' | 'incident' | 'pending' | 'unknown'}
     * @memberof TrackersApiList
     */
    readonly status?: 'delivered' | 'in_transit' | 'incident' | 'pending' | 'unknown';
    /**
     *
     * @type {string}
     * @memberof TrackersApiList
     */
    readonly trackingNumber?: string;
}
/**
 * Request parameters for remove operation in TrackersApi.
 * @export
 * @interface TrackersApiRemoveRequest
 */
export interface TrackersApiRemoveRequest {
    /**
     *
     * @type {string}
     * @memberof TrackersApiRemove
     */
    readonly idOrTrackingNumber: string;
}
/**
 * Request parameters for retrieves operation in TrackersApi.
 * @export
 * @interface TrackersApiRetrievesRequest
 */
export interface TrackersApiRetrievesRequest {
    /**
     *
     * @type {string}
     * @memberof TrackersApiRetrieves
     */
    readonly idOrTrackingNumber: string;
}
/**
 * Request parameters for update operation in TrackersApi.
 * @export
 * @interface TrackersApiUpdateRequest
 */
export interface TrackersApiUpdateRequest {
    /**
     *
     * @type {string}
     * @memberof TrackersApiUpdate
     */
    readonly idOrTrackingNumber: string;
    /**
     *
     * @type {TrackerUpdateData}
     * @memberof TrackersApiUpdate
     */
    readonly trackerUpdateData?: TrackerUpdateData;
}
/**
 * TrackersApi - object-oriented interface
 * @export
 * @class TrackersApi
 * @extends {BaseAPI}
 */
export declare class TrackersApi extends BaseAPI {
    /**
     * This API creates or retrieves (if existent) a tracking status object containing the details and events of a shipping in progress.
     * @summary Add a package tracker
     * @param {TrackersApiAddRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrackersApi
     */
    add(requestParameters: TrackersApiAddRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TrackingStatus, any>>;
    /**
     * This API creates or retrieves (if existent) a tracking status object containing the details and events of a shipping in progress.
     * @summary Create a package tracker
     * @param {TrackersApiCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @deprecated
     * @throws {RequiredError}
     * @memberof TrackersApi
     */
    create(requestParameters: TrackersApiCreateRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TrackingStatus, any>>;
    /**
     * Retrieve all shipment trackers.
     * @summary List all package trackers
     * @param {TrackersApiListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrackersApi
     */
    list(requestParameters?: TrackersApiListRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TrackerList, any>>;
    /**
     * Discard a package tracker.
     * @summary Discard a package tracker
     * @param {TrackersApiRemoveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrackersApi
     */
    remove(requestParameters: TrackersApiRemoveRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TrackingStatus, any>>;
    /**
     * Retrieve a package tracker
     * @summary Retrieves a package tracker
     * @param {TrackersApiRetrievesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrackersApi
     */
    retrieves(requestParameters: TrackersApiRetrievesRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TrackingStatus, any>>;
    /**
     * Mixin to log requests
     * @summary Update tracker data
     * @param {TrackersApiUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrackersApi
     */
    update(requestParameters: TrackersApiUpdateRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TrackingStatus, any>>;
}
/**
 * WebhooksApi - axios parameter creator
 * @export
 */
export declare const WebhooksApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create a new webhook.
     * @summary Create a webhook
     * @param {WebhookData} webhookData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create: (webhookData: WebhookData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve all webhooks.
     * @summary List all webhooks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Remove a webhook.
     * @summary Remove a webhook
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    remove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a webhook.
     * @summary Retrieve a webhook
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * test a webhook.
     * @summary Test a webhook
     * @param {string} id
     * @param {WebhookTestRequest} webhookTestRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    test: (id: string, webhookTestRequest: WebhookTestRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * update a webhook.
     * @summary Update a webhook
     * @param {string} id
     * @param {PatchedWebhookData} [patchedWebhookData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update: (id: string, patchedWebhookData?: PatchedWebhookData, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * WebhooksApi - functional programming interface
 * @export
 */
export declare const WebhooksApiFp: (configuration?: Configuration) => {
    /**
     * Create a new webhook.
     * @summary Create a webhook
     * @param {WebhookData} webhookData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create(webhookData: WebhookData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Webhook>>;
    /**
     * Retrieve all webhooks.
     * @summary List all webhooks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<WebhookList>>;
    /**
     * Remove a webhook.
     * @summary Remove a webhook
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    remove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Operation>>;
    /**
     * Retrieve a webhook.
     * @summary Retrieve a webhook
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Webhook>>;
    /**
     * test a webhook.
     * @summary Test a webhook
     * @param {string} id
     * @param {WebhookTestRequest} webhookTestRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    test(id: string, webhookTestRequest: WebhookTestRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Operation>>;
    /**
     * update a webhook.
     * @summary Update a webhook
     * @param {string} id
     * @param {PatchedWebhookData} [patchedWebhookData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update(id: string, patchedWebhookData?: PatchedWebhookData, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Webhook>>;
};
/**
 * WebhooksApi - factory interface
 * @export
 */
export declare const WebhooksApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create a new webhook.
     * @summary Create a webhook
     * @param {WebhookData} webhookData
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    create(webhookData: WebhookData, options?: any): AxiosPromise<Webhook>;
    /**
     * Retrieve all webhooks.
     * @summary List all webhooks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    list(options?: any): AxiosPromise<WebhookList>;
    /**
     * Remove a webhook.
     * @summary Remove a webhook
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    remove(id: string, options?: any): AxiosPromise<Operation>;
    /**
     * Retrieve a webhook.
     * @summary Retrieve a webhook
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieve(id: string, options?: any): AxiosPromise<Webhook>;
    /**
     * test a webhook.
     * @summary Test a webhook
     * @param {string} id
     * @param {WebhookTestRequest} webhookTestRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    test(id: string, webhookTestRequest: WebhookTestRequest, options?: any): AxiosPromise<Operation>;
    /**
     * update a webhook.
     * @summary Update a webhook
     * @param {string} id
     * @param {PatchedWebhookData} [patchedWebhookData]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    update(id: string, patchedWebhookData?: PatchedWebhookData, options?: any): AxiosPromise<Webhook>;
};
/**
 * Request parameters for create operation in WebhooksApi.
 * @export
 * @interface WebhooksApiCreateRequest
 */
export interface WebhooksApiCreateRequest {
    /**
     *
     * @type {WebhookData}
     * @memberof WebhooksApiCreate
     */
    readonly webhookData: WebhookData;
}
/**
 * Request parameters for remove operation in WebhooksApi.
 * @export
 * @interface WebhooksApiRemoveRequest
 */
export interface WebhooksApiRemoveRequest {
    /**
     *
     * @type {string}
     * @memberof WebhooksApiRemove
     */
    readonly id: string;
}
/**
 * Request parameters for retrieve operation in WebhooksApi.
 * @export
 * @interface WebhooksApiRetrieveRequest
 */
export interface WebhooksApiRetrieveRequest {
    /**
     *
     * @type {string}
     * @memberof WebhooksApiRetrieve
     */
    readonly id: string;
}
/**
 * Request parameters for test operation in WebhooksApi.
 * @export
 * @interface WebhooksApiTestRequest
 */
export interface WebhooksApiTestRequest {
    /**
     *
     * @type {string}
     * @memberof WebhooksApiTest
     */
    readonly id: string;
    /**
     *
     * @type {WebhookTestRequest}
     * @memberof WebhooksApiTest
     */
    readonly webhookTestRequest: WebhookTestRequest;
}
/**
 * Request parameters for update operation in WebhooksApi.
 * @export
 * @interface WebhooksApiUpdateRequest
 */
export interface WebhooksApiUpdateRequest {
    /**
     *
     * @type {string}
     * @memberof WebhooksApiUpdate
     */
    readonly id: string;
    /**
     *
     * @type {PatchedWebhookData}
     * @memberof WebhooksApiUpdate
     */
    readonly patchedWebhookData?: PatchedWebhookData;
}
/**
 * WebhooksApi - object-oriented interface
 * @export
 * @class WebhooksApi
 * @extends {BaseAPI}
 */
export declare class WebhooksApi extends BaseAPI {
    /**
     * Create a new webhook.
     * @summary Create a webhook
     * @param {WebhooksApiCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebhooksApi
     */
    create(requestParameters: WebhooksApiCreateRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Webhook, any>>;
    /**
     * Retrieve all webhooks.
     * @summary List all webhooks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebhooksApi
     */
    list(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<WebhookList, any>>;
    /**
     * Remove a webhook.
     * @summary Remove a webhook
     * @param {WebhooksApiRemoveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebhooksApi
     */
    remove(requestParameters: WebhooksApiRemoveRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Operation, any>>;
    /**
     * Retrieve a webhook.
     * @summary Retrieve a webhook
     * @param {WebhooksApiRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebhooksApi
     */
    retrieve(requestParameters: WebhooksApiRetrieveRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Webhook, any>>;
    /**
     * test a webhook.
     * @summary Test a webhook
     * @param {WebhooksApiTestRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebhooksApi
     */
    test(requestParameters: WebhooksApiTestRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Operation, any>>;
    /**
     * update a webhook.
     * @summary Update a webhook
     * @param {WebhooksApiUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebhooksApi
     */
    update(requestParameters: WebhooksApiUpdateRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Webhook, any>>;
}
